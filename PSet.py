import FWCore.ParameterSet.Config as cms

process = cms.Process("RECO")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('/store/data/Run2012C/SingleMu/RAW/v1/000/201/624/FC7C9690-C0ED-E111-AE93-003048D2BC52.root')
)
process.ALCARECOTkAlLAST0Producer = cms.EDProducer("LaserAlignmentT0Producer",
    DigiProducerList = cms.VPSet(cms.PSet(
        DigiLabel = cms.string('ZeroSuppressed'),
        DigiType = cms.string('Processed'),
        DigiProducer = cms.string('ALCARECOTkAlLASsiStripDigis')
    ))
)


process.ALCARECOTkAlLASsiStripDigis = cms.EDProducer("SiStripRawToDigiModule",
    UseDaqRegister = cms.bool(False),
    ProductLabel = cms.InputTag("hltTrackerCalibrationRaw"),
    MarkModulesOnMissingFeds = cms.bool(True),
    UnpackCommonModeValues = cms.bool(False),
    AppendedBytes = cms.int32(0),
    UseFedKey = cms.bool(False),
    ErrorThreshold = cms.uint32(7174),
    TriggerFedId = cms.int32(0),
    DoAPVEmulatorCheck = cms.bool(False),
    UnpackBadChannels = cms.bool(False),
    DoAllCorruptBufferChecks = cms.bool(False)
)


process.APVPhases = cms.EDProducer("APVCyclePhaseProducerFromL1TS",
    defaultPartitionNames = cms.vstring('TI', 
        'TO', 
        'TP', 
        'TM'),
    magicOffset = cms.untracked.int32(258),
    l1TSCollection = cms.InputTag("scalersRawToDigi"),
    defaultPhases = cms.vint32(60, 60, 60, 60)
)


process.BeamHaloSummary = cms.EDProducer("BeamHaloSummaryProducer",
    l_HcalPhiWedgeConfidence = cms.double(0.7),
    t_EcalSuperClusterSize = cms.int32(3),
    l_EcalSuperClusterEnergy = cms.double(10.0),
    l_EcalPhiWedgeConfidence = cms.double(0.7),
    t_EcalPhiWedgeEnergy = cms.double(20.0),
    t_EcalPhiWedgeConfidence = cms.double(0.9),
    l_HcalPhiWedgeEnergy = cms.double(20.0),
    t_EcalShowerShapesRoundness = cms.double(0.23),
    l_HcalPhiWedgeConstituents = cms.int32(6),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    l_EcalShowerShapesRoundness = cms.double(0.41),
    l_EcalSuperClusterSize = cms.int32(3),
    t_HcalPhiWedgeEnergy = cms.double(25.0),
    t_HcalPhiWedgeConfidence = cms.double(0.9),
    t_EcalShowerShapesAngle = cms.double(0.51),
    t_EcalPhiWedgeConstituents = cms.int32(8),
    l_EcalPhiWedgeEnergy = cms.double(10.0),
    GlobalHaloDataLabel = cms.InputTag("GlobalHaloData"),
    l_HcalPhiWedgeToF = cms.double(-100.0),
    t_HcalPhiWedgeToF = cms.double(-100.0),
    t_HcalPhiWedgeConstituents = cms.int32(8),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    t_EcalPhiWedgeToF = cms.double(-200.0),
    l_EcalPhiWedgeConstituents = cms.int32(6),
    t_EcalSuperClusterEnergy = cms.double(10.0),
    l_EcalPhiWedgeToF = cms.double(-200.0),
    l_EcalShowerShapesAngle = cms.double(0.51),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.BestZee = cms.EDProducer("BestMassZArbitrationProducer",
    ZCandidateCollection = cms.InputTag("ZeeCandElectronTrack")
)


process.BestZmm = cms.EDProducer("BestMassZArbitrationProducer",
    ZCandidateCollection = cms.InputTag("ZmmCandMuonTrack")
)


process.CSCHaloData = cms.EDProducer("CSCHaloDataProducer",
    ExpectedBX = cms.int32(3),
    RecHitTime0 = cms.double(0.0),
    MinOuterMomentumTheta = cms.double(0.1),
    SALabel = cms.InputTag("standAloneMuons"),
    MatchingDPhiThreshold = cms.double(0.18),
    MaxOuterMomentumTheta = cms.double(3.0),
    DphiParam = cms.double(1.0),
    RecHitTimeWindow = cms.double(25.0),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite'),
        RPCLayers = cms.bool(True)
    ),
    DetaParam = cms.double(0.1),
    InnerRMinParam = cms.double(0.0),
    MaxFreeInverseBeta = cms.double(0.0),
    MaxDtMuonSegment = cms.double(-10.0),
    MuonLabel = cms.InputTag("muons"),
    MatchParameters = cms.PSet(
        DTsegments = cms.InputTag("dt4DSegments"),
        CSCsegments = cms.InputTag("cscSegments"),
        DTradius = cms.double(0.01),
        TightMatchDT = cms.bool(False),
        TightMatchCSC = cms.bool(True)
    ),
    MaxSegmentPhiDiff = cms.double(0.35),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    InnerRMaxParam = cms.double(99999.0),
    MaxSegmentRDiff = cms.double(10.0),
    L1MuGMTReadoutLabel = cms.InputTag("gtDigis"),
    MaxSegmentTheta = cms.double(0.7),
    HLTResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HLTBitLabel = cms.VInputTag(cms.InputTag("HLT_CSCBeamHalo"), cms.InputTag("HLT_CSCBeamHaloOverlapRing1"), cms.InputTag("HLT_CSCBeamHaloOverlapRing2"), cms.InputTag("HLT_CSCBeamHaloRing2or3")),
    NormChi2Param = cms.double(8.0),
    ALCTDigiLabel = cms.InputTag("muonCSCDigis","MuonCSCALCTDigi"),
    OuterRMaxParam = cms.double(99999.0),
    MatchingDEtaThreshold = cms.double(0.4),
    OuterRMinParam = cms.double(0.0),
    MatchingDWireThreshold = cms.int32(5),
    CosmicMuonLabel = cms.InputTag("muonsFromCosmics"),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits")
)


process.CastorTowerReco = cms.EDProducer("CastorTowerProducer",
    mintime = cms.untracked.double(-99999.0),
    towercut = cms.untracked.double(0.65),
    maxtime = cms.untracked.double(99999.0),
    inputprocess = cms.untracked.string('castorreco')
)


process.CkfElectronCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfElectronTrajectoryBuilder')
)


process.CleanedPFJets = cms.EDProducer("TauValJetViewCleaner",
    deltaRMin = cms.double(0.15),
    srcObjectsToRemove = cms.VInputTag(cms.InputTag("muons"), cms.InputTag("gsfElectrons")),
    srcObject = cms.InputTag("kinematicSelectedPFJets")
)


process.CosmicMuonSeed = cms.EDProducer("CosmicMuonSeedGenerator",
    DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    EnableDTMeasurement = cms.bool(True),
    MaxCSCChi2 = cms.double(300.0),
    MaxDTChi2 = cms.double(300.0),
    MaxSeeds = cms.int32(1000),
    EnableCSCMeasurement = cms.bool(True)
)


process.DiJProd = cms.EDProducer("AlCaDiJetsProducer",
    hbheInput = cms.InputTag("hbhereco"),
    jetsInput = cms.InputTag("iterativeCone5CaloJets"),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco")
)


process.EcalHaloData = cms.EDProducer("EcalHaloDataProducer",
    ESRecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    ESRecHitEnergyThresholdParam = cms.double(0.3),
    AngleCutParam = cms.double(0.51),
    EBRecHitEnergyThresholdParam = cms.double(0.3),
    RoundnessCutParam = cms.double(0.41),
    EERecHitEnergyThresholdParam = cms.double(0.3),
    NHitsEcalThresholdParam = cms.int32(4),
    SuperClusterLabel = cms.InputTag("correctedHybridSuperClusters"),
    EERecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    PhotonLabel = cms.InputTag("photons"),
    SumEcalEnergyThresholdParam = cms.double(10.0),
    EBRecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.ElBestPV = cms.EDProducer("HighestSumP4PrimaryVertexSelector",
    src = cms.InputTag("ElPrimaryVertexFilter")
)


process.ElIsoTracks = cms.EDProducer("IsoTracks",
    src = cms.InputTag("ElGoodTracks"),
    radius = cms.double(0.3),
    SumPtFraction = cms.double(0.5)
)


process.ElTrackCands = cms.EDProducer("ConcreteChargedCandidateProducer",
    src = cms.InputTag("ElTrackFromPV"),
    particleType = cms.string('e+')
)


process.ElTrackFromPV = cms.EDProducer("TrackFromPVSelector",
    max_dz = cms.double(0.1),
    srcTrack = cms.InputTag("ElIsoTracks"),
    srcVertex = cms.InputTag("ElBestPV"),
    max_dxy = cms.double(0.01)
)


process.ElZLegs = cms.EDProducer("CollectionFromZLegProducer",
    ZCandidateCollection = cms.InputTag("BestZee")
)


process.ElectronsFromPV = cms.EDProducer("GsfElectronFromPVSelector",
    max_dz = cms.double(0.1),
    srcElectron = cms.InputTag("selectedElectrons"),
    srcVertex = cms.InputTag("ElBestPV"),
    max_dxy = cms.double(0.01)
)


process.GammaJetProd = cms.EDProducer("AlCaGammaJetProducer",
    correctedIslandBarrelSuperClusterCollection = cms.string(''),
    hbheInput = cms.InputTag("hbhereco"),
    correctedIslandEndcapSuperClusterCollection = cms.string(''),
    correctedIslandEndcapSuperClusterProducer = cms.string('correctedIslandEndcapSuperClusters'),
    hoInput = cms.InputTag("horeco"),
    hfInput = cms.InputTag("hfreco"),
    correctedIslandBarrelSuperClusterProducer = cms.string('correctedIslandBarrelSuperClusters'),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    srcCalo = cms.VInputTag(cms.InputTag("iterativeCone7CaloJets")),
    inputTrackLabel = cms.untracked.string('generalTracks')
)


process.GlobalHaloData = cms.EDProducer("GlobalHaloDataProducer",
    EcalMaxMatchingRadiusParam = cms.double(330.0),
    EcalMinMatchingRadiusParam = cms.double(110.0),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    HcalMinMatchingRadiusParam = cms.double(110.0),
    CSCSegmentLabel = cms.InputTag("CSCSegments"),
    metLabel = cms.InputTag("met"),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    calotowerLabel = cms.InputTag("towerMaker"),
    CaloTowerEtThresholdParam = cms.double(0.3),
    HcalMaxMatchingRadiusParam = cms.double(490.0),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits"),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.GsfGlobalElectronTest = cms.EDProducer("GsfTrackProducer",
    src = cms.InputTag("CkfElectronCandidates"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('gsf'),
    Propagator = cms.string('fwdElectronPropagator')
)


process.GsfMatchedPhotonCands = cms.EDProducer("ElectronMatchedCandidateProducer",
    src = cms.InputTag("goodPhotons"),
    deltaR = cms.untracked.double(0.3),
    ReferenceElectronCollection = cms.untracked.InputTag("goodElectrons")
)


process.HBHENoiseFilterResultProducer = cms.EDProducer("HBHENoiseFilterResultProducer",
    IgnoreTS4TS5ifJetInLowBVRegion = cms.bool(False),
    jetlabel = cms.InputTag("ak5PFJets"),
    maxNHF = cms.double(0.9),
    minHPDHits = cms.int32(17),
    maxjetindex = cms.int32(0),
    minIsolatedNoiseSumE = cms.double(50.0),
    minHighEHitTime = cms.double(-9999.0),
    minHPDNoOtherHits = cms.int32(10),
    useTS4TS5 = cms.bool(True),
    noiselabel = cms.InputTag("hcalnoise"),
    minZeros = cms.int32(10),
    minNumIsolatedNoiseChannels = cms.int32(10),
    maxRatio = cms.double(999),
    maxHighEHitTime = cms.double(9999.0),
    maxRBXEMF = cms.double(-999.0),
    minRBXHits = cms.int32(999),
    minIsolatedNoiseSumEt = cms.double(25.0),
    minRatio = cms.double(-999)
)


process.HcalHaloData = cms.EDProducer("HcalHaloDataProducer",
    SumHcalEnergyThresholdParam = cms.double(18),
    NHitsHcalThresholdParam = cms.int32(4),
    HcalMinMatchingRadiusParam = cms.double(110.0),
    HORecHitLabel = cms.InputTag("horeco"),
    HBHERecHitLabel = cms.InputTag("hbhereco"),
    HERecHitEnergyThresholdParam = cms.double(0.5),
    HcalMaxMatchingRadiusParam = cms.double(490.0),
    HFRecHitLabel = cms.InputTag("hfreco"),
    HBRecHitEnergyThresholdParam = cms.double(0.5)
)


process.HcalNoiseProd = cms.EDProducer("AlCaEcalHcalReadoutsProducer",
    hbheInput = cms.InputTag("hbhereco"),
    MetSource = cms.InputTag("met"),
    TowerSource = cms.InputTag("towerMaker"),
    JetHCALminEnergyFraction = cms.double(0.98),
    JetSource = cms.InputTag("iterativeCone5CaloJets"),
    UseJet = cms.bool(True),
    JetMinE = cms.double(20),
    MetCut = cms.double(0),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    ecalPSInput = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    rawInput = cms.InputTag("rawDataCollector"),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseMET = cms.bool(False)
)


process.IsoProd = cms.EDProducer("AlCaIsoTracksProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    ECALMatrixFullSize = cms.int32(7),
    ClusterECALasMatrix = cms.bool(False),
    RIsolAtHCALSurface = cms.double(64.0),
    ECALClusterRadius = cms.double(9.0),
    HOInput = cms.InputTag("horeco"),
    l1JetVetoCone = cms.double(1.2),
    ECALRingInnerRadius = cms.double(15.0),
    InputTracksLabel = cms.InputTag("generalTracks"),
    vtxCut = cms.double(10.0),
    hltTriggerEventLabel = cms.InputTag("hltTriggerSummaryAOD"),
    MaxTrackEta = cms.double(2.0),
    SkipNeutralIsoCheck = cms.untracked.bool(True),
    MinNumberOfHitsInConeTracks = cms.int32(3),
    HBHEInput = cms.InputTag("hbhereco"),
    l1FilterLabel = cms.string('hltL1sJet52'),
    ECALInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    MinTrackPt = cms.double(0.0),
    hltMatchingCone = cms.double(0.2),
    MaxNearbyTrackEnergy = cms.double(2.0),
    MinTrackP = cms.double(10.0),
    ECALRingOuterRadius = cms.double(35.0),
    MinNumberOfHitsCoreTrack = cms.int32(8),
    hltL3FilterLabels = cms.vstring('hltIsolPixelTrackL3FilterHB', 
        'hltIsolPixelTrackL3FilterHE'),
    CheckHLTMatch = cms.bool(False),
    UseLowPtConeCorrection = cms.bool(False)
)


process.JPTAntiKt5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.JPTAntiKt5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    jets = cms.InputTag("TCTauJetPlusTrackZSPCorJetAntiKt5"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator")
)


process.JPTAntiKt5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("TCTauJetPlusTrackZSPCorJetAntiKt5"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices")
)


process.JPTCaloRecoTauProducer = cms.EDProducer("CaloRecoTauProducer",
    LeadTrack_minPt = cms.double(0.5),
    MatchingConeSize_min = cms.double(0.0),
    ECALSignalConeSizeFormula = cms.string('0.15'),
    TrackerIsolConeMetric = cms.string('DR'),
    TrackerSignalConeMetric = cms.string('DR'),
    EBRecHitsSource = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    IsolationTrack_minPt = cms.double(1.0),
    ECALSignalConeSize_min = cms.double(0.0),
    ECALRecHit_minEt = cms.double(0.5),
    MatchingConeMetric = cms.string('DR'),
    TrackerSignalConeSizeFormula = cms.string('0.07'),
    MatchingConeSizeFormula = cms.string('0.10'),
    TrackerIsolConeSize_min = cms.double(0.0),
    TrackerIsolConeSize_max = cms.double(0.6),
    TrackerSignalConeSize_max = cms.double(0.6),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    ESRecHitsSource = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    TrackerSignalConeSize_min = cms.double(0.0),
    JetPtMin = cms.double(0.0),
    AreaMetric_recoElements_maxabsEta = cms.double(2.5),
    ECALIsolConeMetric = cms.string('DR'),
    ECALIsolConeSizeFormula = cms.string('0.50'),
    ECALIsolConeSize_max = cms.double(0.6),
    EERecHitsSource = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    IsolationTrack_minHits = cms.uint32(0),
    ECALSignalConeMetric = cms.string('DR'),
    TrackLeadTrack_maxDZ = cms.double(1.0),
    Track_minPt = cms.double(0.5),
    TrackerIsolConeSizeFormula = cms.string('0.50'),
    ECALSignalConeSize_max = cms.double(0.6),
    ECALIsolConeSize_min = cms.double(0.0),
    UseTrackLeadTrackDZconstraint = cms.bool(True),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    CaloRecoTauTagInfoProducer = cms.InputTag("caloRecoTauTagInfoProducer"),
    MatchingConeSize_max = cms.double(0.6)
)


process.JPTeidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.JetPlusTrackZSPCorJetAntiKt5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(2),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetAntiKt5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(False)
)


process.JetPlusTrackZSPCorJetIcone5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(0),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("iterativeCone5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetIcone5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(False)
)


process.JetPlusTrackZSPCorJetSiscone5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("sisCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(1),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("sisCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetSiscone5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(False)
)


process.MEtoEDMConvertSiStrip = cms.EDProducer("MEtoEDMConverter",
    deleteAfterCopy = cms.untracked.bool(False),
    Verbosity = cms.untracked.int32(0),
    Frequency = cms.untracked.int32(50),
    Name = cms.untracked.string('MEtoEDMConverter'),
    MEPathToSave = cms.untracked.string('AlCaReco/SiStrip')
)


process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    deleteAfterCopy = cms.untracked.bool(True),
    Verbosity = cms.untracked.int32(0),
    Frequency = cms.untracked.int32(50),
    Name = cms.untracked.string('MEtoEDMConverter'),
    MEPathToSave = cms.untracked.string('')
)


process.MuBestPV = cms.EDProducer("HighestSumP4PrimaryVertexSelector",
    src = cms.InputTag("MuPrimaryVertexFilter")
)


process.MuIsoTracks = cms.EDProducer("IsoTracks",
    src = cms.InputTag("MuGoodTracks"),
    radius = cms.double(0.3),
    SumPtFraction = cms.double(0.5)
)


process.MuTrackCands = cms.EDProducer("ConcreteChargedCandidateProducer",
    src = cms.InputTag("MuTrackFromPV"),
    particleType = cms.string('mu+')
)


process.MuTrackFromPV = cms.EDProducer("TrackFromPVSelector",
    max_dz = cms.double(0.1),
    srcTrack = cms.InputTag("MuIsoTracks"),
    srcVertex = cms.InputTag("MuBestPV"),
    max_dxy = cms.double(0.01)
)


process.MuZLegs = cms.EDProducer("CollectionFromZLegProducer",
    ZCandidateCollection = cms.InputTag("BestZmm")
)


process.MuonSeed = cms.EDProducer("MuonSeedProducer",
    SMB_21 = cms.vdouble(1.043, -0.124, 0.0, 0.183, 0.0, 
        0.0),
    SMB_20 = cms.vdouble(1.011, -0.052, 0.0, 0.188, 0.0, 
        0.0),
    SMB_22 = cms.vdouble(1.474, -0.758, 0.0, 0.185, 0.0, 
        0.0),
    OL_2213 = cms.vdouble(0.117, 0.0, 0.0, 0.044, 0.0, 
        0.0),
    SME_11 = cms.vdouble(3.295, -1.527, 0.112, 0.378, 0.02, 
        0.0),
    SME_13 = cms.vdouble(-1.286, 1.711, 0.0, 0.356, 0.0, 
        0.0),
    SME_12 = cms.vdouble(0.102, 0.599, 0.0, 0.38, 0.0, 
        0.0),
    SME_32 = cms.vdouble(-0.901, 1.333, -0.47, 0.41, 0.073, 
        0.0),
    SME_31 = cms.vdouble(-1.594, 1.482, -0.317, 0.487, 0.097, 
        0.0),
    OL_1213 = cms.vdouble(0.96, -0.737, 0.0, 0.052, 0.0, 
        0.0),
    DT_13 = cms.vdouble(0.315, 0.068, -0.127, 0.051, -0.002, 
        0.0),
    DT_12 = cms.vdouble(0.183, 0.054, -0.087, 0.028, 0.002, 
        0.0),
    DT_14 = cms.vdouble(0.359, 0.052, -0.107, 0.072, -0.004, 
        0.0),
    OL_1232 = cms.vdouble(0.184, 0.0, 0.0, 0.066, 0.0, 
        0.0),
    CSC_23 = cms.vdouble(-0.081, 0.113, -0.029, 0.015, 0.008, 
        0.0),
    CSC_24 = cms.vdouble(0.004, 0.021, -0.002, 0.053, 0.0, 
        0.0),
    CSC_03 = cms.vdouble(0.787, -0.338, 0.029, 0.101, -0.008, 
        0.0),
    CSC_01 = cms.vdouble(0.166, 0.0, 0.0, 0.031, 0.0, 
        0.0),
    SMB_32 = cms.vdouble(0.67, -0.327, 0.0, 0.22, 0.0, 
        0.0),
    SMB_30 = cms.vdouble(0.505, -0.022, 0.0, 0.215, 0.0, 
        0.0),
    SMB_31 = cms.vdouble(0.549, -0.145, 0.0, 0.207, 0.0, 
        0.0),
    SMB_10 = cms.vdouble(1.387, -0.038, 0.0, 0.19, 0.0, 
        0.0),
    SMB_11 = cms.vdouble(1.247, 0.72, -0.802, 0.229, -0.075, 
        0.0),
    SMB_12 = cms.vdouble(2.128, -0.956, 0.0, 0.199, 0.0, 
        0.0),
    DT_23 = cms.vdouble(0.13, 0.023, -0.057, 0.028, 0.004, 
        0.0),
    DT_24 = cms.vdouble(0.176, 0.014, -0.051, 0.051, 0.003, 
        0.0),
    SME_21 = cms.vdouble(-0.529, 1.194, -0.358, 0.472, 0.086, 
        0.0),
    SME_22 = cms.vdouble(-1.207, 1.491, -0.251, 0.189, 0.243, 
        0.0),
    CSC_34 = cms.vdouble(0.062, -0.067, 0.019, 0.021, 0.003, 
        0.0),
    CSC_02 = cms.vdouble(0.612, -0.207, -0.0, 0.067, -0.001, 
        0.0),
    SME_42 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    SME_41 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    OL_2222 = cms.vdouble(0.107, 0.0, 0.0, 0.04, 0.0, 
        0.0),
    DT_34 = cms.vdouble(0.044, 0.004, -0.013, 0.029, 0.003, 
        0.0),
    CSC_14 = cms.vdouble(0.606, -0.181, -0.002, 0.111, -0.003, 
        0.0),
    OL_1222 = cms.vdouble(0.848, -0.591, 0.0, 0.062, 0.0, 
        0.0),
    CSC_13 = cms.vdouble(0.901, -1.302, 0.533, 0.045, 0.005, 
        0.0),
    CSC_12 = cms.vdouble(-0.161, 0.254, -0.047, 0.042, -0.007, 
        0.0),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    minimumSeedPt = cms.double(5.0),
    minCSCHitsPerSegment = cms.int32(4),
    maxDeltaPhiDT = cms.double(0.3),
    defaultSeedPt = cms.double(25.0),
    EnableCSCMeasurement = cms.bool(True),
    maxDeltaPhiOverlap = cms.double(0.25),
    minDTHitsPerSegment = cms.int32(2),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    maxEtaResolutionCSC = cms.double(0.06),
    maxPhiResolutionCSC = cms.double(0.03),
    maxDeltaEtaOverlap = cms.double(0.08),
    EnableDTMeasurement = cms.bool(True),
    DTSegmentLabel = cms.InputTag("dt4DSegments"),
    SeedPtSystematics = cms.double(0.1),
    maximumSeedPt = cms.double(3000.0),
    maxEtaResolutionDT = cms.double(0.02),
    maxDeltaEtaCSC = cms.double(0.2),
    maxDeltaPhiCSC = cms.double(0.5),
    maxDeltaEtaDT = cms.double(0.3),
    DebugMuonSeed = cms.bool(False),
    maxPhiResolutionDT = cms.double(0.03)
)


process.MuonsFromPV = cms.EDProducer("MuonFromPVSelector",
    srcMuon = cms.InputTag("selectedMuonsIso"),
    max_dz = cms.double(0.1),
    srcVertex = cms.InputTag("MuBestPV"),
    max_dxy = cms.double(0.01)
)


process.PassingHLT = cms.EDProducer("trgMatchGsfElectronProducer",
    triggerEventTag = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
    hltTags = cms.untracked.string('HLT_Ele*'),
    InputProducer = cms.InputTag("gsfElectrons"),
    triggerResultsTag = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.PhotonIDProd = cms.EDProducer("PhotonIDProducer",
    LoosePhotonHollowNTrkEB = cms.int32(999999999),
    LoosePhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LoosePhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LoosePhotonHollowNTrkEE = cms.int32(999999999),
    DoHcalTowerIsolationCut = cms.bool(True),
    LooseEMSolidTrkSlopeEB = cms.double(0.0),
    LooseEMSolidTrkSlopeEE = cms.double(0.0),
    LooseEMHollowTrkSlopeEE = cms.double(0.0),
    LooseEMHollowTrkSlopeEB = cms.double(0.0),
    DoSolidConeTrackIsolationCut = cms.bool(False),
    LooseEMHcalTowerIsoOffsetEB = cms.double(2.2),
    LooseEMHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonEtaWidthEB = cms.double(999999999),
    LooseEMSolidTrkEB = cms.double(999999999),
    LooseEMEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LooseEMEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LooseEMSolidTrkEE = cms.double(999999999),
    LoosePhotonEtaWidthEE = cms.double(999999999),
    DoSolidConeNTrkCut = cms.bool(False),
    TightPhotonSolidTrkEB = cms.double(999999999),
    TightPhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    LoosePhotonSolidTrkEB = cms.double(999999999),
    LoosePhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    TightPhotonHollowNTrkEB = cms.int32(999999999),
    TightPhotonHollowNTrkEE = cms.int32(999999999),
    DoHadOverEMCut = cms.bool(True),
    photonCutBasedIDTightLabel = cms.string('PhotonCutBasedIDTight'),
    LoosePhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    LoosePhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    photonLabel = cms.string(''),
    TightPhotonSolidTrkOffsetEB = cms.double(999999999),
    TightPhotonSolidTrkOffsetEE = cms.double(999999999),
    TightPhotonSolidTrkSlopeEE = cms.double(0.0),
    TightPhotonSolidTrkSlopeEB = cms.double(0.0),
    TightPhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    DoHollowConeNTrkCut = cms.bool(False),
    doCutBased = cms.bool(True),
    TightPhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonR9CutEE = cms.double(0.0),
    LoosePhotonR9CutEB = cms.double(0.0),
    RequireFiducial = cms.bool(False),
    TightPhotonHadOverEMEE = cms.double(0.05),
    LooseEMHollowNTrkEB = cms.int32(999999999),
    DoEcalRecHitIsolationCut = cms.bool(True),
    LooseEMHollowTrkOffsetEB = cms.double(999999999),
    LooseEMHollowTrkOffsetEE = cms.double(999999999),
    LooseEMHollowNTrkEE = cms.int32(999999999),
    LooseEMR9CutEE = cms.double(0.0),
    LooseEMR9CutEB = cms.double(0.0),
    LooseEMHadOverEMEE = cms.double(0.05),
    LooseEMHadOverEMEB = cms.double(0.05),
    photonCutBasedIDLooseEMLabel = cms.string('PhotonCutBasedIDLooseEM'),
    TightPhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    TightPhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    TightPhotonSolidNTrkEE = cms.int32(999999999),
    TightPhotonSolidNTrkEB = cms.int32(999999999),
    TightPhotonHollowTrkOffsetEB = cms.double(2.0),
    TightPhotonHollowTrkOffsetEE = cms.double(2.0),
    TightPhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHollowTrkSlopeEE = cms.double(0.001),
    DoR9Cut = cms.bool(False),
    LoosePhotonSolidTrkSlopeEB = cms.double(0.0),
    LoosePhotonSolidTrkSlopeEE = cms.double(0.0),
    TightPhotonEtaWidthEB = cms.double(0.013),
    TightPhotonEtaWidthEE = cms.double(0.03),
    DoHollowConeTrackIsolationCut = cms.bool(True),
    LooseEMHcalTowerIsoSlopeEB = cms.double(0.0025),
    LooseEMHcalTowerIsoSlopeEE = cms.double(0.0025),
    LoosePhotonHollowTrkSlopeEE = cms.double(0.001),
    LoosePhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHadOverEMEB = cms.double(0.05),
    DoEtaWidthCut = cms.bool(True),
    photonCutBasedIDLooseLabel = cms.string('PhotonCutBasedIDLoose'),
    LooseEMEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonR9CutEE = cms.double(0.0),
    TightPhotonR9CutEB = cms.double(0.0),
    DoEcalIsoRelativeCut = cms.bool(True),
    photonProducer = cms.string('photons'),
    LooseEMSolidNTrkEE = cms.int32(999999999),
    TightPhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMSolidNTrkEB = cms.int32(999999999),
    LooseEMEtaWidthEB = cms.double(999999999),
    LooseEMEtaWidthEE = cms.double(999999999),
    TightPhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    TightPhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonHollowTrkOffsetEB = cms.double(3.5),
    LoosePhotonHadOverEMEE = cms.double(0.05),
    LoosePhotonHadOverEMEB = cms.double(0.05),
    LoosePhotonHollowTrkOffsetEE = cms.double(3.5),
    LooseEMSolidTrkOffsetEB = cms.double(999999999),
    LooseEMSolidTrkOffsetEE = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEB = cms.double(999999999),
    LoosePhotonSolidNTrkEE = cms.int32(999999999),
    LoosePhotonSolidNTrkEB = cms.int32(999999999),
    LoosePhotonSolidTrkOffsetEE = cms.double(999999999)
)


process.RefitterForDedxDQMDeDx = cms.EDProducer("TrackRefitter",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    srcConstr = cms.InputTag(""),
    constraint = cms.string(''),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.SETMuonSeed = cms.EDProducer("SETMuonSeedProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    SETTrajBuilderParameters = cms.PSet(
        SMB_21 = cms.vdouble(0.918425, -0.141199, 0.0, 0.254515, -0.111848, 
            0.0),
        SMB_20 = cms.vdouble(0.861314, -0.16233, 0.0, 0.248879, -0.113879, 
            0.0),
        SMB_22 = cms.vdouble(1.308565, -0.701634, 0.0, -0.302861, 0.675785, 
            0.0),
        OL_2213 = cms.vdouble(0.563218, -0.493991, 0.0, 0.943776, -0.591751, 
            0.0),
        SME_11 = cms.vdouble(2.39479, -0.888663, 0.0, -4.604546, 3.623464, 
            0.0),
        SME_13 = cms.vdouble(0.398851, 0.028176, 0.0, 0.567015, 2.623232, 
            0.0),
        SMB_31 = cms.vdouble(0.398661, -0.024853, 0.0, 0.863324, -0.413048, 
            0.0),
        SME_32 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
            0.0),
        SME_31 = cms.vdouble(-0.588188, 0.316961, 0.0, -95.261732, 45.444051, 
            0.0),
        OL_1213 = cms.vdouble(0.960544, -0.75644, 0.0, 0.1636, 0.114178, 
            0.0),
        DT_13 = cms.vdouble(0.298842, 0.076531, -0.14293, 0.219923, -0.145026, 
            0.155638),
        DT_12 = cms.vdouble(0.176182, 0.058535, -0.090549, 0.202363, -0.203126, 
            0.222219),
        DT_14 = cms.vdouble(0.388423, 0.068698, -0.145925, 0.159515, 0.124299, 
            -0.133269),
        OL_1232 = cms.vdouble(0.162626, 0.000843, 0.0, 0.396271, 0.002791, 
            0.0),
        CSC_23 = cms.vdouble(-0.095236, 0.122061, -0.029852, -11.396689, 15.933598, 
            -4.267065),
        CSC_24 = cms.vdouble(-0.049769, 0.063087, -0.011029, -13.765978, 16.296143, 
            -4.241835),
        CSC_03 = cms.vdouble(0.498992, -0.086235, -0.025772, 2.761006, -2.667607, 
            0.72802),
        CSC_01 = cms.vdouble(0.155906, -0.000406, 0.0, 0.194022, -0.010181, 
            0.0),
        SMB_32 = cms.vdouble(0.421649, -0.111654, 0.0, -0.044613, 1.134858, 
            0.0),
        SMB_30 = cms.vdouble(0.399628, 0.014922, 0.0, 0.665622, 0.358439, 
            0.0),
        OL_2222 = cms.vdouble(0.087587, 0.005729, 0.0, 0.535169, -0.087675, 
            0.0),
        SMB_10 = cms.vdouble(1.160532, 0.148991, 0.0, 0.182785, -0.093776, 
            0.0),
        SMB_11 = cms.vdouble(1.289468, -0.139653, 0.0, 0.137191, 0.01217, 
            0.0),
        SMB_12 = cms.vdouble(1.923091, -0.913204, 0.0, 0.161556, 0.020215, 
            0.0),
        DT_23 = cms.vdouble(0.120647, 0.034743, -0.070855, 0.302427, -0.21417, 
            0.261012),
        DT_24 = cms.vdouble(0.189527, 0.037328, -0.088523, 0.251936, 0.032411, 
            0.010984),
        SME_21 = cms.vdouble(0.64895, -0.148762, 0.0, -5.07676, 6.284227, 
            0.0),
        SME_22 = cms.vdouble(-0.624708, 0.641043, 0.0, 32.581295, -19.604264, 
            0.0),
        CSC_34 = cms.vdouble(0.144321, -0.142283, 0.035636, 190.260708, -180.888643, 
            43.430395),
        CSC_02 = cms.vdouble(0.600235, -0.205683, 0.001113, 0.655625, -0.682129, 
            0.253916),
        SME_42 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
            0.0),
        SME_41 = cms.vdouble(-0.187116, 0.076415, 0.0, -58.552583, 27.933864, 
            0.0),
        SME_12 = cms.vdouble(-0.277294, 0.7616, 0.0, -0.243326, 1.446792, 
            0.0),
        DT_34 = cms.vdouble(0.049146, -0.003494, -0.010099, 0.672095, 0.36459, 
            -0.304346),
        CSC_14 = cms.vdouble(0.952517, -0.532733, 0.084601, 1.615881, -1.630744, 
            0.514139),
        OL_1222 = cms.vdouble(0.215915, 0.002556, 0.0, 0.313596, -0.021465, 
            0.0),
        CSC_13 = cms.vdouble(1.22495, -1.792358, 0.711378, 5.271848, -6.280625, 
            2.0142),
        CSC_12 = cms.vdouble(-0.363549, 0.569552, -0.173186, 7.777069, -10.203618, 
            3.478874),
        DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
        DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
        CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
        SME_13_0_scale = cms.vdouble(0.104905, 0.0),
        SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
        DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
        OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
        OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
        SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
        DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
        CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
        OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
        CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
        OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
        SME_11_0_scale = cms.vdouble(1.325085, 0.0),
        CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
        SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
        SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
        DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
        SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
        CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
        DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
        SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
        CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
        CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
        DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
        SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
        DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
        SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
        SME_12_0_scale = cms.vdouble(2.279181, 0.0),
        CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
        DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
        SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
        SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
        SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
        DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
        CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
        DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
        DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
        CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
        CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
        OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
        scaleDT = cms.bool(True),
        Apply_prePruning = cms.bool(True),
        UseSegmentsInTrajectory = cms.bool(False),
        FilterParameters = cms.PSet(
            OutsideChamberErrorScale = cms.double(1.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MinLocalSegmentAngle = cms.double(0.09),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            maxActiveChambers = cms.int32(100),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        )
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot")
)


process.TCTauJetPlusTrackZSPCorJetAntiKt5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_resptowers.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(2),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(False),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetAntiKt5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(False)
)


process.TauDecayModeCutMutliplexerPrototype = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.TauRefProducer = cms.EDProducer("HLTTauRefProducer",
    PFTaus = cms.untracked.PSet(
        PFTauDiscriminators = cms.untracked.VInputTag(cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"), cms.InputTag("hpsPFTauDiscriminationByLooseIsolation")),
        doPFTaus = cms.untracked.bool(True),
        ptMin = cms.untracked.double(15.0),
        PFTauProducer = cms.untracked.InputTag("hpsPFTauProducer")
    ),
    Towers = cms.untracked.PSet(
        etMin = cms.untracked.double(10.0),
        towerIsolation = cms.untracked.double(5.0),
        TowerCollection = cms.untracked.InputTag("towerMaker"),
        doTowers = cms.untracked.bool(True)
    ),
    Photons = cms.untracked.PSet(
        ECALIso = cms.untracked.double(3.0),
        PhotonCollection = cms.untracked.InputTag("photons"),
        etMin = cms.untracked.double(10.0),
        doPhotons = cms.untracked.bool(True)
    ),
    Electrons = cms.untracked.PSet(
        doID = cms.untracked.bool(False),
        ElectronCollection = cms.untracked.InputTag("gsfElectrons"),
        lipMinTrack = cms.untracked.double(0.2),
        InnerConeDR = cms.untracked.double(0.02),
        MaxIsoVar = cms.untracked.double(0.02),
        doTrackIso = cms.untracked.bool(True),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        ptMin = cms.untracked.double(10.0),
        ptMinTrack = cms.untracked.double(1.5),
        OuterConeDR = cms.untracked.double(0.6),
        doElectrons = cms.untracked.bool(True),
        IdCollection = cms.untracked.InputTag("elecIDext")
    ),
    Jets = cms.untracked.PSet(
        JetCollection = cms.untracked.InputTag("iterativeCone5CaloJets"),
        etMin = cms.untracked.double(10.0),
        doJets = cms.untracked.bool(True)
    ),
    Muons = cms.untracked.PSet(
        doMuons = cms.untracked.bool(True),
        MuonCollection = cms.untracked.InputTag("muons"),
        ptMin = cms.untracked.double(10.0)
    ),
    EtaMax = cms.untracked.double(2.5)
)


process.TrackProducer = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.TrackRefitter = cms.EDProducer("TrackRefitter",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    srcConstr = cms.InputTag(""),
    constraint = cms.string(''),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.WElecTagHLT = cms.EDProducer("trgMatchGsfElectronProducer",
    triggerEventTag = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
    hltTags = cms.untracked.string('HLT_Ele*'),
    triggerResultsTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    InputProducer = cms.InputTag("PassingWP80")
)


process.ZeeCandElectronTrack = cms.EDProducer("CandViewShallowCloneCombiner",
    cut = cms.string('80 < mass < 100'),
    decay = cms.string('isolatedElectrons@+ ElTrackCands@-')
)


process.ZmmCandMuonTrack = cms.EDProducer("CandViewShallowCloneCombiner",
    cut = cms.string('80 < mass < 100'),
    decay = cms.string('MuonsFromPV@+ MuTrackCands@-')
)


process.ak5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL1L2L3')
)


process.ak5CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL1L2L3L6')
)


process.ak5CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2Relative')
)


process.ak5CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2L3')
)


process.ak5CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2L3L6')
)


process.ak5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ak5JPTJetsL1 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5JPTJetsL1L2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL1L2L3')
)


process.ak5JPTJetsL2 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL2Relative')
)


process.ak5JPTJetsL2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL2L3')
)


process.ak5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.ak5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("ak5PFJets"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices")
)


process.ak5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5PFJetsFiltered = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    useExplicitGhosts = cms.bool(True),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    jetPtMin = cms.double(3.0),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    jetCollInstanceName = cms.string('SubJets'),
    useFiltering = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    rFilt = cms.double(0.3),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    nFilt = cms.int32(3),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    writeCompound = cms.bool(True),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL1L2L3')
)


process.ak5PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL1L2L3L6')
)


process.ak5PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2Relative')
)


process.ak5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2L3')
)


process.ak5PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2L3L6')
)


process.ak5PFJetsLegacyHPSPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('algoIs("kStrips")'),
        name = cms.string('InStrip'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 0'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        name = cms.string('s'),
        stripPhiAssociationDistance = cms.double(0.2),
        plugin = cms.string('RecoTauPiZeroStripPlugin2'),
        minGammaEtStripAdd = cms.double(0.0),
        minGammaEtStripSeed = cms.double(0.5),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        maxStripBuildIterations = cms.int32(-1),
        updateStripAfterEachDaughter = cms.bool(False),
        makeCombinatoricStrips = cms.bool(False),
        applyElecTrackQcuts = cms.bool(False),
        stripCandidatesParticleIds = cms.vint32(2, 4),
        minStripEt = cms.double(1.0),
        stripEtaAssociationDistance = cms.double(0.05)
    ))
)


process.ak5PFJetsLegacyTaNCPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('mass() < 0.2'),
        name = cms.string('PFTDM'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        plugin = cms.string('RecoTauPiZeroTrivialPlugin'),
        name = cms.string('1'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        )
    ), 
        cms.PSet(
            maxMass = cms.double(-1.0),
            plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
            minMass = cms.double(0.0),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            choose = cms.uint32(2),
            maxInputGammas = cms.uint32(10),
            name = cms.string('2')
        ))
)


process.ak5PFJetsMassDropFiltered = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    useMassDropTagger = cms.bool(True),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    useExplicitGhosts = cms.bool(True),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    muCut = cms.double(0.667),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    jetCollInstanceName = cms.string('SubJets'),
    useFiltering = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    rFilt = cms.double(0.3),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    nFilt = cms.int32(3),
    yCut = cms.double(0.08),
    maxProblematicHcalCells = cms.uint32(9999999),
    writeCompound = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5PFJetsPruned = cms.EDProducer("FastjetJetProducer",
    nFilt = cms.int32(2),
    zcut = cms.double(0.1),
    rcut_factor = cms.double(0.5),
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    useExplicitGhosts = cms.bool(True),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    jetPtMin = cms.double(3.0),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    jetCollInstanceName = cms.string('SubJets'),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    usePruning = cms.bool(True),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    writeCompound = cms.bool(True),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5PFJetsRecoTauPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('abs(eta()) < 1.5 & abs(mass() - 0.13579) < 0.05'),
        name = cms.string('nearPiZeroMass'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('abs(eta()) > 1.5 & mass() < 0.2'),
            name = cms.string('nearPiZeroMass'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('algoIs("kStrips")'),
            name = cms.string('InStrip'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        maxMass = cms.double(-1.0),
        plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
        minMass = cms.double(0.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        choose = cms.uint32(2),
        maxInputGammas = cms.uint32(10),
        name = cms.string('2')
    ), 
        cms.PSet(
            name = cms.string('s'),
            stripPhiAssociationDistance = cms.double(0.2),
            plugin = cms.string('RecoTauPiZeroStripPlugin2'),
            minGammaEtStripAdd = cms.double(0.0),
            minGammaEtStripSeed = cms.double(0.5),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            maxStripBuildIterations = cms.int32(-1),
            updateStripAfterEachDaughter = cms.bool(False),
            makeCombinatoricStrips = cms.bool(False),
            applyElecTrackQcuts = cms.bool(False),
            stripCandidatesParticleIds = cms.vint32(2, 4),
            minStripEt = cms.double(1.0),
            stripEtaAssociationDistance = cms.double(0.05)
        ))
)


process.ak5PFJetsTrimmed = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    useExplicitGhosts = cms.bool(True),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    useTrimming = cms.bool(True),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    trimPtFracMin = cms.double(0.03),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    rFilt = cms.double(0.2),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5TrackJetsL1 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5TrackJetsL1L2L3 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL1L2L3')
)


process.ak5TrackJetsL2 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL2Relative')
)


process.ak5TrackJetsL2L3 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL2L3')
)


process.ak7BasicJets = cms.EDProducer("FastjetJetProducer",
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("CastorTowerReco"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    rParam = cms.double(0.7),
    doPUOffsetCorr = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    jetPtMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetType = cms.string('BasicJet'),
    GhostArea = cms.double(0.01),
    inputEMin = cms.double(0.0)
)


process.ak7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak7CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL1L2L3')
)


process.ak7CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL1L2L3L6')
)


process.ak7CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2Relative')
)


process.ak7CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2L3')
)


process.ak7CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2L3L6')
)


process.ak7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ak7CastorJetID = cms.EDProducer("CastorJetIDProducer",
    src = cms.InputTag("ak7BasicJets")
)


process.ak7JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak7CaloJets"),
    jet2TracksAtCALO = cms.InputTag("ak7JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak7JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.7)
)


process.ak7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak7CaloJets")
)


process.ak7JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("ak7CaloJets")
)


process.ak7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak7PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL1L2L3')
)


process.ak7PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL1L2L3L6')
)


process.ak7PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2Relative')
)


process.ak7PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2L3')
)


process.ak7PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2L3L6')
)


process.ak7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.alCaIsolatedElectrons = cms.EDProducer("AlCaECALRecHitReducer",
    electronLabel = cms.InputTag("gsfElectrons"),
    alcaEndcapHitCollection = cms.string('alcaEndcapHits'),
    phiSize = cms.int32(11),
    etaSize = cms.int32(5),
    ebRecHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    alcaPreshowerHitCollection = cms.string('alcaPreshowerHits'),
    alcaBarrelHitCollection = cms.string('alcaBarrelHits'),
    esNstrips = cms.int32(20),
    eventWeight = cms.double(1.0),
    esRecHitsLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    eeRecHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    esNcolumns = cms.int32(1)
)


process.alcaBeamSpotProducer = cms.EDProducer("AlcaBeamSpotProducer",
    BeamFitter = cms.PSet(
        MaximumNormChi2 = cms.untracked.double(10),
        MaximumEta = cms.untracked.double(2.4),
        MaximumZ = cms.untracked.double(60),
        SaveNtuple = cms.untracked.bool(False),
        IsMuonCollection = cms.untracked.bool(False),
        WriteAscii = cms.untracked.bool(False),
        FractionOfFittedTrks = cms.untracked.double(0.9),
        WriteDIPAscii = cms.untracked.bool(False),
        OutputFileName = cms.untracked.string('analyze_d0_phi.root'),
        AsciiFileName = cms.untracked.string('BeamFit.txt'),
        SaveFitResults = cms.untracked.bool(False),
        TrackCollection = cms.untracked.InputTag("ALCARECOTkAlMinBias"),
        MinimumPixelLayers = cms.untracked.int32(-1),
        InputBeamWidth = cms.untracked.double(-1.0),
        Debug = cms.untracked.bool(False),
        MinimumPt = cms.untracked.double(1.0),
        TrackAlgorithm = cms.untracked.vstring(),
        MinimumInputTracks = cms.untracked.int32(50),
        AppendRunToFileName = cms.untracked.bool(True),
        SavePVVertices = cms.untracked.bool(False),
        DIPFileName = cms.untracked.string('BeamFitDIP.txt'),
        MinimumTotalLayers = cms.untracked.int32(6),
        TrackQuality = cms.untracked.vstring(),
        MaximumImpactParameter = cms.untracked.double(1.0)
    ),
    AlcaBeamSpotProducerParameters = cms.PSet(
        resetEveryNLumi = cms.untracked.int32(1),
        WriteToDB = cms.bool(False),
        fitEveryNLumi = cms.untracked.int32(1),
        RunAllFitters = cms.bool(False),
        RunBeamWidthFit = cms.bool(False)
    ),
    PVFitter = cms.PSet(
        minVertexNdf = cms.untracked.double(10.0),
        nSigmaCut = cms.untracked.double(50.0),
        errorScale = cms.untracked.double(0.9),
        Apply3DFit = cms.untracked.bool(True),
        VertexCollection = cms.untracked.InputTag("offlinePrimaryVertices"),
        FitPerBunchCrossing = cms.untracked.bool(False),
        minVertexNTracks = cms.untracked.uint32(0),
        minVertexMeanWeight = cms.untracked.double(0.5),
        maxVertexR = cms.untracked.double(2),
        maxNrStoredVertices = cms.untracked.uint32(10000),
        Debug = cms.untracked.bool(False),
        minNrVerticesForFit = cms.untracked.uint32(10),
        maxVertexNormChi2 = cms.untracked.double(10.0),
        maxVertexZ = cms.untracked.double(10)
    )
)


process.allConversions = cms.EDProducer("ConversionProducer",
    bypassPreselGsf = cms.bool(True),
    AllowD0 = cms.bool(True),
    dEtaTrackBC = cms.double(0.2),
    convertedPhotonCollection = cms.string(''),
    AllowRightBC = cms.bool(False),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    scEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    MaxChi2Right = cms.double(10.0),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    vtxChi2 = cms.double(0.0005),
    maxTrackRho = cms.double(120.0),
    d0 = cms.double(0.0),
    dPhiTrackBC = cms.double(1.0),
    bypassPreselEcal = cms.bool(False),
    dPhicutForSCmatching = cms.double(0.05),
    AllowOppCharge = cms.bool(True),
    bcEndcapCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    deltaEta = cms.double(0.4),
    maxDelta = cms.double(0.01),
    HalfwayEta = cms.double(0.1),
    AllowDeltaPhi = cms.bool(False),
    maxTrackZ = cms.double(300.0),
    maxNumOfTrackInPU = cms.int32(999999),
    AllowSingleLeg = cms.bool(False),
    MinApproachHigh = cms.double(1.0),
    EnergyTotalBC = cms.double(0.3),
    dEtacutForSCmatching = cms.double(0.03),
    DeltaPhi = cms.double(0.2),
    scBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    dz = cms.double(5.0),
    maxNbrOfIterations = cms.int32(40),
    AllowDeltaCot = cms.bool(True),
    EnergyBC = cms.double(0.3),
    MinHitsLeft = cms.int32(4),
    DeltaCotTheta = cms.double(0.1),
    minChiSqImprovement = cms.double(50.0),
    src = cms.InputTag("gsfGeneralInOutOutInConversionTrackMerger"),
    AllowVertex = cms.bool(True),
    UsePvtx = cms.bool(True),
    bypassPreselEcalEcal = cms.bool(True),
    minSCEt = cms.double(10.0),
    AllowTrackBC = cms.bool(False),
    rCut = cms.double(2.0),
    MinApproachLow = cms.double(-0.25),
    maxReducedChiSq = cms.double(225.0),
    MaxChi2Left = cms.double(10.0),
    AlgorithmName = cms.string('mixed'),
    MinHitsRight = cms.int32(2),
    AllowMinApproach = cms.bool(True)
)


process.ancientMuonSeed = cms.EDProducer("MuonSeedGenerator",
    SMB_21 = cms.vdouble(1.043, -0.124, 0.0, 0.183, 0.0, 
        0.0),
    SMB_20 = cms.vdouble(1.011, -0.052, 0.0, 0.188, 0.0, 
        0.0),
    SMB_22 = cms.vdouble(1.474, -0.758, 0.0, 0.185, 0.0, 
        0.0),
    OL_2213 = cms.vdouble(0.117, 0.0, 0.0, 0.044, 0.0, 
        0.0),
    SME_11 = cms.vdouble(3.295, -1.527, 0.112, 0.378, 0.02, 
        0.0),
    SME_13 = cms.vdouble(-1.286, 1.711, 0.0, 0.356, 0.0, 
        0.0),
    SME_12 = cms.vdouble(0.102, 0.599, 0.0, 0.38, 0.0, 
        0.0),
    SME_32 = cms.vdouble(-0.901, 1.333, -0.47, 0.41, 0.073, 
        0.0),
    SME_31 = cms.vdouble(-1.594, 1.482, -0.317, 0.487, 0.097, 
        0.0),
    OL_1213 = cms.vdouble(0.96, -0.737, 0.0, 0.052, 0.0, 
        0.0),
    DT_13 = cms.vdouble(0.315, 0.068, -0.127, 0.051, -0.002, 
        0.0),
    DT_12 = cms.vdouble(0.183, 0.054, -0.087, 0.028, 0.002, 
        0.0),
    DT_14 = cms.vdouble(0.359, 0.052, -0.107, 0.072, -0.004, 
        0.0),
    OL_1232 = cms.vdouble(0.184, 0.0, 0.0, 0.066, 0.0, 
        0.0),
    CSC_23 = cms.vdouble(-0.081, 0.113, -0.029, 0.015, 0.008, 
        0.0),
    CSC_24 = cms.vdouble(0.004, 0.021, -0.002, 0.053, 0.0, 
        0.0),
    CSC_03 = cms.vdouble(0.787, -0.338, 0.029, 0.101, -0.008, 
        0.0),
    CSC_01 = cms.vdouble(0.166, 0.0, 0.0, 0.031, 0.0, 
        0.0),
    SMB_32 = cms.vdouble(0.67, -0.327, 0.0, 0.22, 0.0, 
        0.0),
    SMB_30 = cms.vdouble(0.505, -0.022, 0.0, 0.215, 0.0, 
        0.0),
    SMB_31 = cms.vdouble(0.549, -0.145, 0.0, 0.207, 0.0, 
        0.0),
    SMB_10 = cms.vdouble(1.387, -0.038, 0.0, 0.19, 0.0, 
        0.0),
    SMB_11 = cms.vdouble(1.247, 0.72, -0.802, 0.229, -0.075, 
        0.0),
    SMB_12 = cms.vdouble(2.128, -0.956, 0.0, 0.199, 0.0, 
        0.0),
    DT_23 = cms.vdouble(0.13, 0.023, -0.057, 0.028, 0.004, 
        0.0),
    DT_24 = cms.vdouble(0.176, 0.014, -0.051, 0.051, 0.003, 
        0.0),
    SME_21 = cms.vdouble(-0.529, 1.194, -0.358, 0.472, 0.086, 
        0.0),
    SME_22 = cms.vdouble(-1.207, 1.491, -0.251, 0.189, 0.243, 
        0.0),
    CSC_34 = cms.vdouble(0.062, -0.067, 0.019, 0.021, 0.003, 
        0.0),
    CSC_02 = cms.vdouble(0.612, -0.207, -0.0, 0.067, -0.001, 
        0.0),
    SME_42 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    SME_41 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    OL_2222 = cms.vdouble(0.107, 0.0, 0.0, 0.04, 0.0, 
        0.0),
    DT_34 = cms.vdouble(0.044, 0.004, -0.013, 0.029, 0.003, 
        0.0),
    CSC_14 = cms.vdouble(0.606, -0.181, -0.002, 0.111, -0.003, 
        0.0),
    OL_1222 = cms.vdouble(0.848, -0.591, 0.0, 0.062, 0.0, 
        0.0),
    CSC_13 = cms.vdouble(0.901, -1.302, 0.533, 0.045, 0.005, 
        0.0),
    CSC_12 = cms.vdouble(-0.161, 0.254, -0.047, 0.042, -0.007, 
        0.0),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    crackWindow = cms.double(0.04),
    crackEtas = cms.vdouble(0.2, 1.6, 1.7),
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    scaleDT = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
    EnableCSCMeasurement = cms.bool(True)
)


process.beamhaloTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("beamhaloTrackerSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('BeamHaloPropagatorAlong'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('BeamHaloPropagatorOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('BeamHaloNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfTrajectoryBuilderBH')
)


process.beamhaloTrackerSeeds = cms.EDProducer("CtfSpecialSeedGenerator",
    ErrorRescaling = cms.double(50.0),
    OrderedHitsFactoryPSets = cms.VPSet(cms.PSet(
        ComponentName = cms.string('BeamHaloPairGenerator'),
        maxTheta = cms.double(0.1),
        NavigationDirection = cms.string('outsideIn'),
        LayerPSet = cms.PSet(
            TEC4 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC5 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC6 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC = cms.PSet(
                minRing = cms.int32(5),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(7)
            ),
            TEC1 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC2 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC3 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            FPix = cms.PSet(
                hitErrorRZ = cms.double(0.0036),
                hitErrorRPhi = cms.double(0.0051),
                TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
                HitProducer = cms.string('siPixelRecHits'),
                useErrorsFromParam = cms.bool(True)
            ),
            TID = cms.PSet(
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
            ),
            layerList = cms.vstring('FPix1_pos+FPix2_pos', 
                'FPix1_neg+FPix2_neg', 
                'TID2_pos+TID3_pos', 
                'TID2_neg+TID3_neg', 
                'TEC1_neg+TEC2_neg', 
                'TEC1_pos+TEC2_pos', 
                'TEC2_neg+TEC3_neg', 
                'TEC2_pos+TEC3_pos', 
                'TEC3_neg+TEC4_neg', 
                'TEC3_pos+TEC4_pos', 
                'TEC4_neg+TEC5_neg', 
                'TEC4_pos+TEC5_pos', 
                'TEC5_neg+TEC6_neg', 
                'TEC5_pos+TEC6_pos', 
                'TEC7_neg+TEC8_neg', 
                'TEC7_pos+TEC8_pos', 
                'TEC8_neg+TEC9_neg', 
                'TEC8_pos+TEC9_pos')
        ),
        PropagationDirection = cms.string('alongMomentum')
    ), 
        cms.PSet(
            ComponentName = cms.string('BeamHaloPairGenerator'),
            maxTheta = cms.double(0.1),
            NavigationDirection = cms.string('outsideIn'),
            LayerPSet = cms.PSet(
                TEC4 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC5 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC6 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC = cms.PSet(
                    minRing = cms.int32(5),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(False),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(7)
                ),
                TEC1 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC2 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC3 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                FPix = cms.PSet(
                    hitErrorRZ = cms.double(0.0036),
                    hitErrorRPhi = cms.double(0.0051),
                    TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
                    HitProducer = cms.string('siPixelRecHits'),
                    useErrorsFromParam = cms.bool(True)
                ),
                TID = cms.PSet(
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(False),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
                ),
                layerList = cms.vstring('FPix1_pos+FPix2_pos', 
                    'FPix1_neg+FPix2_neg', 
                    'TID2_pos+TID3_pos', 
                    'TID2_neg+TID3_neg', 
                    'TEC1_neg+TEC2_neg', 
                    'TEC1_pos+TEC2_pos', 
                    'TEC2_neg+TEC3_neg', 
                    'TEC2_pos+TEC3_pos', 
                    'TEC3_neg+TEC4_neg', 
                    'TEC3_pos+TEC4_pos', 
                    'TEC4_neg+TEC5_neg', 
                    'TEC4_pos+TEC5_pos', 
                    'TEC5_neg+TEC6_neg', 
                    'TEC5_pos+TEC6_pos', 
                    'TEC7_neg+TEC8_neg', 
                    'TEC7_pos+TEC8_pos', 
                    'TEC8_neg+TEC9_neg', 
                    'TEC8_pos+TEC9_pos')
            ),
            PropagationDirection = cms.string('oppositeToMomentum')
        )),
    Charges = cms.vint32(-1, 1),
    PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(10000),
    UseScintillatorsConstraint = cms.bool(False),
    SetMomentum = cms.bool(True),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originHalfLength = cms.double(21.2),
            originZPos = cms.double(0.0),
            originYPos = cms.double(0.0),
            ptMin = cms.double(0.9),
            originXPos = cms.double(0.0),
            originRadius = cms.double(0.2)
        ),
        ComponentName = cms.string('GlobalRegionProducer')
    ),
    SeedsFromNegativeY = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    doClusterCheck = cms.bool(True),
    SeedsFromPositiveY = cms.bool(False),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    SeedMomentum = cms.double(15.0),
    maxSeeds = cms.int32(10000),
    CheckHitsAreOnDifferentLayers = cms.bool(False),
    ClusterCollectionLabel = cms.InputTag("siStripClusters"),
    requireBOFF = cms.bool(False)
)


process.beamhaloTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("beamhaloTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherBH'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('beamhaloTracks'),
    NavigationSchool = cms.string('BeamHaloNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('beamhalo'),
    Propagator = cms.string('BeamHaloPropagatorAlong')
)


process.ca4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ca4JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ca4CaloJets")
)


process.ca4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ca6JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ca6CaloJets")
)


process.ca6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.6),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.calZeroBiasClusters = cms.EDProducer("SiStripClusterizer",
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode")),
    Clusterizer = cms.PSet(
        ChannelThreshold = cms.double(2.0),
        MaxSequentialBad = cms.uint32(1),
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        MaxSequentialHoles = cms.uint32(0),
        MaxAdjacentBad = cms.uint32(0),
        QualityLabel = cms.string('unbiased'),
        SeedThreshold = cms.double(3.0),
        RemoveApvShots = cms.bool(True),
        ClusterThreshold = cms.double(5.0)
    )
)


process.caloRecoTauDiscriminationAgainstElectron = cms.EDProducer("CaloRecoTauDiscriminationAgainstElectron",
    CaloTauProducer = cms.InputTag("caloRecoTauProducer"),
    leadTrack_HCAL3x3hitsEtSumOverPt_minvalue = cms.double(0.1),
    maxleadTrackHCAL3x3hottesthitDEta = cms.double(0.1),
    ApplyCut_maxleadTrackHCAL3x3hottesthitDEta = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_leadTrackavoidsECALcrack = cms.bool(True)
)


process.caloRecoTauDiscriminationAgainstMuon = cms.EDProducer("CaloRecoTauDiscriminationAgainstMuon",
    CaloTauProducer = cms.InputTag("caloRecoTauProducer"),
    muonSource = cms.InputTag("muons"),
    segmCompCoefficient = cms.double(0.5),
    muonCompCut = cms.double(0.0),
    dRmatch = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    caloCompCoefficient = cms.double(0.5)
)


process.caloRecoTauDiscriminationByECALIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("CaloRecoTauDiscriminationByLeadingTrackPtCut",
    MinPtLeadingTrack = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("CaloRecoTauDiscriminationByLeadingTrackPtCut",
    MinPtLeadingTrack = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByTrackIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauProducer = cms.EDProducer("TCRecoTauProducer",
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)


process.caloRecoTauTagInfoProducer = cms.EDProducer("CaloRecoTauTagInfoProducer",
    tkminTrackerHitsn = cms.int32(3),
    tkminPixelHitsn = cms.int32(0),
    ECALBasicClusterpropagTrack_matchingDRConeSize = cms.double(0.015),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    tkminPt = cms.double(0.5),
    BarrelBasicClustersSource = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    UsePVconstraint = cms.bool(True),
    tkmaxChi2 = cms.double(100.0),
    EndcapBasicClustersSource = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    ECALBasicClusterminE = cms.double(1.0),
    smearedPVsigmaZ = cms.double(0.005),
    tkQuality = cms.string('highPurity'),
    tkPVmaxDZ = cms.double(1.0),
    UseTrackQuality = cms.bool(True),
    ECALBasicClustersAroundCaloJet_DRConeSize = cms.double(0.5),
    tkmaxipt = cms.double(0.1),
    CaloJetTracksAssociatorProducer = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtVertex")
)


process.caloTowersForMET = cms.EDProducer("CaloTowerCandidateCreator",
    minimumE = cms.double(-1.0),
    minimumEt = cms.double(-1.0),
    src = cms.InputTag("towerMaker")
)


process.caloTowersOpt = cms.EDProducer("CaloTowerCandidateCreator",
    minimumE = cms.double(-1.0),
    minimumEt = cms.double(-1.0),
    src = cms.InputTag("calotoweroptmaker")
)


process.calomuons = cms.EDProducer("CaloMuonProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    inputMuons = cms.InputTag("muons1stStep"),
    inputTracks = cms.InputTag("generalTracks"),
    minCaloCompatibility = cms.double(0.6),
    inputCollection = cms.InputTag("muons1stStep"),
    minPt = cms.double(1.0)
)


process.calotowermaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    HBThreshold = cms.double(0.7),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESWeight = cms.double(1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    EBThreshold = cms.double(0.07),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.calotoweroptmaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HBThreshold = cms.double(0.5),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.7),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.5),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.calotoweroptmakerWithHO = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    HBThreshold = cms.double(0.5),
    EBThreshold = cms.double(0.07),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HESWeight = cms.double(1.0),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.7),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.5),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.castorDigis = cms.EDProducer("CastorRawToDigi",
    CastorFirstFED = cms.untracked.int32(690),
    FilterDataQuality = cms.bool(True),
    silent = cms.untracked.bool(False),
    lastSample = cms.int32(9),
    InputLabel = cms.InputTag("rawDataCollector"),
    ComplainEmptyData = cms.untracked.bool(False),
    FEDs = cms.untracked.vint32(690, 691, 692),
    UnpackTTP = cms.untracked.bool(True),
    ExceptionEmptyData = cms.untracked.bool(False),
    firstSample = cms.int32(0)
)


process.castorreco = cms.EDProducer("CastorSimpleReconstructor",
    firstSample = cms.int32(4),
    correctionPhaseNS = cms.double(0.0),
    doSaturationCorr = cms.bool(True),
    digiLabel = cms.InputTag("castorDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('CASTOR'),
    maxADCvalue = cms.int32(127),
    setSaturationFlag = cms.bool(True),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False)
)


process.ckfInOutTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("conversionTrackCandidates","inOutTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('conversionTrackCandidates'),
    Fitter = cms.string('KFFittingSmootherForInOut'),
    ComponentName = cms.string('ckfInOutTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    trackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('inOutEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('inOutTrackSCAssociationCollection')
)


process.ckfOutInTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("conversionTrackCandidates","outInTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('conversionTrackCandidates'),
    Fitter = cms.string('KFFitterForOutIn'),
    ComponentName = cms.string('ckfOutInTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    trackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('outInEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('outInTrackSCAssociationCollection')
)


process.ckfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder')
)


process.ckfTrackCandidatesCombinedSeeds = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalCombinedSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder')
)


process.ckfTrackCandidatesNoOverlaps = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfTrajectoryBuilder')
)


process.ckfTrackCandidatesP5 = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("combinatorialcosmicseedfinderP5"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilderP5')
)


process.ckfTrackCandidatesPixelLess = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalPixelLessSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder')
)


process.cleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    eThreshA = cms.double(0.003),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    clustershapecollection = cms.string(''),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    RecHitSeverityToBeExcluded = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    dynamicPhiRoad = cms.bool(False),
    HybridBarrelSeedThr = cms.double(1.0),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    eThreshB = cms.double(0.1),
    RecHitFlagToBeExcluded = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    useEtForXi = cms.bool(True),
    step = cms.int32(17),
    eseed = cms.double(0.35),
    xi = cms.double(0.0),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    superclusterCollection = cms.string(''),
    dynamicEThresh = cms.bool(False),
    ecalhitcollection = cms.string('EcalRecHitsEB'),
    excludeFlagged = cms.bool(True),
    ecalhitproducer = cms.string('ecalRecHit')
)


process.clusterSummaryProducer = cms.EDProducer("ClusterSummaryProducer",
    verbose = cms.bool(False),
    doPixels = cms.bool(True),
    stripModule = cms.string('TOB,TIB,TID,TEC,TRACKER'),
    doStrips = cms.bool(True),
    stripVariables = cms.string('cHits,cSize,cCharge'),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    pixelModule = cms.string('BPIX,FPIX,PIXEL'),
    pixelVariables = cms.string('pHits,pSize,pCharge')
)


process.combinatoricRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyHPSPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        plugin = cms.string('RecoTauImpactParameterSignificancePlugin'),
        name = cms.string('sipt'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        )
    ), 
        cms.PSet(
            ElectronPreIDProducer = cms.InputTag("elecpreid"),
            name = cms.string('elec_rej'),
            plugin = cms.string('RecoTauElectronRejectionPlugin'),
            DataType = cms.string('AOD'),
            maximumForElectrionPreIDOutput = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
            EcalStripSumE_minClusEnergy = cms.double(0.1),
            ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
            EcalStripSumE_deltaEta = cms.double(0.03)
        ), 
        cms.PSet(
            lev1EtaWindow = cms.double(0.1),
            corrLevel = cms.uint32(3),
            lev1PhiWindow = cms.double(0.5),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            name = cms.string('tau_en_recovery'),
            plugin = cms.string('RecoTauEnergyRecoveryPlugin')
        ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        name = cms.string('combinatoric'),
        plugin = cms.string('RecoTauBuilderCombinatoricPlugin'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(1),
            maxPiZeros = cms.uint32(0),
            maxTracks = cms.uint32(6)
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(1),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(6),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(5),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                nCharged = cms.uint32(3),
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6)
            )),
        isolationConeSize = cms.double(0.5),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.combinatoricRecoTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(False),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinatoricRecoTausDiscriminationByTanc = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                    nPUVtx = cms.int32(4)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                    nPUVtx = cms.int32(5)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                    nPUVtx = cms.int32(6)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                    nPUVtx = cms.int32(7)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                    nPUVtx = cms.int32(8)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                    nPUVtx = cms.int32(9)
                )),
            defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            maxValue = cms.double(25),
            minValue = cms.double(-25)
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    remapOutput = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    dbLabel = cms.string('hpstanc')
)


process.combinatoricRecoTausHPSSelector = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.combinatoricRecoTausTancTransform = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = cms.vdouble( (0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 
                0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 
                0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 
                0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 
                0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 
                0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 
                0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 
                0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 
                0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 
                0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 
                0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 
                0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 
                0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 
                0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 
                0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 
                0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 
                0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 
                0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 
                0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 
                0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 
                0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 
                0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 
                0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 
                0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 
                0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 
                0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 
                0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 
                0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 
                0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 
                0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 
                0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 
                0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 
                0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 
                0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 
                0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 
                0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 
                0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 
                0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 
                0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 
                0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 
                0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 
                0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 
                0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335, 
                0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 
                0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 
                0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 
                0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 
                0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 
                0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 
                0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 
                0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 
                0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 
                0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 
                0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 
                0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 
                0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 
                0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 
                0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 
                0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 
                0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 
                0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 
                0.9679163435, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0 ) ),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 
                    0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 
                    0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 
                    0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 
                    0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 
                    0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 
                    0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 
                    0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 
                    0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 
                    0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 
                    0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 
                    0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 
                    0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 
                    0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 
                    0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 
                    0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 
                    0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 
                    0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 
                    0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 
                    0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 
                    0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 
                    0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 
                    0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 
                    0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 
                    0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 
                    0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 
                    0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 
                    0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 
                    0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 
                    0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 
                    0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 
                    0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 
                    0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 
                    0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 
                    0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 
                    0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 
                    0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 
                    0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 
                    0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 
                    0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 
                    0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 
                    0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 
                    0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364, 
                    0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 
                    0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 
                    0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 
                    0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 
                    0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 
                    0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 
                    0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 
                    0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 
                    0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 
                    0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 
                    0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 
                    0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 
                    0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 
                    0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 
                    0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 
                    0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 
                    0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 
                    0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 
                    0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 
                    0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 
                    0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 
                    0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 
                    0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 
                    0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 
                    0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 
                    0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 
                    0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 
                    0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 
                    0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 
                    0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 
                    0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 
                    0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 
                    0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 
                    0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 
                    0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 
                    0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 
                    0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 
                    0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 
                    0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 
                    0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 
                    0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 
                    0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 
                    0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 
                    0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 
                    0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 
                    0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 
                    0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 
                    0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 
                    0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 
                    0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 
                    0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 
                    0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 
                    0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 
                    0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 
                    0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 
                    0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 
                    0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 
                    0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 
                    0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 
                    0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 
                    0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107, 
                    0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 
                    0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 
                    0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 
                    0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 
                    0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 
                    0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 
                    0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 
                    0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 
                    0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 
                    0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 
                    0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 
                    0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 
                    0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 
                    0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 
                    0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 
                    0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 
                    0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 
                    0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 
                    0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 
                    0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 
                    0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 
                    0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 
                    0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 
                    0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 
                    0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 
                    0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 
                    0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 
                    0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 
                    0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 
                    0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 
                    0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 
                    0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 
                    0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 
                    0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 
                    0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 
                    0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 
                    0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 
                    0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 
                    0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 
                    0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 
                    0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 
                    0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 
                    0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 
                    0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 
                    0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 
                    0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 
                    0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 
                    0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 
                    0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 
                    0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 
                    0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 
                    0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 
                    0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 
                    0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 
                    0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 
                    0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 
                    0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 
                    0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 
                    0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 
                    0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 
                    0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 
                    0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792, 
                    0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 
                    0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 
                    0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 
                    0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 
                    0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 
                    0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 
                    0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 
                    0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 
                    0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 
                    0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 
                    0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 
                    0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 
                    0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 
                    0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 
                    0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 
                    0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 
                    0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 
                    0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 
                    0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("combinatoricRecoTausDiscriminationByTanc"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinedInclusiveSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("inclusiveSecondaryVertexFinderTagInfos"))
)


process.combinedMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"), cms.InputTag("softMuonTagInfos"), cms.InputTag("softElectronTagInfos"))
)


process.combinedSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.combinedSecondaryVertexMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertexMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.conditionsInEdm = cms.EDProducer("ConditionDumperInEdm",
    gtEvmDigisLabel = cms.InputTag("gtEvmDigis")
)


process.consecutiveHEs = cms.EDProducer("EventWithHistoryProducerFromL1ABC",
    l1ABCCollection = cms.InputTag("scalersRawToDigi")
)


process.convClusters = cms.EDProducer("TrackClusterRemover",
    trajectories = cms.InputTag("tobTecStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("tobTecStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("tobTecStepSelector","tobTecStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.convStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("convStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(1),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(3),
        chi2n_par = cms.double(3.0),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(5.0, 8.0),
        applyAdaptedPVCuts = cms.bool(False),
        dz_par1 = cms.vdouble(5.0, 8.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(1),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('convStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.001),
        d0_par2 = cms.vdouble(5.0, 8.0),
        d0_par1 = cms.vdouble(5.0, 8.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(1),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(2.5),
            dz_par1 = cms.vdouble(5.0, 8.0),
            dz_par2 = cms.vdouble(5.0, 8.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('convStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('convStepLoose'),
            d0_par2 = cms.vdouble(5.0, 8.0),
            d0_par1 = cms.vdouble(5.0, 8.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(1),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(2.0),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(5.0, 8.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(5.0, 8.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('convStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(5.0, 8.0),
            d0_par1 = cms.vdouble(5.0, 8.0),
            preFilterName = cms.string('convStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.convStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("convTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('convStepFitterSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter8'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.convTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("photonConvTrajSeedFromSingleLeg","convSeedCandidates"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('convCkfTrajectoryBuilder')
)


process.conversionStepConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    filterOnConvTrackHyp = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('conversionStepTracks'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(True),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.conversionStepTracks = cms.EDProducer("TrackListMerger",
    ShareFrac = cms.double(0.19),
    writeOnlyTrkQuals = cms.bool(False),
    MinPT = cms.double(0.05),
    makeReKeyedSeeds = cms.untracked.bool(False),
    copyExtras = cms.untracked.bool(True),
    Epsilon = cms.double(-0.001),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("convStepSelector","convStep")),
    allowFirstHitShare = cms.bool(True),
    MaxNormalizedChisq = cms.double(1000.0),
    hasSelector = cms.vint32(1),
    FoundHitBonus = cms.double(5.0),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(1)
    )),
    MinFound = cms.int32(3),
    TrackProducers = cms.VInputTag(cms.InputTag("convStepTracks")),
    LostHitPenalty = cms.double(20.0),
    newQuality = cms.string('confirmed')
)


process.conversionTrackCandidates = cms.EDProducer("ConversionTrackCandidateProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('alongMomElePropagator'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('oppositeToMomElePropagator')
    ),
    inOutTrackCandidateCollection = cms.string('inOutTracksFromConversions'),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    useHitsSplitting = cms.bool(False),
    outInTrackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    ValidHitBonus = cms.double(5.0),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    vetoClusteredHits = cms.bool(False),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    ecalIsoCut_offset = cms.double(999999999),
    hcalTowers = cms.InputTag("towerMaker"),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    isoEMin = cms.double(0.08),
    maxNumOfSeedsInOut = cms.int32(50),
    outInTrackCandidateCollection = cms.string('outInTracksFromConversions'),
    maxNumOfSeedsOutIn = cms.int32(50),
    bcEndcapCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    useNumXstals = cms.bool(True),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    InOutRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    ecalIsoCut_slope = cms.double(0.0),
    isoEtaSlice = cms.double(2.5),
    isoEtMin = cms.double(0.0),
    fractionShared = cms.double(0.5),
    minSCEt = cms.double(20.0),
    MissingHitPenalty = cms.double(20.0),
    OutInRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    MeasurementTrackerName = cms.string(''),
    maxHOverE = cms.double(0.15),
    hOverEConeSize = cms.double(0.15),
    inOutTrackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isoInnerConeR = cms.double(3.5),
    isoConeR = cms.double(0.4),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForConversions'),
    allowSharedFirstHit = cms.bool(True)
)


process.conversions = cms.EDProducer("ConvertedPhotonProducer",
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    convertedPhotonCollection = cms.string('uncleanedConversions'),
    dRForConversionRecovery = cms.double(0.3),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    conversionIOTrackProducer = cms.string('ckfInOutTracksFromConversions'),
    deltaCotCut = cms.double(0.05),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    maxReducedChiSq = cms.double(225.0),
    hcalTowers = cms.InputTag("towerMaker"),
    recoverOneTrackCase = cms.bool(True),
    inOutTrackSCAssociation = cms.string('inOutTrackSCAssociationCollection'),
    maxDelta = cms.double(0.01),
    bcEndcapCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    risolveConversionAmbiguity = cms.bool(True),
    inOutTrackCollection = cms.string(''),
    outInTrackSCAssociation = cms.string('outInTrackSCAssociationCollection'),
    outInTrackCollection = cms.string(''),
    cleanedConvertedPhotonCollection = cms.string(''),
    minSCEt = cms.double(20.0),
    maxNbrOfIterations = cms.int32(40),
    maxHOverE = cms.double(0.15),
    conversionOITrackProducer = cms.string('ckfOutInTracksFromConversions'),
    hOverEConeSize = cms.double(0.15),
    minApproachDisCut = cms.double(0.0),
    maxNumOfCandidates = cms.int32(3),
    minChiSqImprovement = cms.double(50.0),
    MVA_weights_location = cms.string('RecoEgamma/EgammaTools/data/TMVAnalysis_Likelihood.weights.txt'),
    AlgorithmName = cms.string('ecalSeeded')
)


process.convertObjectMapRecord = cms.EDProducer("ConvertObjectMapRecord",
    L1GtObjectMapTag = cms.InputTag("hltL1GtObjectMap")
)


process.corMetGlobalMuons = cms.EDProducer("MuonMET",
    muonMETDepositValueMapInputTag = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metTypeInputTag = cms.InputTag("CaloMET"),
    muonsInputTag = cms.InputTag("muons"),
    uncorMETInputTag = cms.InputTag("met")
)


process.correctedHybridSuperClusters = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    modeEE = cms.int32(0),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Hybrid'),
    modeEB = cms.int32(0),
    applyLocalContCorrection = cms.bool(True),
    rawSuperClusterProducer = cms.InputTag("hybridSuperClusters"),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    applyEnergyCorrection = cms.bool(True),
    etThresh = cms.double(0.0),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    applyCrackCorrection = cms.bool(True),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    hyb_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(1.1),
        fEtEtaVec = cms.vdouble(0, 1.00121, -0.63672, 0, 0, 
            0, 0.5655, 6.457, 0.5081, 8.0, 
            1.023, -0.00181),
        brLinearHighThr = cms.double(8.0),
        fBremVec = cms.vdouble(-0.04382, 0.1169, 0.9267, -0.0009413, 1.419)
    ),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.correctedMulti5x5SuperClustersWithPreshower = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    modeEE = cms.int32(0),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Multi5x5'),
    modeEB = cms.int32(0),
    applyLocalContCorrection = cms.bool(False),
    rawSuperClusterProducer = cms.InputTag("multi5x5SuperClustersWithPreshower"),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    applyEnergyCorrection = cms.bool(True),
    etThresh = cms.double(0.0),
    fix_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(0.9),
        fEtEtaVec = cms.vdouble(1, -0.4386, -32.38, 0.6372, 15.67, 
            -0.0928, -2.462, 1.138, 20.93),
        brLinearHighThr = cms.double(6.0),
        fBremVec = cms.vdouble(-0.05228, 0.08738, 0.9508, 0.002677, 1.221)
    ),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.cosmicMuons = cms.EDProducer("CosmicMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        BackwardMuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(100.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(2),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
        MuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(3000.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(0),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        EnableRPCMeasurement = cms.bool(True),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        BuildTraversingMuon = cms.bool(False),
        Strict1Leg = cms.bool(False),
        EnableDTMeasurement = cms.bool(True),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonSmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        EnableCSCMeasurement = cms.bool(True),
        MuonNavigationParameters = cms.PSet(
            Barrel = cms.bool(True),
            Endcap = cms.bool(True)
        )
    ),
    MuonSeedCollectionLabel = cms.string('CosmicMuonSeed')
)


process.cosmicMuons1Leg = cms.EDProducer("CosmicMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        BackwardMuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(100.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(2),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
        MuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(3000.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(0),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        EnableRPCMeasurement = cms.bool(True),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        BuildTraversingMuon = cms.bool(True),
        Strict1Leg = cms.bool(True),
        EnableDTMeasurement = cms.bool(True),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonSmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        EnableCSCMeasurement = cms.bool(True),
        MuonNavigationParameters = cms.PSet(
            Barrel = cms.bool(True),
            Endcap = cms.bool(True)
        )
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    MuonSeedCollectionLabel = cms.string('CosmicMuonSeed')
)


process.cosmicsVeto = cms.EDProducer("CosmicsMuonIdProducer",
    CosmicCompFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        deltaPt = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        offTimeNegTight = cms.double(-20.0),
        maxvertRho = cms.double(5),
        ipCut = cms.double(0.02),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        angleCut = cms.double(0.1),
        hIpTrvProb = cms.double(0.5),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons1stStep")),
        maxdxyTight = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        maxdxyTightMult = cms.double(1.0),
        corrTimeNeg = cms.double(-10),
        offTimePosTight = cms.double(25.0),
        maxdzLooseMult = cms.double(0.1),
        maxvertZ = cms.double(20),
        nChamberMatches = cms.int32(1),
        corrTimePos = cms.double(5),
        offTimeNegLoose = cms.double(-15.0),
        maxdxyLooseMult = cms.double(0.01),
        offTimePosTightMult = cms.double(25.0),
        offTimePosLoose = cms.double(15.0),
        largedxyMult = cms.double(3.0),
        largedxy = cms.double(2.0),
        nTrackThreshold = cms.int32(3),
        maxdzTightMult = cms.double(10.0),
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        minvProb = cms.double(0.001),
        hIpTrdxy = cms.double(0.02),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        offTimePosLooseMult = cms.double(15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        sharedHits = cms.int32(5),
        maxdxyLoose = cms.double(0.01),
        offTimeNegTightMult = cms.double(-20.0)
    ),
    muonCollection = cms.InputTag("muons1stStep"),
    trackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks"))
)


process.cosmicsVetoSeeds = cms.EDProducer("TrajectorySeedFromMuonProducer",
    skipMatchedMuons = cms.bool(False),
    muonCollectionTag = cms.InputTag("muons1stStep"),
    trackCollectionTag = cms.InputTag("generalTracks")
)


process.cosmicsVetoTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("cosmicsVetoSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('none'),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilderP5')
)


process.cosmicsVetoTracks = cms.EDProducer("CosmicTrackSelector",
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    minNumber3DLayers = cms.uint32(0),
    src = cms.InputTag("cosmicsVetoTracksRaw"),
    copyExtras = cms.untracked.bool(True),
    min_pt = cms.double(1.0),
    copyTrajectories = cms.untracked.bool(True),
    qualityBit = cms.string(''),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(10.0),
    max_eta = cms.double(2.0),
    min_nPixelHit = cms.uint32(0),
    min_nHit = cms.uint32(5),
    max_z0 = cms.double(300.0),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.cosmicsVetoTracksRaw = cms.EDProducer("TrackProducer",
    src = cms.InputTag("cosmicsVetoTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FittingSmootherRKP5'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('ctf'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.cosmictrackSelector = cms.EDProducer("CosmicTrackSelector",
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    minNumber3DLayers = cms.uint32(0),
    src = cms.InputTag("ctfWithMaterialTracksCosmics"),
    copyExtras = cms.untracked.bool(True),
    min_pt = cms.double(1.0),
    copyTrajectories = cms.untracked.bool(True),
    qualityBit = cms.string(''),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(10.0),
    max_eta = cms.double(2.0),
    min_nPixelHit = cms.uint32(0),
    min_nHit = cms.uint32(5),
    max_z0 = cms.double(300.0),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.csc2DRecHits = cms.EDProducer("CSCRecHitDProducer",
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME1a = cms.double(0.023),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    XTasymmetry_ME41 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME21 = cms.double(0.023),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    XTasymmetry_ME31 = cms.double(0.023),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    XTasymmetry_ME32 = cms.double(0.023),
    ConstSyst_ME41 = cms.double(0.03),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME12 = cms.double(0.015),
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0),
    CSCStripClusterSize = cms.untracked.int32(3),
    UseAverageTime = cms.bool(False),
    CSCStripPeakThreshold = cms.double(10.0),
    readBadChannels = cms.bool(True),
    CSCUseStaticPedestals = cms.bool(False),
    stripDigiTag = cms.InputTag("muonCSCDigis","MuonCSCStripDigi"),
    readBadChambers = cms.bool(True),
    CSCStripxtalksOffset = cms.double(0.03),
    CSCstripWireDeltaTime = cms.int32(8),
    CSCUseCalibrations = cms.bool(True),
    CSCUseTimingCorrections = cms.bool(True),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32(2),
    UseParabolaFit = cms.bool(False),
    wireDigiTag = cms.InputTag("muonCSCDigis","MuonCSCWireDigi"),
    UseFivePoleFit = cms.bool(True),
    CSCUseGasGainCorrections = cms.bool(True),
    CSCDebug = cms.untracked.bool(False),
    CSCWireClusterDeltaT = cms.int32(1),
    CSCStripClusterChargeCut = cms.double(25.0)
)


process.cscSegments = cms.EDProducer("CSCSegmentProducer",
    inputObjects = cms.InputTag("csc2DRecHits"),
    algo_psets = cms.VPSet(cms.PSet(
        chamber_types = cms.vstring('ME1/a', 
            'ME1/b', 
            'ME1/2', 
            'ME1/3', 
            'ME2/1', 
            'ME2/2', 
            'ME3/1', 
            'ME3/2', 
            'ME4/1'),
        algo_name = cms.string('CSCSegAlgoSK'),
        parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
            1, 1, 1, 1),
        algo_psets = cms.VPSet(cms.PSet(
            dPhiFineMax = cms.double(0.025),
            verboseInfo = cms.untracked.bool(True),
            chi2Max = cms.double(99999.0),
            dPhiMax = cms.double(0.003),
            wideSeg = cms.double(3.0),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(8.0),
            dRPhiMax = cms.double(8.0)
        ), 
            cms.PSet(
                dPhiFineMax = cms.double(0.025),
                verboseInfo = cms.untracked.bool(True),
                chi2Max = cms.double(99999.0),
                dPhiMax = cms.double(0.025),
                wideSeg = cms.double(3.0),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(3.0),
                dRPhiMax = cms.double(8.0)
            ))
    ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1'),
            algo_name = cms.string('CSCSegAlgoTC'),
            parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
                1, 1, 1, 1),
            algo_psets = cms.VPSet(cms.PSet(
                dPhiFineMax = cms.double(0.02),
                verboseInfo = cms.untracked.bool(True),
                SegmentSorting = cms.int32(1),
                chi2Max = cms.double(6000.0),
                dPhiMax = cms.double(0.003),
                chi2ndfProbMin = cms.double(0.0001),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(6.0),
                dRPhiMax = cms.double(1.2)
            ), 
                cms.PSet(
                    dPhiFineMax = cms.double(0.013),
                    verboseInfo = cms.untracked.bool(True),
                    SegmentSorting = cms.int32(1),
                    chi2Max = cms.double(6000.0),
                    dPhiMax = cms.double(0.00198),
                    chi2ndfProbMin = cms.double(0.0001),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(3.0),
                    dRPhiMax = cms.double(0.6)
                ))
        ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1'),
            algo_name = cms.string('CSCSegAlgoDF'),
            parameters_per_chamber_type = cms.vint32(3, 1, 2, 2, 1, 
                2, 1, 2, 1),
            algo_psets = cms.VPSet(cms.PSet(
                tanThetaMax = cms.double(1.2),
                maxRatioResidualPrune = cms.double(3.0),
                dPhiFineMax = cms.double(0.025),
                tanPhiMax = cms.double(0.5),
                dXclusBoxMax = cms.double(8.0),
                preClustering = cms.untracked.bool(False),
                chi2Max = cms.double(5000.0),
                minHitsPerSegment = cms.int32(3),
                minHitsForPreClustering = cms.int32(10),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(8.0),
                nHitsPerClusterIsShower = cms.int32(20),
                CSCSegmentDebug = cms.untracked.bool(False),
                Pruning = cms.untracked.bool(False),
                dYclusBoxMax = cms.double(8.0)
            ), 
                cms.PSet(
                    tanThetaMax = cms.double(2.0),
                    maxRatioResidualPrune = cms.double(3.0),
                    dPhiFineMax = cms.double(0.025),
                    tanPhiMax = cms.double(0.8),
                    dXclusBoxMax = cms.double(8.0),
                    preClustering = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    minHitsPerSegment = cms.int32(3),
                    minHitsForPreClustering = cms.int32(10),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(12.0),
                    nHitsPerClusterIsShower = cms.int32(20),
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    dYclusBoxMax = cms.double(12.0)
                ), 
                cms.PSet(
                    tanThetaMax = cms.double(1.2),
                    maxRatioResidualPrune = cms.double(3.0),
                    dPhiFineMax = cms.double(0.025),
                    tanPhiMax = cms.double(0.5),
                    dXclusBoxMax = cms.double(8.0),
                    preClustering = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    minHitsPerSegment = cms.int32(3),
                    minHitsForPreClustering = cms.int32(30),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(8.0),
                    nHitsPerClusterIsShower = cms.int32(20),
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    dYclusBoxMax = cms.double(8.0)
                ))
        ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1', 
                'ME4/2'),
            algo_name = cms.string('CSCSegAlgoST'),
            parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
                1, 1, 1, 1, 1),
            algo_psets = cms.VPSet(cms.PSet(
                maxRatioResidualPrune = cms.double(3),
                yweightPenalty = cms.double(1.5),
                maxRecHitsInCluster = cms.int32(20),
                preClusteringUseChaining = cms.bool(True),
                ForceCovariance = cms.bool(False),
                hitDropLimit6Hits = cms.double(0.3333),
                NormChi2Cut2D = cms.double(20.0),
                BPMinImprovement = cms.double(10000.0),
                Covariance = cms.double(0.0),
                tanPhiMax = cms.double(0.5),
                onlyBestSegment = cms.bool(False),
                SeedBig = cms.double(0.0015),
                dRPhiFineMax = cms.double(8.0),
                SeedSmall = cms.double(0.0002),
                curvePenalty = cms.double(2.0),
                dXclusBoxMax = cms.double(4.0),
                BrutePruning = cms.bool(True),
                curvePenaltyThreshold = cms.double(0.85),
                CorrectTheErrors = cms.bool(True),
                hitDropLimit4Hits = cms.double(0.6),
                useShowering = cms.bool(False),
                CSCDebug = cms.untracked.bool(False),
                yweightPenaltyThreshold = cms.double(1.0),
                tanThetaMax = cms.double(1.2),
                NormChi2Cut3D = cms.double(10.0),
                minHitsPerSegment = cms.int32(3),
                ForceCovarianceAll = cms.bool(False),
                dPhiFineMax = cms.double(0.025),
                prePrunLimit = cms.double(3.17),
                hitDropLimit5Hits = cms.double(0.8),
                preClustering = cms.bool(True),
                prePrun = cms.bool(True),
                maxDPhi = cms.double(999.0),
                maxDTheta = cms.double(999.0),
                Pruning = cms.bool(True),
                dYclusBoxMax = cms.double(8.0)
            ), 
                cms.PSet(
                    maxRatioResidualPrune = cms.double(3),
                    yweightPenalty = cms.double(1.5),
                    maxRecHitsInCluster = cms.int32(24),
                    preClusteringUseChaining = cms.bool(True),
                    ForceCovariance = cms.bool(False),
                    hitDropLimit6Hits = cms.double(0.3333),
                    NormChi2Cut2D = cms.double(20.0),
                    BPMinImprovement = cms.double(10000.0),
                    Covariance = cms.double(0.0),
                    tanPhiMax = cms.double(0.5),
                    onlyBestSegment = cms.bool(False),
                    SeedBig = cms.double(0.0015),
                    dRPhiFineMax = cms.double(8.0),
                    SeedSmall = cms.double(0.0002),
                    curvePenalty = cms.double(2.0),
                    dXclusBoxMax = cms.double(4.0),
                    BrutePruning = cms.bool(True),
                    curvePenaltyThreshold = cms.double(0.85),
                    CorrectTheErrors = cms.bool(True),
                    hitDropLimit4Hits = cms.double(0.6),
                    useShowering = cms.bool(False),
                    CSCDebug = cms.untracked.bool(False),
                    yweightPenaltyThreshold = cms.double(1.0),
                    tanThetaMax = cms.double(1.2),
                    NormChi2Cut3D = cms.double(10.0),
                    minHitsPerSegment = cms.int32(3),
                    ForceCovarianceAll = cms.bool(False),
                    dPhiFineMax = cms.double(0.025),
                    prePrunLimit = cms.double(3.17),
                    hitDropLimit5Hits = cms.double(0.8),
                    preClustering = cms.bool(True),
                    prePrun = cms.bool(True),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    Pruning = cms.bool(True),
                    dYclusBoxMax = cms.double(8.0)
                ))
        )),
    algo_type = cms.int32(4)
)


process.cscTriggerPrimitiveDigis = cms.EDProducer("CSCTriggerPrimitivesProducer",
    MaxBX = cms.int32(9),
    MinBX = cms.int32(3),
    clctParamMTCC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(4),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(1)
    ),
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    alctParamMTCC = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(3),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    clctParamOldMC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(2),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(4)
    ),
    tmbParam = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        verbosity = cms.untracked.int32(0),
        clctTrigEnable = cms.uint32(0),
        tmbL1aWindowSize = cms.uint32(7),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        matchTrigEnable = cms.uint32(1)
    ),
    commonParam = cms.PSet(
        isTMB07 = cms.bool(True),
        isMTCC = cms.bool(False)
    ),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    alctParam07 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(7),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(2),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    alctParamOldMC = cms.PSet(
        alctAccelMode = cms.uint32(1),
        alctTrigMode = cms.uint32(3),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(5),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    clctParam07 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(2),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(4)
    )
)


process.csctfDigis = cms.EDProducer("CSCTFUnpacker",
    mappingFile = cms.string(''),
    producer = cms.InputTag("rawDataCollector"),
    MaxBX = cms.int32(9),
    slot2sector = cms.vint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0),
    swapME1strips = cms.bool(False),
    MinBX = cms.int32(3)
)


process.ctfCombinedSeeds = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesCombinedSeeds"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfNoOverlaps = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesNoOverlaps"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfPixelLess = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesPixelLess"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('RKFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfWithMaterialTracksCosmics = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesP5"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FittingSmootherRKP5'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('ctf'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.dedxDQMHarm2PO = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(False),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('generic'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    trajectoryTrackAssociation = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(True),
    exponent = cms.double(-2.0)
)


process.dedxDQMHarm2SO = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('generic'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    trajectoryTrackAssociation = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    exponent = cms.double(-2.0)
)


process.dedxDQMHarm2SP = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('generic'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(True),
    exponent = cms.double(-2.0),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimASmi = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(3),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimBTag = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(1),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimProd = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(0),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimSmi = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(2),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxHarmonic2 = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('generic'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    trajectoryTrackAssociation = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    exponent = cms.double(-2.0)
)


process.dedxMedian = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('median'),
    ShapeTest = cms.bool(False),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxTruncated40 = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('truncated'),
    ShapeTest = cms.bool(True),
    fraction = cms.double(0.4),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxUnbinned = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('unbinnedFit'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.detachedTripletStep = cms.EDProducer("TrackListMerger",
    ShareFrac = cms.double(0.19),
    writeOnlyTrkQuals = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("detachedTripletStepSelector","detachedTripletStepVtx"), cms.InputTag("detachedTripletStepSelector","detachedTripletStepTrk")),
    allowFirstHitShare = cms.bool(True),
    MaxNormalizedChisq = cms.double(1000.0),
    hasSelector = cms.vint32(1, 1),
    FoundHitBonus = cms.double(5.0),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(0, 1)
    )),
    MinFound = cms.int32(3),
    TrackProducers = cms.VInputTag(cms.InputTag("detachedTripletStepTracks"), cms.InputTag("detachedTripletStepTracks")),
    LostHitPenalty = cms.double(20.0),
    newQuality = cms.string('confirmed')
)


process.detachedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("pixelPairStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("pixelPairStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("pixelPairStepSelector","pixelPairStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.detachedTripletStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletLargeTipGenerator'),
            extraHitRPhitolerance = cms.double(0.0),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.0)
        ),
        SeedingLayers = cms.string('detachedTripletStepSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False),
        FilterAtHelixStage = cms.bool(False)
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(1.5),
            ptMin = cms.double(0.3),
            originHalfLength = cms.double(15.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.detachedTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("detachedTripletStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(0),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(3),
        chi2n_par = cms.double(1.6),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(1.3, 3.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(1.2, 3.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(999),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('detachedTripletStepVtxLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.001),
        d0_par2 = cms.vdouble(1.3, 3.0),
        d0_par1 = cms.vdouble(1.2, 3.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(0),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('loose'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(1.6, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(1.6, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('detachedTripletStepTrkLoose'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(1.6, 4.0),
            d0_par1 = cms.vdouble(1.6, 4.0),
            preFilterName = cms.string(''),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            dz_par1 = cms.vdouble(0.9, 3.0),
            dz_par2 = cms.vdouble(1.0, 3.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('detachedTripletStepVtxTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('detachedTripletStepVtxLoose'),
            d0_par2 = cms.vdouble(1.0, 3.0),
            d0_par1 = cms.vdouble(0.95, 3.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.5),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('detachedTripletStepTrkTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('detachedTripletStepTrkLoose'),
            d0_par2 = cms.vdouble(1.1, 4.0),
            d0_par1 = cms.vdouble(1.1, 4.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.9, 3.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.8, 3.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('detachedTripletStepVtx'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.9, 3.0),
            d0_par1 = cms.vdouble(0.85, 3.0),
            preFilterName = cms.string('detachedTripletStepVtxTight'),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(4),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.4),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(1.0, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(1.0, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('detachedTripletStepTrk'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(1.0, 4.0),
            d0_par1 = cms.vdouble(1.0, 4.0),
            preFilterName = cms.string('detachedTripletStepTrkTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.detachedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("detachedTripletStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    TrajectoryBuilder = cms.string('detachedTripletStepTrajectoryBuilder'),
    numHitsForSeedCleaner = cms.int32(50)
)


process.detachedTripletStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("detachedTripletStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter3'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.dqmGctDigis = cms.EDProducer("GctRawToDigi",
    unpackSharedRegions = cms.bool(False),
    numberOfGctSamplesToUnpack = cms.uint32(5),
    verbose = cms.untracked.bool(False),
    numberOfRctSamplesToUnpack = cms.uint32(1),
    inputLabel = cms.InputTag("rawDataCollector"),
    unpackerVersion = cms.uint32(0),
    gctFedId = cms.untracked.int32(745),
    hltMode = cms.bool(False)
)


process.dqmGtDigis = cms.EDProducer("L1GlobalTriggerRawToDigi",
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("rawDataCollector"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535)
)


process.dqmL1ExtraParticles = cms.EDProducer("L1ExtraParticlesProd",
    tauJetSource = cms.InputTag("dqmGctDigis","tauJets"),
    nonIsolatedEmSource = cms.InputTag("dqmGctDigis","nonIsoEm"),
    etTotalSource = cms.InputTag("dqmGctDigis"),
    etHadSource = cms.InputTag("dqmGctDigis"),
    centralJetSource = cms.InputTag("dqmGctDigis","cenJets"),
    etMissSource = cms.InputTag("dqmGctDigis"),
    hfRingEtSumsSource = cms.InputTag("dqmGctDigis"),
    produceMuonParticles = cms.bool(True),
    forwardJetSource = cms.InputTag("dqmGctDigis","forJets"),
    ignoreHtMiss = cms.bool(False),
    htMissSource = cms.InputTag("dqmGctDigis"),
    produceCaloParticles = cms.bool(True),
    muonSource = cms.InputTag("dqmGtDigis"),
    isolatedEmSource = cms.InputTag("dqmGctDigis","isoEm"),
    centralBxOnly = cms.bool(False),
    hfRingBitCountsSource = cms.InputTag("dqmGctDigis")
)


process.dt1DCosmicRecHits = cms.EDProducer("DTRecHitProducer",
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(False),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis")
)


process.dt1DRecHits = cms.EDProducer("DTRecHitProducer",
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(True),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(True),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string(''),
            doWirePropCorrection = cms.bool(True),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis")
)


process.dt2DCosmicSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        perform_delta_rejecting = cms.bool(True),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits")
)


process.dt2DSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        perform_delta_rejecting = cms.bool(True),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits")
)


process.dt4DCosmicSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(False),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(False),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string('cosmics'),
                    doWirePropCorrection = cms.bool(False),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(1),
            perform_delta_rejecting = cms.bool(False),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(100.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(100.0),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        perform_delta_rejecting = cms.bool(False),
        nSharedHitsMax = cms.int32(2),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    ),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits"),
    recHits2DLabel = cms.InputTag("dt2DCosmicSegments")
)


process.dt4DSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(True),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(True),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string(''),
                    doWirePropCorrection = cms.bool(True),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(2),
            perform_delta_rejecting = cms.bool(True),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(1.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(0.9),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        perform_delta_rejecting = cms.bool(True),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    ),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits"),
    recHits2DLabel = cms.InputTag("dt2DSegments")
)


process.dt4DSegmentsNoWire = cms.EDProducer("DTRecSegment4DProducer",
    debug = cms.untracked.bool(False),
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    recHits2DLabel = cms.InputTag("dt2DSegments"),
    recHits1DLabel = cms.InputTag("dt1DRecHits"),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(True),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(True),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string(''),
                    doWirePropCorrection = cms.bool(False),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(2),
            perform_delta_rejecting = cms.bool(True),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(1.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(0.9),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        perform_delta_rejecting = cms.bool(True),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    )
)


process.dt4DSegmentsT0Seg = cms.EDProducer("DTSegment4DT0Corrector",
    recAlgo = cms.string('DTLinearDriftAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        debug = cms.untracked.bool(False),
        maxTime = cms.double(420.0),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        )
    ),
    debug = cms.untracked.bool(False),
    perform_delta_rejecting = cms.bool(False),
    hit_afterT0_resolution = cms.double(0.03),
    recHits4DLabel = cms.InputTag("dt4DSegments"),
    performT0_vdriftSegCorrection = cms.bool(True)
)


process.dtDataIntegrityUnpacker = cms.EDProducer("DTUnpackingModule",
    useStandardFEDid = cms.bool(True),
    inputLabel = cms.InputTag("rawDataCollector"),
    dataType = cms.string('DDU'),
    fedbyType = cms.bool(False),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            writeSC = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            performDataIntegrityMonitor = cms.untracked.bool(True),
            readDDUIDfromDDU = cms.untracked.bool(True),
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False)
        ),
        performDataIntegrityMonitor = cms.untracked.bool(True),
        localDAQ = cms.untracked.bool(False)
    ),
    dqmOnly = cms.bool(True)
)


process.dtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    lutDumpFlag = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    lutBtic = cms.untracked.int32(31),
    digiTag = cms.InputTag("muonDTDigis"),
    DTTFSectorNumbering = cms.bool(True)
)


process.dttfDigis = cms.EDProducer("DTTFFEDReader",
    verbose = cms.untracked.bool(False),
    DTTF_FED_Source = cms.InputTag("rawDataCollector")
)


process.ecalCompactTrigPrim = cms.EDProducer("EcalCompactTrigPrimProducer",
    outColl = cms.string(''),
    inColl = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalDetIdToBeRecovered = cms.EDProducer("EcalDetIdToBeRecoveredProducer",
    ebIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    ebDetIdToBeRecovered = cms.string('ebDetId'),
    integrityTTIdErrors = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    eeIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    ebFEToBeRecovered = cms.string('ebFE'),
    ebIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    eeDetIdToBeRecovered = cms.string('eeDetId'),
    eeIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    eeIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    ebIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    ebSrFlagCollection = cms.InputTag("ecalDigis"),
    eeSrFlagCollection = cms.InputTag("ecalDigis"),
    integrityBlockSizeErrors = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors"),
    eeFEToBeRecovered = cms.string('eeFE')
)


process.ecalDigis = cms.EDProducer("EcalRawToDigi",
    tccUnpacking = cms.bool(True),
    FedLabel = cms.InputTag("listfeds"),
    srpUnpacking = cms.bool(True),
    syncCheck = cms.bool(True),
    feIdCheck = cms.bool(True),
    silentMode = cms.untracked.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    orderedFedList = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    eventPut = cms.bool(True),
    numbTriggerTSamples = cms.int32(1),
    numbXtalTSamples = cms.int32(10),
    orderedDCCIdList = cms.vint32(1, 2, 3, 4, 5, 
        6, 7, 8, 9, 10, 
        11, 12, 13, 14, 15, 
        16, 17, 18, 19, 20, 
        21, 22, 23, 24, 25, 
        26, 27, 28, 29, 30, 
        31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 
        41, 42, 43, 44, 45, 
        46, 47, 48, 49, 50, 
        51, 52, 53, 54),
    FEDs = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    DoRegional = cms.bool(False),
    feUnpacking = cms.bool(True),
    forceToKeepFRData = cms.bool(False),
    headerUnpacking = cms.bool(True),
    memUnpacking = cms.bool(True)
)


process.ecalDrivenElectronSeeds = cms.EDProducer("ElectronSeedProducer",
    endcapSuperClusters = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    SeedConfiguration = cms.PSet(
        PhiMax2B = cms.double(0.002),
        hOverEPtMin = cms.double(0.0),
        PhiMax2F = cms.double(0.003),
        searchInTIDTEC = cms.bool(True),
        PhiMin2F = cms.double(-0.003),
        deltaZ1WithVertex = cms.double(25.0),
        HighPtThreshold = cms.double(35.0),
        r2MinF = cms.double(-0.15),
        maxHBarrel = cms.double(0.0),
        DeltaPhi1Low = cms.double(0.23),
        DeltaPhi1High = cms.double(0.08),
        ePhiMin1 = cms.double(-0.125),
        hcalTowers = cms.InputTag("towerMaker"),
        LowPtThreshold = cms.double(5.0),
        maxHOverEBarrel = cms.double(0.15),
        dynamicPhiRoad = cms.bool(True),
        ePhiMax1 = cms.double(0.075),
        measurementTrackerName = cms.string(''),
        SizeWindowENeg = cms.double(0.675),
        nSigmasDeltaZ1 = cms.double(5.0),
        rMaxI = cms.double(0.2),
        maxHEndcaps = cms.double(0.0),
        preFilteredSeeds = cms.bool(False),
        r2MaxF = cms.double(0.15),
        maxHOverEEndcaps = cms.double(0.15),
        pPhiMin1 = cms.double(-0.075),
        initialSeeds = cms.InputTag("newCombinedSeeds"),
        pPhiMax1 = cms.double(0.125),
        SCEtCut = cms.double(4.0),
        z2MaxB = cms.double(0.09),
        fromTrackerSeeds = cms.bool(True),
        hcalRecHits = cms.InputTag("hbhereco"),
        z2MinB = cms.double(-0.09),
        rMinI = cms.double(-0.2),
        hOverEConeSize = cms.double(0.15),
        hOverEHBMinE = cms.double(0.7),
        useRecoVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
        DeltaPhi2F = cms.double(0.012),
        applyHOverECut = cms.bool(True),
        hOverEHFMinE = cms.double(0.8),
        DeltaPhi2B = cms.double(0.008),
        PhiMin2B = cms.double(-0.002)
    ),
    barrelSuperClusters = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalDrivenGsfElectronCores = cms.EDProducer("GsfElectronCoreEcalDrivenProducer",
    ctfTracks = cms.InputTag("generalTracks"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    useGsfPfRecTracks = cms.bool(True)
)


process.ecalDrivenGsfElectrons = cms.EDProducer("GsfElectronEcalDrivenProducer",
    hOverEPtMin = cms.double(0.0),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ctfTracksTag = cms.InputTag("generalTracks"),
    maxHBarrelPflow = cms.double(0.0),
    minSCEtBarrel = cms.double(4.0),
    recHitSeverityToBeExcludedBarrel = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    etMinEndcaps = cms.double(0.11),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    minEOverPBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    eMinBarrel = cms.double(0.095),
    isFiducial = cms.bool(False),
    maxDeltaEtaEndcaps = cms.double(0.02),
    minEOverPBarrel = cms.double(0.0),
    maxVtxDistTk = cms.double(0.2),
    maxFbremBarrel = cms.double(999999999.0),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    applyAmbResolution = cms.bool(False),
    minMVAPflow = cms.double(-0.4),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    hOverEConeSizePflow = cms.double(0.15),
    recHitSeverityToBeExcludedEndcaps = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    minSCEtEndcaps = cms.double(4.0),
    ambSortingStrategy = cms.uint32(1),
    etMinHcal = cms.double(0.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    pfMvaTag = cms.InputTag(""),
    pflowGsfElectronsTag = cms.InputTag(""),
    maxHBarrel = cms.double(0.0),
    intRadiusEcalBarrel = cms.double(3.0),
    recHitFlagsToBeExcludedEndcaps = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    minEOverPEndcapsPflow = cms.double(0.0),
    eMinEndcaps = cms.double(0.0),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    useNumCrystals = cms.bool(True),
    addPflowElectrons = cms.bool(True),
    ctfTracksCheck = cms.bool(True),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    stripEndcapTk = cms.double(0.015),
    isEndcaps = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxEOverPBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    hOverEConeSize = cms.double(0.15),
    maxDrbTk = cms.double(999999999.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    minSCEtBarrelPflow = cms.double(0.0),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minMvaByPassForIsolatedPflow = cms.double(-0.4),
    vetoClustered = cms.bool(False),
    hcalTowers = cms.InputTag("towerMaker"),
    etMinBarrel = cms.double(0.0),
    intRadiusHcal = cms.double(0.15),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEEndcaps = cms.double(0.15),
    isBarrel = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    minSCEtEndcapsPflow = cms.double(0.0),
    previousGsfElectronsTag = cms.InputTag(""),
    stripBarrelTk = cms.double(0.015),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxDeltaEtaBarrel = cms.double(0.02),
    ambClustersOverlapStrategy = cms.uint32(1),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    ptMinTk = cms.double(0.7),
    intRadiusEcalEndcaps = cms.double(3.0),
    minEOverPEndcaps = cms.double(0.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    jurassicWidth = cms.double(1.5),
    minMvaByPassForIsolated = cms.double(-0.4),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    intRadiusEndcapTk = cms.double(0.015),
    applyPreselection = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    minMVA = cms.double(-0.4),
    useGsfPfRecTracks = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    hOverEPtMinPflow = cms.double(0.0),
    recHitFlagsToBeExcludedBarrel = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    intRadiusBarrelTk = cms.double(0.015)
)


process.ecalEtaCorrected = cms.EDProducer("EcalRecalibRecHitProducer",
    doEnergyScale = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False),
    EERecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilter","etaEcalRecHitsEE"),
    doEnergyScaleInverse = cms.bool(False),
    EBRecHitCollection = cms.InputTag("hltAlCaEtaRecHitsFilter","etaEcalRecHitsEB"),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(True),
    EBRecalibRecHitCollection = cms.string('etaEcalRecHitsEB'),
    doIntercalib = cms.bool(False),
    EERecalibRecHitCollection = cms.string('etaEcalRecHitsEE')
)


process.ecalGlobalUncalibRecHit = cms.EDProducer("EcalUncalibRecHitProducer",
    outOfTimeThresholdGain61pEB = cms.double(5),
    eePulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
        1.0, 0.8876, 0.6732, 0.4741, 0.3194),
    amplitudeThresholdEE = cms.double(10),
    EBtimeFitParameters = cms.vdouble(-2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 
        91.01147, -50.35761, 11.05621),
    EEhitCollection = cms.string('EcalUncalibRecHitsEE'),
    EEdigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EEtimeNconst = cms.double(31.8),
    EBtimeConstantTerm = cms.double(0.6),
    outOfTimeThresholdGain61pEE = cms.double(10),
    doEBtimeCorrection = cms.bool(True),
    EEamplitudeFitParameters = cms.vdouble(1.89, 1.4),
    EBtimeNconst = cms.double(28.5),
    kPoorRecoFlagEB = cms.bool(True),
    ebPulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
        1.0, 0.8876, 0.6732, 0.4741, 0.3194),
    EBtimeFitLimits_Lower = cms.double(0.2),
    kPoorRecoFlagEE = cms.bool(False),
    chi2ThreshEB_ = cms.double(36.0),
    EBdigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    EEtimeFitParameters = cms.vdouble(-2.390548, 3.553628, -17.62341, 67.67538, -133.213, 
        140.7432, -75.41106, 16.20277),
    algo = cms.string('EcalUncalibRecHitWorkerGlobal'),
    EEchi2Parameters = cms.vdouble(2.122, 0.022, 2.122, 0.022),
    EEtimeCorrShiftBins = cms.vdouble(-0.896, -0.896, -0.896, -0.896, -0.563, 
        -0.392, -0.287, -0.203, -0.135, -0.1, 
        -0.068, -0.05, -0.06, -0.052, -0.055, 
        -0.05, -0.052, -0.056, -0.055, -0.056, 
        -0.048, -0.037, -0.038, -0.037, -0.025, 
        -0.026, -0.024, -0.013, -0.003, 0.005, 
        0.02, 0.026, 0.008, 0.007, -0.006, 
        0.024, 0.045, 0.062, 0.085, 0.088, 
        0.111, 0.139, 0.156, 0.176, 0.21, 
        0.242, 0.267, 0.301, 0.318, 0.278, 
        0.287, 0.218, 0.305, 0.245, 0.184, 
        -0.159, -0.095, 0.037),
    outOfTimeThresholdGain12mEE = cms.double(10),
    outOfTimeThresholdGain12mEB = cms.double(5),
    EEtimeFitLimits_Upper = cms.double(1.4),
    EEtimeFitLimits_Lower = cms.double(0.2),
    ebSpikeThreshold = cms.double(1.042),
    EBamplitudeFitParameters = cms.vdouble(1.138, 1.652),
    EEtimeCorrAmplitudeBins = cms.vdouble(15.7, 17.6, 19.7, 22.1, 24.8, 
        27.9, 31.3, 35.1, 39.4, 44.2, 
        49.6, 55.6, 62.4, 70, 78.6, 
        88.1, 98.9, 111, 124.5, 139.7, 
        156.7, 175.9, 197.3, 221.4, 248.4, 
        278.7, 312.7, 350.9, 393.7, 441.7, 
        495.6, 556.1, 624, 700.1, 785.5, 
        881.4, 988.9, 1109.6, 1245, 1396.9, 
        1567.3, 1758.6, 1973.1, 2213.9, 2484, 
        2787.1, 3127.2, 3508.8, 3936.9, 4417.3, 
        4956.3, 5561.1, 6239.6, 7001, 7522.8, 
        8440.7, 9470.6, 10626),
    doEEtimeCorrection = cms.bool(True),
    amplitudeThresholdEB = cms.double(10),
    outOfTimeThresholdGain12pEE = cms.double(10),
    outOfTimeThresholdGain12pEB = cms.double(5),
    EBtimeCorrAmplitudeBins = cms.vdouble(7.9, 8.9, 10, 11.2, 12.5, 
        14.1, 15.8, 17.7, 19.9, 22.3, 
        25, 28.1, 31.5, 35.3, 39.7, 
        44.5, 49.9, 56, 62.8, 70.5, 
        79.1, 88.8, 99.6, 111.7, 125.4, 
        140.7, 157.9, 177.1, 198.7, 223, 
        250.2, 280.7, 315, 353.4, 396.5, 
        444.9, 499.2, 560.1, 628.4, 705.1, 
        791.1, 887.7, 996, 1117.5, 1253.9, 
        1406.8, 1578.5, 1771.1, 1987.2, 2229.7, 
        2501.8, 2807, 3149.5, 3533.8, 3895.9, 
        3896, 4311.8, 4837.9, 5428.2, 6090.6, 
        6833.7, 7667.5, 8603.1, 9652.9, 10830, 
        12152, 13635, 15298, 17165, 19260, 
        21610),
    EBtimeCorrShiftBins = cms.vdouble(-1.77, -1.77, -1.77, -1.77, -1.666, 
        -1.43, -1.233, -1.012, -0.866, -0.736, 
        -0.64, -0.561, -0.505, -0.452, -0.405, 
        -0.363, -0.335, -0.305, -0.279, -0.26, 
        -0.239, -0.22, -0.204, -0.191, -0.186, 
        -0.177, -0.158, -0.137, -0.126, -0.115, 
        -0.104, -0.096, -0.085, -0.064, -0.056, 
        -0.036, -0.02, -0.006, -0.02, -0.009, 
        -0.02, 0.005, 0.053, 0.076, 0.093, 
        0.137, 0.143, 0.171, 0.222, 0.229, 
        0.271, 0.298, 0.312, 0.307, 0.254, 
        -0.997, -0.859, -0.819, -0.775, -0.589, 
        -0.428, -0.288, -0.434, -0.277, -0.21, 
        -0.179, -0.134, 0.362, 0.152, -0.282, 
        -0.382),
    outOfTimeThresholdGain61mEB = cms.double(5),
    EBhitCollection = cms.string('EcalUncalibRecHitsEB'),
    outOfTimeThresholdGain61mEE = cms.double(10),
    EEtimeConstantTerm = cms.double(1.0),
    EBchi2Parameters = cms.vdouble(2.122, 0.022, 2.122, 0.022),
    chi2ThreshEE_ = cms.double(95.0),
    EBtimeFitLimits_Upper = cms.double(1.4)
)


process.ecalPhiSymCorrected = cms.EDProducer("EcalRecalibRecHitProducer",
    doEnergyScale = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False),
    EERecHitCollection = cms.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEE"),
    doEnergyScaleInverse = cms.bool(False),
    EBRecHitCollection = cms.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEB"),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(True),
    EBRecalibRecHitCollection = cms.string('phiSymEcalRecHitsEB'),
    doIntercalib = cms.bool(False),
    EERecalibRecHitCollection = cms.string('phiSymEcalRecHitsEE')
)


process.ecalPi0Corrected = cms.EDProducer("EcalRecalibRecHitProducer",
    doEnergyScale = cms.bool(False),
    doLaserCorrectionsInverse = cms.bool(False),
    EERecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilter","pi0EcalRecHitsEE"),
    doEnergyScaleInverse = cms.bool(False),
    EBRecHitCollection = cms.InputTag("hltAlCaPi0RecHitsFilter","pi0EcalRecHitsEB"),
    doIntercalibInverse = cms.bool(False),
    doLaserCorrections = cms.bool(True),
    EBRecalibRecHitCollection = cms.string('pi0EcalRecHitsEB'),
    doIntercalib = cms.bool(False),
    EERecalibRecHitCollection = cms.string('pi0EcalRecHitsEE')
)


process.ecalPreshowerDigis = cms.EDProducer("ESRawToDigi",
    sourceTag = cms.InputTag("rawDataCollector"),
    debugMode = cms.untracked.bool(False),
    InstanceES = cms.string(''),
    LookupTable = cms.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    ESdigiCollection = cms.string('')
)


process.ecalPreshowerRecHit = cms.EDProducer("ESRecHitProducer",
    ESRecoAlgo = cms.int32(0),
    ESrechitCollection = cms.string('EcalRecHitsES'),
    algo = cms.string('ESRecHitWorker'),
    ESdigiCollection = cms.InputTag("ecalPreshowerDigis")
)


process.ecalRecHit = cms.EDProducer("EcalRecHitProducer",
    recoverEEVFE = cms.bool(False),
    EErechitCollection = cms.string('EcalRecHitsEE'),
    recoverEBIsolatedChannels = cms.bool(False),
    recoverEBVFE = cms.bool(False),
    laserCorrection = cms.bool(True),
    EBLaserMIN = cms.double(0.5),
    killDeadChannels = cms.bool(True),
    dbStatusToBeExcludedEB = cms.vint32(142),
    EEuncalibRecHitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEE"),
    dbStatusToBeExcludedEE = cms.vint32(142),
    EELaserMIN = cms.double(0.5),
    ebFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebFE"),
    cleaningConfig = cms.PSet(
        e6e2thresh = cms.double(0.04),
        tightenCrack_e6e2_double = cms.double(3),
        tightenCrack_e4e1_single = cms.double(3),
        cThreshold_barrel = cms.double(4),
        e4e1Threshold_barrel = cms.double(0.08),
        tightenCrack_e1_single = cms.double(2),
        e4e1_b_barrel = cms.double(-0.024),
        e4e1_a_barrel = cms.double(0.04),
        cThreshold_double = cms.double(10),
        ignoreOutOfTimeThresh = cms.double(1000000000.0),
        cThreshold_endcap = cms.double(15),
        e4e1_a_endcap = cms.double(0.02),
        e4e1_b_endcap = cms.double(-0.0125),
        e4e1Threshold_endcap = cms.double(0.3),
        tightenCrack_e1_double = cms.double(2)
    ),
    logWarningEtThreshold_EE_FE = cms.double(50),
    eeDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeDetId"),
    recoverEBFE = cms.bool(True),
    algo = cms.string('EcalRecHitWorkerSimple'),
    ebDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebDetId"),
    singleChannelRecoveryThreshold = cms.double(8),
    ChannelStatusToBeExcluded = cms.vint32(3, 4, 8, 9, 10, 
        11, 12, 13, 14),
    EBrechitCollection = cms.string('EcalRecHitsEB'),
    singleChannelRecoveryMethod = cms.string('NeuralNetworks'),
    recoverEEFE = cms.bool(True),
    triggerPrimitiveDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EBLaserMAX = cms.double(2),
    flagsMapDBReco = cms.vint32(0, 0, 0, 0, 4, 
        -1, -1, -1, 4, 4, 
        7, 7, 7, 8, 9),
    EBuncalibRecHitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEB"),
    algoRecover = cms.string('EcalRecHitWorkerRecover'),
    eeFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeFE"),
    EELaserMAX = cms.double(3),
    logWarningEtThreshold_EB_FE = cms.double(50),
    recoverEEIsolatedChannels = cms.bool(False)
)


process.ecalTPSkim = cms.EDProducer("EcalTPSkimmer",
    doEndcap = cms.bool(True),
    tpOutputCollection = cms.string(''),
    tpInputCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    skipModule = cms.bool(False),
    chStatusToSelectTP = cms.vuint32(13),
    doBarrel = cms.bool(True)
)


process.egammaCTFFinalFitWithMaterial = cms.EDProducer("TrackProducer",
    src = cms.InputTag("siStripElectrons"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('egammaCTFWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('PropagatorWithMaterial')
)


process.eidCutBasedExt = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustHighEnergy = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('highenergy'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.elPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoValueCharged03NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged04NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll03NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll04NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma03NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma04NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral03NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral04NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU03NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU04NoPFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elecMet = cms.EDProducer("CandViewShallowCloneCombiner",
    decay = cms.string('pfMet WElecTagHLT'),
    cut = cms.string('daughter(0).pt > 20.000000 && daughter(1).pt > 27.000000 && sqrt(2*daughter(0).pt*daughter(1).pt*(1 - cos(daughter(0).phi - daughter(1).phi))) > 50.000000'),
    checkCharge = cms.bool(False)
)


process.electronCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("electronMergedSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('electronTrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForElectrons')
)


process.electronEcalRecHitIsolationLcone = cms.EDProducer("EgammaEcalRecHitIsolationProducer",
    useNumCrystals = cms.bool(True),
    etMinBarrel = cms.double(0.0),
    intRadiusEndcap = cms.double(3.0),
    tryBoth = cms.bool(True),
    ecalBarrelRecHitCollection = cms.InputTag("EcalRecHitsEB"),
    eMinEndcap = cms.double(0.0),
    ecalEndcapRecHitCollection = cms.InputTag("EcalRecHitsEE"),
    etMinEndcap = cms.double(0.11),
    eMinBarrel = cms.double(0.095),
    ecalEndcapRecHitProducer = cms.InputTag("ecalRecHit"),
    jurassicWidth = cms.double(1.5),
    ecalBarrelRecHitProducer = cms.InputTag("ecalRecHit"),
    extRadius = cms.double(0.4),
    useIsolEt = cms.bool(True),
    vetoClustered = cms.bool(False),
    intRadiusBarrel = cms.double(3.0),
    subtract = cms.bool(False),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronEcalRecHitIsolationScone = cms.EDProducer("EgammaEcalRecHitIsolationProducer",
    useNumCrystals = cms.bool(True),
    etMinBarrel = cms.double(0.0),
    intRadiusEndcap = cms.double(3.0),
    tryBoth = cms.bool(True),
    ecalBarrelRecHitCollection = cms.InputTag("EcalRecHitsEB"),
    eMinEndcap = cms.double(0.0),
    ecalEndcapRecHitCollection = cms.InputTag("EcalRecHitsEE"),
    etMinEndcap = cms.double(0.11),
    eMinBarrel = cms.double(0.095),
    ecalEndcapRecHitProducer = cms.InputTag("ecalRecHit"),
    jurassicWidth = cms.double(1.5),
    ecalBarrelRecHitProducer = cms.InputTag("ecalRecHit"),
    extRadius = cms.double(0.3),
    useIsolEt = cms.bool(True),
    vetoClustered = cms.bool(False),
    intRadiusBarrel = cms.double(3.0),
    subtract = cms.bool(False),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronGsfTracks = cms.EDProducer("GsfTrackProducer",
    src = cms.InputTag("electronCkfTrackCandidates"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('gsf'),
    Propagator = cms.string('fwdGsfElectronPropagator')
)


process.electronHcalDepth1TowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth1TowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth2TowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(2),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth2TowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(2),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalTowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(-1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalTowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(-1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronMergedSeeds = cms.EDProducer("ElectronSeedMerger",
    EcalBasedSeeds = cms.InputTag("ecalDrivenElectronSeeds"),
    TkBasedSeeds = cms.InputTag("trackerDrivenElectronSeeds","SeedsForGsf")
)


process.electronTrackIsolationLcone = cms.EDProducer("EgammaElectronTkIsolationProducer",
    absolut = cms.bool(True),
    trackProducer = cms.InputTag("generalTracks"),
    stripBarrel = cms.double(0.015),
    intRadiusEndcap = cms.double(0.015),
    electronProducer = cms.InputTag("gsfElectrons"),
    maxVtxDistXY = cms.double(9999.0),
    extRadius = cms.double(0.4),
    ptMin = cms.double(0.7),
    maxVtxDist = cms.double(0.2),
    stripEndcap = cms.double(0.015),
    intRadiusBarrel = cms.double(0.015),
    BeamspotProducer = cms.InputTag("offlineBeamSpot")
)


process.electronTrackIsolationScone = cms.EDProducer("EgammaElectronTkIsolationProducer",
    absolut = cms.bool(True),
    trackProducer = cms.InputTag("generalTracks"),
    stripBarrel = cms.double(0.015),
    intRadiusEndcap = cms.double(0.015),
    electronProducer = cms.InputTag("gsfElectrons"),
    maxVtxDistXY = cms.double(9999.0),
    extRadius = cms.double(0.3),
    ptMin = cms.double(0.7),
    maxVtxDist = cms.double(0.2),
    stripEndcap = cms.double(0.015),
    intRadiusBarrel = cms.double(0.015),
    BeamspotProducer = cms.InputTag("offlineBeamSpot")
)


process.fixedConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("fixedConePFTauDecayModeProducer")
)


process.fixedConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer")
)


process.fixedConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.fixedConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.fixedConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.fixedConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.fixedConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauProducer = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        useClosestPV = cms.bool(False),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.fixedConeRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        useClosestPV = cms.bool(False),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.fixedGridRhoAll = cms.EDProducer("FixedGridRhoProducer",
    EtaRegion = cms.string('All'),
    pfCandidatesTag = cms.InputTag("particleFlow")
)


process.fixedGridRhoFastjetAll = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    pfCandidatesTag = cms.InputTag("particleFlow"),
    maxRapidity = cms.double(5.0)
)


process.gctDigis = cms.EDProducer("GctRawToDigi",
    unpackSharedRegions = cms.bool(False),
    numberOfGctSamplesToUnpack = cms.uint32(1),
    verbose = cms.untracked.bool(False),
    numberOfRctSamplesToUnpack = cms.uint32(1),
    inputLabel = cms.InputTag("rawDataCollector"),
    unpackerVersion = cms.uint32(0),
    gctFedId = cms.untracked.int32(745),
    hltMode = cms.bool(False)
)


process.generalConversionStepConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(3),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(3),
    TrackProducer2 = cms.string('conversionStepConversionTrackProducer'),
    TrackProducer1 = cms.string('generalConversionTrackProducer')
)


process.generalConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    filterOnConvTrackHyp = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('generalTracks'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(True),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.generalInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(3),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(2),
    TrackProducer2 = cms.string('generalConversionStepConversionTrackMerger'),
    TrackProducer1 = cms.string('inOutOutInConversionTrackMerger')
)


process.generalTracks = cms.EDProducer("TrackListMerger",
    ShareFrac = cms.double(0.19),
    writeOnlyTrkQuals = cms.bool(False),
    MinPT = cms.double(0.05),
    makeReKeyedSeeds = cms.untracked.bool(False),
    copyExtras = cms.untracked.bool(True),
    Epsilon = cms.double(-0.001),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("initialStepSelector","initialStep"), cms.InputTag("lowPtTripletStepSelector","lowPtTripletStep"), cms.InputTag("pixelPairStepSelector","pixelPairStep"), cms.InputTag("detachedTripletStep"), cms.InputTag("mixedTripletStep"), 
        cms.InputTag("pixelLessStepSelector","pixelLessStep"), cms.InputTag("tobTecStepSelector","tobTecStep")),
    allowFirstHitShare = cms.bool(True),
    MaxNormalizedChisq = cms.double(1000.0),
    hasSelector = cms.vint32(1, 1, 1, 1, 1, 
        1, 1),
    FoundHitBonus = cms.double(5.0),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(0, 1, 2, 3, 4, 
            5, 6)
    )),
    MinFound = cms.int32(3),
    TrackProducers = cms.VInputTag(cms.InputTag("initialStepTracks"), cms.InputTag("lowPtTripletStepTracks"), cms.InputTag("pixelPairStepTracks"), cms.InputTag("detachedTripletStepTracks"), cms.InputTag("mixedTripletStepTracks"), 
        cms.InputTag("pixelLessStepTracks"), cms.InputTag("tobTecStepTracks")),
    LostHitPenalty = cms.double(20.0),
    newQuality = cms.string('confirmed')
)


process.generalV0Candidates = cms.EDProducer("V0Producer",
    kShortNormalizedMassCut = cms.double(0.0),
    vtxChi2Cut = cms.double(7.0),
    lambdaNormalizedMassCut = cms.double(0.0),
    selectKshorts = cms.bool(True),
    tkDCACut = cms.double(1.0),
    tkChi2Cut = cms.double(5.0),
    tkNhitsCut = cms.int32(6),
    trackRecoAlgorithm = cms.InputTag("generalTracks"),
    vtxSignificance2DCut = cms.double(15.0),
    selectLambdas = cms.bool(True),
    trackQualities = cms.vstring('loose'),
    vtxSignificance3DCut = cms.double(0.0),
    lambdaMassCut = cms.double(0.05),
    rVtxCut = cms.double(0.0),
    vertexFitter = cms.InputTag("KalmanVertexFitter"),
    impactParameterSigCut = cms.double(2.0),
    collinearityCut = cms.double(0.02),
    lVtxCut = cms.double(0.0),
    kShortMassCut = cms.double(0.07),
    useSmoothing = cms.bool(True),
    innerHitPosCut = cms.double(4.0),
    mPiPiCut = cms.double(0.6)
)


process.ghostTrackBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('ghostTrack'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("ghostTrackVertexTagInfos"))
)


process.ghostTrackVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    extSVDeltaRToJet = cms.double(0.3),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    constraint = cms.string('BeamSpot'),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(1),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    useExternalSV = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig'),
    extSVCollection = cms.InputTag("secondaryVertices")
)


process.gk5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.gk5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("gk5CaloJets")
)


process.gk5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.gk7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("gk7CaloJets")
)


process.gk7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.glbTrackQual = cms.EDProducer("GlobalTrackQualityProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    ),
    BaseLabel = cms.string('GLB'),
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    InputCollection = cms.InputTag("globalMuons"),
    RefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        MuonHitsOption = cms.int32(1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        Chi2ProbabilityCut = cms.double(30.0),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        DYTthrs = cms.vint32(10, 5),
        RefitRPCHits = cms.bool(True),
        Chi2CutDT = cms.double(30.0),
        PtCut = cms.double(1.0),
        SkipStation = cms.int32(-1)
    ),
    InputLinksCollection = cms.InputTag("globalMuons")
)


process.globalCombinedSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("globalSeedsFromTripletsWithVertices"), cms.InputTag("globalSeedsFromPairsWithVertices"))
)


process.globalCosmicMuons = cms.EDProducer("GlobalCosmicMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            Quality_1 = cms.double(20.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        TkTrackCollectionLabel = cms.InputTag("regionalCosmicTracks"),
        SmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny')
    ),
    MuonCollectionLabel = cms.InputTag("cosmicMuons")
)


process.globalCosmicMuons1Leg = cms.EDProducer("GlobalCosmicMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            Quality_1 = cms.double(20.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        TkTrackCollectionLabel = cms.InputTag("regionalCosmicTracks"),
        SmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    MuonCollectionLabel = cms.InputTag("cosmicMuons1Leg")
)


process.globalMixedSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(21.2)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('MixedLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalMuons = cms.EDProducer("GlobalMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    GLBTrajBuilderParameters = cms.PSet(
        ScaleTECyFactor = cms.double(-1.0),
        GlbRefitterParameters = cms.PSet(
            TrackerSkipSection = cms.int32(-1),
            DoPredictionsOnly = cms.bool(False),
            PropDirForCosmics = cms.bool(False),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            Chi2CutRPC = cms.double(1.0),
            Fitter = cms.string('GlbMuKFFitter'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('insideOut'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DYTthrs = cms.vint32(30, 15),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            RefitRPCHits = cms.bool(True),
            PtCut = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            SkipStation = cms.int32(-1),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            TrackerSkipSystem = cms.int32(-1)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        ScaleTECxFactor = cms.double(-1.0),
        MuonTrackingRegionBuilder = cms.PSet(
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            OnDemand = cms.double(-1.0),
            Rescale_Dz = cms.double(3.0),
            Eta_min = cms.double(0.1),
            Rescale_phi = cms.double(3.0),
            Eta_fixed = cms.double(0.2),
            DeltaZ_Region = cms.double(15.9),
            MeasurementTrackerName = cms.string(''),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            vertexCollection = cms.InputTag("pixelVertices"),
            Phi_fixed = cms.double(0.2),
            DeltaR = cms.double(0.2),
            EscapePt = cms.double(1.5),
            UseFixedRegion = cms.bool(False),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            Rescale_eta = cms.double(3.0),
            Phi_min = cms.double(0.1),
            UseVertex = cms.bool(False),
            beamSpot = cms.InputTag("offlineBeamSpot")
        ),
        RefitRPCHits = cms.bool(True),
        PCut = cms.double(2.5),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Propagator = cms.string('SmartPropagatorAnyRK')
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SmartPropagatorRK'),
            Quality_1 = cms.double(20.0)
        ),
        PtCut = cms.double(1.0),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackerCollectionLabel = cms.InputTag("generalTracks"),
    MuonCollectionLabel = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.globalPixelLessSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(40)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(5000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('pixelLessLayerPairs4PixelLessTracking')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalPixelSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(21.2)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('PixelLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalSETMuons = cms.EDProducer("GlobalMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    GLBTrajBuilderParameters = cms.PSet(
        ScaleTECyFactor = cms.double(-1.0),
        GlbRefitterParameters = cms.PSet(
            TrackerSkipSection = cms.int32(-1),
            DoPredictionsOnly = cms.bool(False),
            PropDirForCosmics = cms.bool(False),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            Chi2CutRPC = cms.double(1.0),
            Fitter = cms.string('GlbMuKFFitter'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('insideOut'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DYTthrs = cms.vint32(30, 15),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            RefitRPCHits = cms.bool(True),
            PtCut = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            SkipStation = cms.int32(-1),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            TrackerSkipSystem = cms.int32(-1)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        ScaleTECxFactor = cms.double(-1.0),
        MuonTrackingRegionBuilder = cms.PSet(
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            OnDemand = cms.double(-1.0),
            Rescale_Dz = cms.double(3.0),
            Eta_min = cms.double(0.1),
            Rescale_phi = cms.double(3.0),
            Eta_fixed = cms.double(0.2),
            DeltaZ_Region = cms.double(15.9),
            MeasurementTrackerName = cms.string(''),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            vertexCollection = cms.InputTag("pixelVertices"),
            Phi_fixed = cms.double(0.2),
            DeltaR = cms.double(0.2),
            EscapePt = cms.double(1.5),
            UseFixedRegion = cms.bool(False),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            Rescale_eta = cms.double(3.0),
            Phi_min = cms.double(0.1),
            UseVertex = cms.bool(False),
            beamSpot = cms.InputTag("offlineBeamSpot")
        ),
        RefitRPCHits = cms.bool(True),
        PCut = cms.double(2.5),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Propagator = cms.string('SmartPropagatorAnyRK')
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SmartPropagatorRK'),
            Quality_1 = cms.double(20.0)
        ),
        PtCut = cms.double(1.0),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackerCollectionLabel = cms.InputTag("generalTracks"),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    MuonCollectionLabel = cms.InputTag("standAloneSETMuons","UpdatedAtVtx")
)


process.globalSeedsFromPairsWithVertices = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            useFixedError = cms.bool(True),
            originRadius = cms.double(0.2),
            sigmaZVertex = cms.double(3.0),
            fixedError = cms.double(0.2),
            VertexCollection = cms.InputTag("pixelVertices"),
            ptMin = cms.double(0.9),
            useFoundVertices = cms.bool(True),
            nSigmaZ = cms.double(4.0)
        ),
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('MixedLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalSeedsFromTriplets = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(21.2)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('none')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.gsfConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    filterOnConvTrackHyp = cms.bool(False),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('electronGsfTracks'),
    setArbitratedMergedEcalGeneral = cms.bool(False),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.gsfElectronCores = cms.EDProducer("GsfElectronCoreProducer",
    ecalDrivenGsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    pflowGsfElectronCoresTag = cms.InputTag("pfElectronTranslator","pf"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    pfSuperClusterTrackMap = cms.InputTag("pfElectronTranslator","pf"),
    ctfTracks = cms.InputTag("generalTracks"),
    useGsfPfRecTracks = cms.bool(True),
    pfSuperClusters = cms.InputTag("pfElectronTranslator","pf")
)


process.gsfElectrons = cms.EDProducer("GsfElectronProducer",
    hOverEPtMin = cms.double(0.0),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ctfTracksTag = cms.InputTag("generalTracks"),
    maxHBarrelPflow = cms.double(0.0),
    minSCEtBarrel = cms.double(4.0),
    recHitSeverityToBeExcludedBarrel = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    etMinEndcaps = cms.double(0.11),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    minEOverPBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    eMinBarrel = cms.double(0.095),
    isFiducial = cms.bool(False),
    maxDeltaEtaEndcaps = cms.double(0.02),
    minEOverPBarrel = cms.double(0.0),
    maxVtxDistTk = cms.double(0.2),
    maxFbremBarrel = cms.double(999999999.0),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    applyAmbResolution = cms.bool(True),
    minMVAPflow = cms.double(-0.1),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    hOverEConeSizePflow = cms.double(0.15),
    recHitSeverityToBeExcludedEndcaps = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    minSCEtEndcaps = cms.double(4.0),
    ambSortingStrategy = cms.uint32(1),
    etMinHcal = cms.double(0.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    pfMvaTag = cms.InputTag("pfElectronTranslator","pf"),
    pflowGsfElectronsTag = cms.InputTag("pfElectronTranslator","pf"),
    maxHBarrel = cms.double(0.0),
    intRadiusEcalBarrel = cms.double(3.0),
    recHitFlagsToBeExcludedEndcaps = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    minEOverPEndcapsPflow = cms.double(0.0),
    eMinEndcaps = cms.double(0.0),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    useNumCrystals = cms.bool(True),
    addPflowElectrons = cms.bool(True),
    ctfTracksCheck = cms.bool(True),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    stripEndcapTk = cms.double(0.015),
    isEndcaps = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxEOverPBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    hOverEConeSize = cms.double(0.15),
    maxDrbTk = cms.double(999999999.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    minSCEtBarrelPflow = cms.double(0.0),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minMvaByPassForIsolatedPflow = cms.double(-0.1),
    vetoClustered = cms.bool(False),
    hcalTowers = cms.InputTag("towerMaker"),
    etMinBarrel = cms.double(0.0),
    intRadiusHcal = cms.double(0.15),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEEndcaps = cms.double(0.15),
    isBarrel = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    minSCEtEndcapsPflow = cms.double(0.0),
    previousGsfElectronsTag = cms.InputTag("ecalDrivenGsfElectrons"),
    stripBarrelTk = cms.double(0.015),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxDeltaEtaBarrel = cms.double(0.02),
    ambClustersOverlapStrategy = cms.uint32(1),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    ptMinTk = cms.double(0.7),
    intRadiusEcalEndcaps = cms.double(3.0),
    minEOverPEndcaps = cms.double(0.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    jurassicWidth = cms.double(1.5),
    minMvaByPassForIsolated = cms.double(-0.1),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    intRadiusEndcapTk = cms.double(0.015),
    applyPreselection = cms.bool(True),
    isEndcapsPflow = cms.bool(False),
    minMVA = cms.double(-0.1),
    useGsfPfRecTracks = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("gsfElectronCores"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    hOverEPtMinPflow = cms.double(0.0),
    recHitFlagsToBeExcludedBarrel = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    intRadiusBarrelTk = cms.double(0.015)
)


process.gsfGeneralConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(2),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(-1),
    TrackProducer2 = cms.string('gsfConversionTrackProducer'),
    TrackProducer1 = cms.string('generalConversionTrackProducer')
)


process.gsfGeneralInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(2),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(-1),
    TrackProducer2 = cms.string('gsfConversionTrackProducer'),
    TrackProducer1 = cms.string('generalInOutOutInConversionTrackMerger')
)


process.gtDigis = cms.EDProducer("L1GlobalTriggerRawToDigi",
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("rawDataCollector"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535)
)


process.gtDigisAlCaMB = cms.EDProducer("L1GlobalTriggerRawToDigi",
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("source"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535)
)


process.gtEvmDigis = cms.EDProducer("L1GlobalTriggerEvmRawToDigi",
    EvmGtFedId = cms.untracked.int32(812),
    EvmGtInputTag = cms.InputTag("rawDataCollector"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535),
    BstLengthBytes = cms.int32(-1)
)


process.hbheprereco = cms.EDProducer("HcalHitReconstructor",
    setTimingShapedCutsFlags = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(2),
    correctionPhaseNS = cms.double(6.0),
    timingshapedcutsParameters = cms.PSet(
        win_gain = cms.double(3.0),
        win_offset = cms.double(0.0),
        ignorehighest = cms.bool(False),
        ignorelowest = cms.bool(True),
        tfilterEnvelope = cms.vdouble(50.0, -2.0, 4.25, 52.0, -2.0, 
            4.09, 54.0, -2.0, 3.95, 56.0, 
            -2.0, 3.82, 58.0, -2.0, 3.71, 
            60.0, -2.0, 3.6, 63.0, -2.0, 
            3.46, 66.0, -2.0, 3.33, 69.0, 
            -2.0, 3.22, 73.0, -2.0, 3.1, 
            77.0, -2.0, 2.99, 82.0, -2.0, 
            2.87, 88.0, -2.0, 2.75, 95.0, 
            -2.0, 2.64, 103.0, -2.0, 2.54, 
            113.0, -2.0, 2.44, 127.0, -2.0, 
            2.33, 146.0, -2.0, 2.23, 176.0, 
            -2.0, 2.13, 250.0, -2.0, 2.0)
    ),
    digiLabel = cms.InputTag("hcalDigis"),
    pulseShapeParameters = cms.PSet(
        TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72),
        TS4TS5ChargeThreshold = cms.double(70),
        MinimumTS4TS5Threshold = cms.double(100),
        TS4TS5LowerThreshold = cms.vdouble(100, 120, 160, 200, 300, 
            500),
        TrianglePeakTS = cms.uint32(4),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        UseDualFit = cms.bool(True),
        RightSlopeCut = cms.vdouble(5, 4.15, 4.15),
        TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400),
        LinearThreshold = cms.vdouble(20, 100, 100000),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        LeftSlopeThreshold = cms.vdouble(250, 500, 100000),
        LeftSlopeCut = cms.vdouble(5, 2.55, 2.55),
        TriangleIgnoreSlow = cms.bool(False),
        TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.5, -0.4, -0.3, 
            0.1),
        MinimumChargeThreshold = cms.double(20),
        RightSlopeThreshold = cms.vdouble(250, 400, 100000),
        LinearCut = cms.vdouble(-3, -0.054, -0.054),
        RightSlopeSmallThreshold = cms.vdouble(150, 200, 100000),
        RMS8MaxThreshold = cms.vdouble(20, 100, 100000)
    ),
    setHSCPFlags = cms.bool(True),
    firstAuxTS = cms.int32(4),
    setSaturationFlags = cms.bool(True),
    useLeakCorrection = cms.bool(False),
    flagParameters = cms.PSet(
        nominalPedestal = cms.double(3.0),
        hitMultiplicityThreshold = cms.int32(17),
        hitEnergyMinimum = cms.double(1.0),
        pulseShapeParameterSets = cms.VPSet(cms.PSet(
            pulseShapeParameters = cms.vdouble(0.0, 100.0, -50.0, 0.0, -15.0, 
                0.15)
        ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(100.0, 2000.0, -50.0, 0.0, -5.0, 
                    0.05)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(2000.0, 1000000.0, -50.0, 0.0, 95.0, 
                    0.0)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(-1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 
                    0.0)
            ))
    ),
    setTimingTrustFlags = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    correctForTimeslew = cms.bool(True),
    setNoiseFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    recoParamsFromDB = cms.bool(True),
    Subdetector = cms.string('HBHE'),
    hscpParameters = cms.PSet(
        slopeMax = cms.double(-0.6),
        r1Max = cms.double(1.0),
        r1Min = cms.double(0.15),
        TimingEnergyThreshold = cms.double(30.0),
        slopeMin = cms.double(-1.5),
        outerMin = cms.double(0.0),
        outerMax = cms.double(0.1),
        fracLeaderMin = cms.double(0.4),
        r2Min = cms.double(0.1),
        r2Max = cms.double(0.5),
        fracLeaderMax = cms.double(0.7)
    ),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(True),
    firstSample = cms.int32(4)
)


process.hbhereco = cms.EDProducer("HBHEIsolatedNoiseReflagger",
    eeInput = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    LooseRBXHits1 = cms.int32(14),
    TightHPDHits2 = cms.int32(3),
    TightHPDHits1 = cms.int32(5),
    LooseEcalIsol = cms.double(0.08),
    ebInput = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    MinValidTrackPtBarrel = cms.double(0.9),
    LooseDiHitEne = cms.double(50.0),
    HBThreshold = cms.double(0.7),
    UseEcalRecoveredHits = cms.bool(False),
    TightTrackIsol = cms.double(0.05),
    LooseHPDHits1 = cms.int32(6),
    TightRBXHits2 = cms.int32(10),
    TightRBXHits1 = cms.int32(12),
    LooseRBXHits2 = cms.int32(10),
    TightEcalIsol = cms.double(0.04),
    LooseHcalIsol = cms.double(0.08),
    TightHcalIsol = cms.double(0.04),
    EBThreshold = cms.double(0.07),
    hbheInput = cms.InputTag("hbheprereco"),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    TightHPDEne2 = cms.double(25.0),
    TightMonoHitEne = cms.double(15.0),
    TightHPDEne1 = cms.double(10.0),
    LooseHPDHits2 = cms.int32(3),
    LooseHPDEne2 = cms.double(80.0),
    MinValidTrackNHits = cms.int32(5),
    LooseRBXEne1 = cms.double(10.0),
    MinValidTrackPt = cms.double(0.3),
    LooseHPDEne1 = cms.double(10.0),
    HEDThreshold = cms.double(0.8),
    trackExtrapolationInput = cms.InputTag("trackExtrapolator"),
    LooseMonoHitEne = cms.double(35.0),
    TightRBXEne2 = cms.double(50.0),
    LooseRBXEne2 = cms.double(300.0),
    TightRBXEne1 = cms.double(10.0),
    LooseTrackIsol = cms.double(0.1),
    UseHcalRecoveredHits = cms.bool(True),
    TightDiHitEne = cms.double(15.0),
    debug = cms.untracked.bool(False),
    EcalAcceptSeverityLevel = cms.uint32(3)
)


process.hbherecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HBHE'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.hbherecoNoise = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigiAlCaMB"),
    tsFromDB = cms.bool(False),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HBHE'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(0)
)


process.hcalDigiAlCaMB = cms.EDProducer("HcalRawToDigi",
    UnpackZDC = cms.untracked.bool(True),
    FilterDataQuality = cms.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    ComplainEmptyData = cms.untracked.bool(False),
    UnpackCalib = cms.untracked.bool(True),
    UnpackTTP = cms.untracked.bool(True),
    lastSample = cms.int32(9),
    firstSample = cms.int32(0)
)


process.hcalDigis = cms.EDProducer("HcalRawToDigi",
    UnpackZDC = cms.untracked.bool(True),
    FilterDataQuality = cms.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    ComplainEmptyData = cms.untracked.bool(False),
    UnpackCalib = cms.untracked.bool(True),
    UnpackTTP = cms.untracked.bool(True),
    lastSample = cms.int32(9),
    firstSample = cms.int32(0)
)


process.hcalnoise = cms.EDProducer("HcalNoiseInfoProducer",
    lMinRatio = cms.double(-999.0),
    lMaxHighEHitTime = cms.double(9999.0),
    pMinHighEHitTime = cms.double(-4.0),
    lMaxLowEHitTime = cms.double(9999.0),
    TS4TS5EnergyThreshold = cms.double(50),
    tMinRBXHits = cms.int32(50),
    TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400, 4000),
    lMinHighEHitTime = cms.double(-9999.0),
    pMinRBXHits = cms.int32(20),
    tMinHPDHits = cms.int32(16),
    minRecHitE = cms.double(1.5),
    hlMaxRBXEMF = cms.double(0.01),
    pMinEEMF = cms.double(10.0),
    pMaxRatio = cms.double(0.85),
    tMinZeros = cms.int32(8),
    minEEMF = cms.double(50.0),
    tMaxLowEHitTime = cms.double(9999.0),
    minHighHitE = cms.double(25.0),
    lMinZeros = cms.int32(10),
    lMinRBXHits = cms.int32(999),
    minERatio = cms.double(50.0),
    lMinHPDNoOtherHits = cms.int32(10),
    hlMaxHPDEMF = cms.double(-9999.0),
    minLowHitE = cms.double(10.0),
    pMinRatio = cms.double(0.75),
    pMaxRBXEMF = cms.double(0.02),
    tMaxRatio = cms.double(999.0),
    tMinHighEHitTime = cms.double(-7.0),
    TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.4, -0.2, -0.08, 
        0, 0.1),
    lMaxRatio = cms.double(999.0),
    minEZeros = cms.double(10.0),
    pMinEZeros = cms.double(5.0),
    pMinERatio = cms.double(25.0),
    pMinZeros = cms.int32(4),
    tMinRatio = cms.double(-999.0),
    TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72, 0.72),
    pMinLowEHitTime = cms.double(-6.0),
    pMinHPDHits = cms.int32(10),
    lMinLowEHitTime = cms.double(-9999.0),
    tMinHPDNoOtherHits = cms.int32(9),
    pMaxHPDEMF = cms.double(0.02),
    tMinLowEHitTime = cms.double(-9999.0),
    tMaxHighEHitTime = cms.double(6.0),
    pMaxLowEHitTime = cms.double(6.0),
    lMinHPDHits = cms.int32(17),
    TS4TS5LowerThreshold = cms.vdouble(100, 120, 150, 200, 300, 
        400, 500),
    pMinE = cms.double(40.0),
    pMinHPDNoOtherHits = cms.int32(7),
    pMaxHighEHitTime = cms.double(5.0),
    fillTracks = cms.bool(True),
    HcalAcceptSeverityLevel = cms.uint32(9),
    digiCollName = cms.string('hcalDigis'),
    minTrackPt = cms.double(1.0),
    fillDigis = cms.bool(True),
    maxTrackEta = cms.double(2.0),
    recHitCollName = cms.string('hbhereco'),
    fillRecHits = cms.bool(True),
    caloTowerCollName = cms.string('towerMaker'),
    maxCaloTowerIEta = cms.int32(20),
    maxProblemRBXs = cms.int32(20),
    trackCollName = cms.string('generalTracks'),
    fillCaloTowers = cms.bool(True),
    HcalRecHitFlagsToBeExcluded = cms.vint32(11, 12, 13, 14, 15)
)


process.hfEMClusters = cms.EDProducer("HFEMClusterProducer",
    hits = cms.InputTag("hfreco"),
    usePMTFlag = cms.bool(True),
    minTowerEnergy = cms.double(4.0),
    maximumRenergy = cms.double(50),
    maximumSL = cms.double(98),
    usePulseFlag = cms.bool(True),
    forcePulseFlagMC = cms.bool(False),
    correctionType = cms.int32(0),
    seedThresholdET = cms.double(5.0)
)


process.hfRecoEcalCandidate = cms.EDProducer("HFRecoEcalCandidateProducer",
    hfclusters = cms.InputTag("hfEMClusters"),
    e9e25Cut = cms.double(0.94),
    eSeLCut = cms.vdouble(-1, 99),
    eCOREe9Cut = cms.vdouble(-1, 99),
    e1e9Cut = cms.vdouble(-1, 99),
    Correct = cms.bool(True),
    intercept2DCut = cms.double(0.3)
)


process.hfreco = cms.EDProducer("HcalHitReconstructor",
    digiTimeFromDB = cms.bool(True),
    S9S1stat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        HcalAcceptSeverityLevel = cms.int32(9),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_optimumSlope = cms.vdouble(-99999, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927),
        long_optimumSlope = cms.vdouble(-99999, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        isS8S1 = cms.bool(False)
    ),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(1),
    correctionPhaseNS = cms.double(13.0),
    HFInWindowStat = cms.PSet(
        hflongEthresh = cms.double(40.0),
        hflongMinWindowTime = cms.vdouble(-10),
        hfshortEthresh = cms.double(40.0),
        hflongMaxWindowTime = cms.vdouble(10),
        hfshortMaxWindowTime = cms.vdouble(10),
        hfshortMinWindowTime = cms.vdouble(-12)
    ),
    digiLabel = cms.InputTag("hcalDigis"),
    setHSCPFlags = cms.bool(False),
    firstAuxTS = cms.int32(1),
    digistat = cms.PSet(
        HFdigiflagCoef = cms.vdouble(0.93, -0.38275, -0.012667),
        HFdigiflagExpectedPeak = cms.int32(2),
        HFdigiflagSamplesToAdd = cms.int32(3),
        HFdigiflagFirstSample = cms.int32(1),
        HFdigiflagMinEthreshold = cms.double(40)
    ),
    hfTimingTrustParameters = cms.PSet(
        hfTimingTrustLevel2 = cms.int32(4),
        hfTimingTrustLevel1 = cms.int32(1)
    ),
    PETstat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_R_29 = cms.vdouble(0.8),
        HcalAcceptSeverityLevel = cms.int32(9),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        short_R = cms.vdouble(0.8),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        long_R_29 = cms.vdouble(0.8),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        long_R = cms.vdouble(0.98)
    ),
    setSaturationFlags = cms.bool(True),
    useLeakCorrection = cms.bool(False),
    setTimingTrustFlags = cms.bool(True),
    S8S1stat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        HcalAcceptSeverityLevel = cms.int32(9),
        shortEnergyParams = cms.vdouble(40, 100, 100, 100, 100, 
            100, 100, 100, 100, 100, 
            100, 100, 100),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1),
        long_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1),
        longEnergyParams = cms.vdouble(40, 100, 100, 100, 100, 
            100, 100, 100, 100, 100, 
            100, 100, 100),
        isS8S1 = cms.bool(True)
    ),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    setNoiseFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    recoParamsFromDB = cms.bool(True),
    Subdetector = cms.string('HF'),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    firstSample = cms.int32(2)
)


process.hfrecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('HF'),
    correctForTimeslew = cms.bool(False),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(False),
    firstSample = cms.int32(4)
)


process.hfrecoMBspecial = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("hcalDigiAlCaMB"),
    tsFromDB = cms.bool(False),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('HF'),
    correctForTimeslew = cms.bool(False),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(False),
    firstSample = cms.int32(2)
)


process.hfrecoNoise = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("hcalDigiAlCaMB"),
    tsFromDB = cms.bool(False),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('HF'),
    correctForTimeslew = cms.bool(False),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(False),
    firstSample = cms.int32(0)
)


process.hoCalibCosmicsProducer = cms.EDProducer("AlCaHOCalibProducer",
    hbheInput = cms.InputTag("hbhereco"),
    RootFileName = cms.untracked.string('test.root'),
    hltInput = cms.InputTag("TriggerResults"),
    l1Input = cms.InputTag("l1extraParticleMap"),
    lastTS = cms.untracked.int32(8),
    hotime = cms.untracked.bool(False),
    towerInput = cms.InputTag("towerMaker"),
    hbinfo = cms.untracked.bool(False),
    hoInput = cms.InputTag("horeco"),
    digiInput = cms.untracked.bool(False),
    PedestalFile = cms.untracked.string('peds_mtcc2_4333.log'),
    m_scale = cms.untracked.double(4.0),
    debug = cms.untracked.bool(False),
    muons = cms.untracked.InputTag("cosmicMuons"),
    firstTS = cms.untracked.int32(5),
    sigma = cms.untracked.double(1.0)
)


process.hoCalibProducer = cms.EDProducer("AlCaHOCalibProducer",
    hbheInput = cms.InputTag("hbhereco"),
    RootFileName = cms.untracked.string('test.root'),
    hltInput = cms.InputTag("TriggerResults"),
    l1Input = cms.InputTag("l1extraParticleMap"),
    lastTS = cms.untracked.int32(8),
    hotime = cms.untracked.bool(False),
    towerInput = cms.InputTag("towerMaker"),
    hbinfo = cms.untracked.bool(False),
    hoInput = cms.InputTag("horeco"),
    digiInput = cms.untracked.bool(False),
    PedestalFile = cms.untracked.string('peds_mtcc2_4333.log'),
    m_scale = cms.untracked.double(4.0),
    debug = cms.untracked.bool(False),
    muons = cms.untracked.InputTag("standAloneMuons"),
    firstTS = cms.untracked.int32(5),
    sigma = cms.untracked.double(1.0)
)


process.horeco = cms.EDProducer("HcalHitReconstructor",
    samplesToAdd = cms.int32(4),
    digiLabel = cms.InputTag("hcalDigis"),
    setNoiseFlags = cms.bool(True),
    tsFromDB = cms.bool(True),
    correctionPhaseNS = cms.double(13.0),
    setSaturationFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    recoParamsFromDB = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    useLeakCorrection = cms.bool(False),
    setHSCPFlags = cms.bool(True),
    firstAuxTS = cms.int32(4),
    Subdetector = cms.string('HO'),
    setTimingTrustFlags = cms.bool(False),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.horecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HO'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.horecoNoise = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigiAlCaMB"),
    tsFromDB = cms.bool(False),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HO'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFinding = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.hpsPFTauDiscriminationByLooseChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(False),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(2.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(False),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.0729'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    rhoUEOffsetCorrection = cms.double(1.0),
    maximumSumPtCut = cms.double(1.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByMVAElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA",
    minMVA1prongStripsWgsfEC = cms.double(0.053),
    minMVA1prongStripsWOgsfEC = cms.double(0.049),
    minMVA1prongBL = cms.double(0.054),
    minMVA1prongEC = cms.double(0.06),
    returnMVA = cms.bool(False),
    inputFileName1prongStripsWgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1EC_BDT.weights.xml'),
    inputFileName1prongStripsWgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1BL_BDT.weights.xml'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        electronMedium = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumElectronRejection")
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1BL_BDT.weights.xml'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1EC_BDT.weights.xml'),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0EC_BDT.weights.xml'),
    minMVA1prongStripsWgsfBL = cms.double(0.06),
    method = cms.string('BDT'),
    minMVA1prongStripsWOgsfBL = cms.double(0.054),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0BL_BDT.weights.xml')
)


process.hpsPFTauDiscriminationByMediumChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    relativeSumPtCut = cms.double(0.0),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(True),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(1.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.2739'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(0.8),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByTightChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    relativeSumPtCut = cms.double(0.0),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(True),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(0.8),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByTightChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByTightChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitratedWithHOP'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByVLooseChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3)
)


process.hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByVLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3)
)


process.hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(2.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.0729'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByVLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauProducer = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsPFTauProducerSansRefs")
)


process.hpsPFTauProducerSansRefs = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("hpsSelectionDiscriminator"),
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.hpsSelectionDiscriminator = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsTancTaus = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsTancTausSansRefs")
)


process.hpsTancTausDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8),
    maxEnEcal = cms.double(3.0)
)


process.hpsTancTausDiscriminationByDecayModeSelection = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.hpsTancTausDiscriminationByFlightPath = cms.EDProducer("PFRecoTauDiscriminationByFlight",
    refitPV = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    vertexSource = cms.InputTag("offlinePrimaryVertices"),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.hpsTancTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.hpsTancTausDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.hpsTancTausDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByTanc = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = cms.vdouble( (0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
                0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 
                0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 
                0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 
                0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 
                0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 
                0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 
                0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 
                0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 
                0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 
                0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 
                0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 
                0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 
                0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 
                0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 
                0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 
                0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 
                0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 
                0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 
                0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 
                0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 
                0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 
                0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 
                0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 
                0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 
                0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 
                0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 
                0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 
                0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 
                0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 
                0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 
                0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 
                0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 
                0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 
                0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 
                0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 
                0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 
                0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 
                0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 
                0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 
                0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 
                0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 
                0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 
                0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335, 
                0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 
                0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 
                0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 
                0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 
                0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 
                0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 
                0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 
                0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 
                0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 
                0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 
                0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 
                0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 
                0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 
                0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 
                0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 
                0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 
                0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 
                0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 
                0.9679163435, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0 ) ),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                    0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 
                    0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 
                    0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 
                    0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 
                    0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 
                    0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 
                    0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 
                    0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 
                    0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 
                    0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 
                    0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 
                    0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 
                    0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 
                    0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 
                    0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 
                    0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 
                    0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 
                    0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 
                    0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 
                    0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 
                    0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 
                    0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 
                    0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 
                    0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 
                    0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 
                    0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 
                    0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 
                    0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 
                    0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 
                    0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 
                    0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 
                    0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 
                    0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 
                    0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 
                    0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 
                    0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 
                    0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 
                    0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 
                    0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 
                    0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 
                    0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 
                    0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 
                    0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364, 
                    0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 
                    0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 
                    0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 
                    0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 
                    0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 
                    0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 
                    0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 
                    0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 
                    0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 
                    0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 
                    0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 
                    0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 
                    0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 
                    0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 
                    0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 
                    0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 
                    0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 
                    0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 
                    0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                    0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 
                    0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 
                    0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 
                    0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 
                    0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 
                    0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 
                    0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 
                    0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 
                    0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 
                    0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 
                    0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 
                    0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 
                    0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 
                    0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 
                    0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 
                    0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 
                    0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 
                    0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 
                    0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 
                    0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 
                    0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 
                    0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 
                    0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 
                    0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 
                    0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 
                    0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 
                    0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 
                    0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 
                    0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 
                    0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 
                    0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 
                    0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 
                    0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 
                    0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 
                    0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 
                    0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 
                    0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 
                    0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 
                    0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 
                    0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 
                    0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 
                    0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 
                    0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107, 
                    0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 
                    0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 
                    0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 
                    0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 
                    0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 
                    0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 
                    0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 
                    0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 
                    0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 
                    0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 
                    0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 
                    0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 
                    0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 
                    0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 
                    0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 
                    0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 
                    0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 
                    0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = cms.vdouble( (0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                    0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 
                    0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 
                    0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 
                    0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 
                    0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 
                    0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 
                    0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 
                    0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 
                    0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 
                    0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 
                    0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 
                    0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 
                    0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 
                    0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 
                    0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 
                    0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 
                    0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 
                    0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 
                    0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 
                    0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 
                    0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 
                    0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 
                    0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 
                    0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 
                    0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 
                    0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 
                    0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 
                    0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 
                    0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 
                    0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 
                    0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 
                    0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 
                    0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 
                    0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 
                    0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 
                    0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 
                    0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 
                    0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 
                    0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 
                    0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 
                    0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 
                    0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 
                    0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 
                    0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 
                    0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792, 
                    0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 
                    0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 
                    0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 
                    0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 
                    0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 
                    0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 
                    0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 
                    0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 
                    0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 
                    0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 
                    0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 
                    0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 
                    0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 
                    0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 
                    0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 
                    0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 
                    0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 
                    0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 
                    0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0, 
                    1.0, 1.0, 1.0, 1.0, 1.0 ) ),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("hpsTancTausDiscriminationByTancRaw"),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.95),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.hpsTancTausDiscriminationByTancMedium = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.97),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancRaw = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                    nPUVtx = cms.int32(4)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                    nPUVtx = cms.int32(5)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                    nPUVtx = cms.int32(6)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                    nPUVtx = cms.int32(7)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                    nPUVtx = cms.int32(8)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                    nPUVtx = cms.int32(9)
                )),
            defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            maxValue = cms.double(25),
            minValue = cms.double(-25)
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    dbLabel = cms.string('hpstanc')
)


process.hpsTancTausDiscriminationByTancTight = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.985),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancVLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.9),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated'),
    HoPMin = cms.double(0.2)
)


process.hpsTancTausDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausSansRefs = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausDiscriminationByLeadingPionPtCut"),
            name = cms.string('lead pion'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausHPSSelector"),
            name = cms.string('HPS selection'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.htMet = cms.EDProducer("METProducer",
    src = cms.InputTag("midPointCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMET'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetAK5 = cms.EDProducer("METProducer",
    src = cms.InputTag("ak5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETAK5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetAK7 = cms.EDProducer("METProducer",
    src = cms.InputTag("ak7CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETAK7'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetIC5 = cms.EDProducer("METProducer",
    src = cms.InputTag("iterativeCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETIC5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetKT4 = cms.EDProducer("METProducer",
    src = cms.InputTag("kt4CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETKT4'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetKT6 = cms.EDProducer("METProducer",
    src = cms.InputTag("kt6CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETKT6'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetSC5 = cms.EDProducer("METProducer",
    src = cms.InputTag("sisCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETSC5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetSC7 = cms.EDProducer("METProducer",
    src = cms.InputTag("sisCone7CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETSC7'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.hybridSuperClusters = cms.EDProducer("UnifiedSCCollectionProducer",
    bcCollectionUncleanOnly = cms.string('uncleanOnlyHybridBarrelBasicClusters'),
    scCollection = cms.string(''),
    bcCollection = cms.string('hybridBarrelBasicClusters'),
    uncleanScCollection = cms.InputTag("uncleanedHybridSuperClusters"),
    cleanBcCollection = cms.InputTag("cleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    cleanScCollection = cms.InputTag("cleanedHybridSuperClusters"),
    uncleanBcCollection = cms.InputTag("uncleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    scCollectionUncleanOnly = cms.string('uncleanOnlyHybridSuperClusters')
)


process.ic5CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ic5CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL1L2L3')
)


process.ic5CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL1L2L3L6')
)


process.ic5CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2Relative')
)


process.ic5CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2L3')
)


process.ic5CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2L3L6')
)


process.ic5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ic5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL1L2L3')
)


process.ic5PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL1L2L3L6')
)


process.ic5PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2Relative')
)


process.ic5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2L3')
)


process.ic5PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2L3L6')
)


process.ic7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("iterativeCone7CaloJets")
)


process.impactParameterMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('impactParameterMVAComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.impactParameterTagInfos = cms.EDProducer("TrackIPProducer",
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(8),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetTracks = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    jetDirectionUsingGhostTrack = cms.bool(False),
    minimumNumberOfPixelHits = cms.int32(2),
    jetDirectionUsingTracks = cms.bool(False),
    computeGhostTrack = cms.bool(True),
    useTrackQuality = cms.bool(False),
    maximumChiSquared = cms.double(5.0)
)


process.inOutConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    filterOnConvTrackHyp = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('ckfInOutTracksFromConversions'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.inOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(3),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(3),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(3),
    TrackProducer2 = cms.string('outInConversionTrackProducer'),
    TrackProducer1 = cms.string('inOutConversionTrackProducer')
)


process.inclusiveSecondaryVertexFinderTagInfos = cms.EDProducer("SecondaryVertexProducer",
    extSVDeltaRToJet = cms.double(0.3),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    constraint = cms.string('BeamSpot'),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.79),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(2.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    useExternalSV = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig'),
    extSVCollection = cms.InputTag("inclusiveMergedVertices")
)


process.initialStepSeedClusterMask = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("initialStepSeeds"),
    oldClusterRemovalInfo = cms.InputTag("pixelLessStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.initialStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(0.02),
            nSigmaZ = cms.double(4.0),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.6)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.initialStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("initialStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(0),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(0),
        chi2n_par = cms.double(1.6),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(0.45, 4.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(0.65, 4.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(999),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('initialStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.01),
        d0_par2 = cms.vdouble(0.55, 4.0),
        d0_par1 = cms.vdouble(0.55, 4.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('initialStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('initialStepLoose'),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            res_par = cms.vdouble(0.003, 0.01),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.35, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('initialStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            preFilterName = cms.string('initialStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.initialStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("initialStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    TrajectoryBuilder = cms.string('initialStepTrajectoryBuilder'),
    numHitsForSeedCleaner = cms.int32(50)
)


process.initialStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("initialStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter0'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.interestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.interestingEcalDetIdEBU = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridBarrelBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.interestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.interestingEleIsoDetId = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0),
    energyCut = cms.double(0.04)
)


process.interestingEleIsoDetIdEB = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0),
    energyCut = cms.double(0.095)
)


process.interestingEleIsoDetIdEE = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0.11),
    energyCut = cms.double(0.0)
)


process.interestingGamIsoDetId = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("photons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0),
    energyCut = cms.double(0.04)
)


process.interestingGamIsoDetIdEB = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("photons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0),
    energyCut = cms.double(0.095)
)


process.interestingGamIsoDetIdEE = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etCandCut = cms.double(0.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    emObjectLabel = cms.InputTag("photons"),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    etCut = cms.double(0.11),
    energyCut = cms.double(0.0)
)


process.interestingTrackEcalDetIds = cms.EDProducer("InterestingTrackEcalDetIdProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    TrackCollection = cms.InputTag("generalTracks"),
    MinTrackPt = cms.double(50.0)
)


process.isoDeposits = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag(""),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag(""),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.iterativeCone5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("iterativeCone5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.iterativeCone5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.iterativeCone5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.iterativeCone5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.jetBProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetBProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.jetProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.kt4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt4CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL1L2L3')
)


process.kt4CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL1L2L3L6')
)


process.kt4CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2Relative')
)


process.kt4CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2L3')
)


process.kt4CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2L3L6')
)


process.kt4CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.kt4JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("kt4CaloJets"),
    jet2TracksAtCALO = cms.InputTag("kt4JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("kt4JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.kt4JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("kt4CaloJets")
)


process.kt4JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("kt4CaloJets")
)


process.kt4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt4PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL1L2L3')
)


process.kt4PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL1L2L3L6')
)


process.kt4PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2Relative')
)


process.kt4PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2L3')
)


process.kt4PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2L3L6')
)


process.kt4TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6CaloJetsCentral = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(3.1),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6CaloJetsCentralPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(3.1),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.kt6CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt6CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL1L2L3')
)


process.kt6CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL1L2L3L6')
)


process.kt6CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2Relative')
)


process.kt6CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2L3')
)


process.kt6CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2L3L6')
)


process.kt6CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.kt6JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsCentralChargedPileUp = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(3.1),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("pfPileUpAllChargedParticles"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsCentralNeutral = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(3.1),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("pfAllNeutralHadronsAndPhotons"),
    inputEtMin = cms.double(0.5),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsCentralNeutralTight = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(3.1),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("pfAllNeutralHadronsAndPhotons"),
    inputEtMin = cms.double(1.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsForRhoCorrection = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt6PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL1L2L3')
)


process.kt6PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL1L2L3L6')
)


process.kt6PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2Relative')
)


process.kt6PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2L3')
)


process.kt6PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2L3L6')
)


process.kt6TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.6),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.l1GtRecord = cms.EDProducer("L1GlobalTriggerRecordProducer",
    L1GtReadoutRecordTag = cms.InputTag("gtDigis")
)


process.l1GtTriggerMenuLite = cms.EDProducer("L1GtTriggerMenuLiteProducer")


process.l1L1GtObjectMap = cms.EDProducer("ConvertObjectMapRecord",
    L1GtObjectMapTag = cms.InputTag("hltL1GtObjectMap")
)


process.l1compare = cms.EDProducer("L1Comparator",
    CTPsourceEmul = cms.InputTag("valCscTriggerPrimitiveDigis"),
    CTFsourceEmul = cms.InputTag("valCsctfDigis","CSC"),
    COMPARE_COLLS = cms.untracked.vuint32(0, 0, 1, 1, 0, 
        1, 0, 0, 1, 0, 
        1, 0),
    DTPsourceEmul = cms.InputTag("valDtTriggerPrimitiveDigis"),
    RCTsourceData = cms.InputTag("gctDigis"),
    VerboseFlag = cms.untracked.int32(0),
    GMTsourceData = cms.InputTag("gtDigis"),
    DTFsourceEmul = cms.InputTag("valDttfDigis"),
    RPCsourceData = cms.InputTag("gtDigis"),
    GCTsourceEmul = cms.InputTag("valGctDigis"),
    CTTsourceData = cms.InputTag("csctfDigis"),
    FEDsourceEmul = cms.untracked.InputTag("rawDataCollector"),
    LTCsourceEmul = cms.InputTag("none"),
    ETPsourceData = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    GCTsourceData = cms.InputTag("gctDigis"),
    DumpFile = cms.untracked.string('dump.txt'),
    LTCsourceData = cms.InputTag("none"),
    HTPsourceEmul = cms.InputTag("valHcalTriggerPrimitiveDigis"),
    CTFsourceData = cms.InputTag("muonCscMon","CSC"),
    GLTsourceEmul = cms.InputTag("valGtDigis"),
    DTPsourceData = cms.InputTag("dttfDigis"),
    RCTsourceEmul = cms.InputTag("valRctDigis"),
    GLTsourceData = cms.InputTag("gtDigis"),
    FEDid = cms.untracked.int32(735),
    DumpMode = cms.untracked.int32(0),
    RPCsourceEmul = cms.InputTag("valRpcTriggerDigis"),
    CTTsourceEmul = cms.InputTag("valCsctfTrackDigis"),
    GMTsourceEmul = cms.InputTag("valGmtDigis"),
    DTFsourceData = cms.InputTag("dttfDigis"),
    ETPsourceEmul = cms.InputTag("valEcalTriggerPrimitiveDigis"),
    CTPsourceData = cms.InputTag("muonCSCDigis"),
    HTPsourceData = cms.InputTag("hcalDigis"),
    FEDsourceData = cms.untracked.InputTag("rawDataCollector")
)


process.l1extraParticles = cms.EDProducer("L1ExtraParticlesProd",
    centralBxOnly = cms.bool(False),
    tauJetSource = cms.InputTag("gctDigis","tauJets"),
    etTotalSource = cms.InputTag("gctDigis"),
    nonIsolatedEmSource = cms.InputTag("gctDigis","nonIsoEm"),
    htMissSource = cms.InputTag("gctDigis"),
    etMissSource = cms.InputTag("gctDigis"),
    produceMuonParticles = cms.bool(True),
    hfRingEtSumsSource = cms.InputTag("gctDigis"),
    forwardJetSource = cms.InputTag("gctDigis","forJets"),
    ignoreHtMiss = cms.bool(False),
    centralJetSource = cms.InputTag("gctDigis","cenJets"),
    produceCaloParticles = cms.bool(True),
    muonSource = cms.InputTag("gtDigis"),
    isolatedEmSource = cms.InputTag("gctDigis","isoEm"),
    etHadSource = cms.InputTag("gctDigis"),
    hfRingBitCountsSource = cms.InputTag("gctDigis")
)


process.l1tltcunpack = cms.EDProducer("LTCRawToDigi")


process.logErrorHarvester = cms.EDProducer("LogErrorHarvester")


process.lowPtTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("initialStepTracks"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("initialStepSelector","initialStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.lowPtTripletStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('lowPtTripletStepSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(0.02),
            nSigmaZ = cms.double(4.0),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.2)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.lowPtTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("lowPtTripletStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(0),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(0),
        chi2n_par = cms.double(1.6),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(0.45, 4.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(0.65, 4.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(999),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('lowPtTripletStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.01),
        d0_par2 = cms.vdouble(0.55, 4.0),
        d0_par1 = cms.vdouble(0.55, 4.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('lowPtTripletStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('lowPtTripletStepLoose'),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            res_par = cms.vdouble(0.003, 0.01),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.35, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('lowPtTripletStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            preFilterName = cms.string('lowPtTripletStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.lowPtTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("lowPtTripletStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    TrajectoryBuilder = cms.string('lowPtTripletStepTrajectoryBuilder'),
    numHitsForSeedCleaner = cms.int32(50)
)


process.lowPtTripletStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("lowPtTripletStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter1'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.lumiProducer = cms.EDProducer("LumiProducer",
    lumiversion = cms.untracked.string('0001'),
    ncacheEntries = cms.untracked.uint32(5),
    connect = cms.string('frontier://LumiProd/CMS_LUMI_PROD')
)


process.mergedStandAloneMuonSeeds = cms.EDProducer("MuonSeedMerger",
    SeedCollections = cms.VInputTag(cms.InputTag("ancientMuonSeed"), cms.InputTag("MuonSeed"))
)


process.mergedSuperClusters = cms.EDProducer("SuperClusterMerger",
    src = cms.VInputTag(cms.InputTag("correctedHybridSuperClusters"), cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"))
)


process.met = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMET'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.3),
    InputType = cms.string('CandidateCollection')
)


process.metHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(False),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.3),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("towerMakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metNoHF = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETNoHF'),
    noHF = cms.bool(True),
    globalThreshold = cms.double(0.3),
    InputType = cms.string('CandidateCollection')
)


process.metNoHFHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETNoHFHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(True),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.3),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("towerMakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metOpt = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("calotoweroptmaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETOpt'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('CandidateCollection')
)


process.metOptHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETOptHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(False),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.0),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("calotoweroptmakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metOptNoHF = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("calotoweroptmaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETOptNoHF'),
    noHF = cms.bool(True),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('CandidateCollection')
)


process.metOptNoHFHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETOptNoHFHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(True),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.0),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("calotoweroptmakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metsignificance = cms.EDProducer("METProducer",
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMETSignif'),
    InputType = cms.string('CandidateCollection'),
    HO_PhiResPar = cms.vdouble(0.02511),
    HF_PhiResPar = cms.vdouble(0.05022),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    EE_PhiResPar = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    HB_PhiResPar = cms.vdouble(0.02511),
    alias = cms.string('RawCaloMETSignif'),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.5),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005)
)


process.mixedTripletStep = cms.EDProducer("TrackListMerger",
    ShareFrac = cms.double(0.19),
    writeOnlyTrkQuals = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("mixedTripletStepSelector","mixedTripletStepVtx"), cms.InputTag("mixedTripletStepSelector","mixedTripletStepTrk")),
    allowFirstHitShare = cms.bool(True),
    MaxNormalizedChisq = cms.double(1000.0),
    hasSelector = cms.vint32(1, 1),
    FoundHitBonus = cms.double(5.0),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(0, 1)
    )),
    MinFound = cms.int32(3),
    TrackProducers = cms.VInputTag(cms.InputTag("mixedTripletStepTracks"), cms.InputTag("mixedTripletStepTracks")),
    LostHitPenalty = cms.double(20.0),
    newQuality = cms.string('confirmed')
)


process.mixedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("detachedTripletStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("detachedTripletStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("detachedTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.mixedTripletStepSeedClusterMask = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("mixedTripletStepSeeds"),
    oldClusterRemovalInfo = cms.InputTag("pixelPairStepSeedClusterMask"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.mixedTripletStepSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("mixedTripletStepSeedsA"), cms.InputTag("mixedTripletStepSeedsB"))
)


process.mixedTripletStepSeedsA = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletLargeTipGenerator'),
            extraHitRPhitolerance = cms.double(0.0),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.0)
        ),
        SeedingLayers = cms.string('mixedTripletStepSeedLayersA')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True),
        FilterAtHelixStage = cms.bool(False)
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(1.5),
            ptMin = cms.double(0.4),
            originHalfLength = cms.double(10.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.mixedTripletStepSeedsB = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletLargeTipGenerator'),
            extraHitRPhitolerance = cms.double(0.0),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.0)
        ),
        SeedingLayers = cms.string('mixedTripletStepSeedLayersB')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True),
        FilterAtHelixStage = cms.bool(False)
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(1.5),
            ptMin = cms.double(0.6),
            originHalfLength = cms.double(10.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.mixedTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("mixedTripletStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(2),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(3),
        chi2n_par = cms.double(1.2),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(1.3, 3.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(1.2, 3.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(1),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('mixedTripletStepVtxLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.001),
        d0_par2 = cms.vdouble(1.3, 3.0),
        d0_par1 = cms.vdouble(1.2, 3.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('loose'),
            minNumberLayers = cms.uint32(4),
            chi2n_par = cms.double(0.6),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(1.2, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(1.2, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('mixedTripletStepTrkLoose'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(1.2, 4.0),
            d0_par1 = cms.vdouble(1.2, 4.0),
            preFilterName = cms.string(''),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.6),
            dz_par1 = cms.vdouble(1.1, 3.0),
            dz_par2 = cms.vdouble(1.2, 3.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('mixedTripletStepVtxTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('mixedTripletStepVtxLoose'),
            d0_par2 = cms.vdouble(1.2, 3.0),
            d0_par1 = cms.vdouble(1.1, 3.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(4),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.4),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('mixedTripletStepTrkTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('mixedTripletStepTrkLoose'),
            d0_par2 = cms.vdouble(1.1, 4.0),
            d0_par1 = cms.vdouble(1.1, 4.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.4),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(1.2, 3.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(1.1, 3.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('mixedTripletStepVtx'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(1.2, 3.0),
            d0_par1 = cms.vdouble(1.1, 3.0),
            preFilterName = cms.string('mixedTripletStepVtxTight'),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(4),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.3),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.9, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.9, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('mixedTripletStepTrk'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.9, 4.0),
            d0_par1 = cms.vdouble(0.9, 4.0),
            preFilterName = cms.string('mixedTripletStepTrkTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.mixedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("mixedTripletStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    numHitsForSeedCleaner = cms.int32(50),
    TrajectoryBuilder = cms.string('mixedTripletStepTrajectoryBuilder')
)


process.mixedTripletStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("mixedTripletStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter4'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.muIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("muons1stStep"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.025),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.1),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(True),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(False),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(True)
        ),
        Threshold_HO = cms.double(0.1),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    inputTags = cms.VInputTag(cms.InputTag("muons1stStep","ecal"), cms.InputTag("muons1stStep","hcal"), cms.InputTag("muons1stStep","ho"))
)


process.muIsoDepositJets = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("muons1stStep","jets"))
)


process.muIsoDepositTk = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("muons1stStep","tracker"))
)


process.muPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoValueCharged03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueCharged04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueChargedAll03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueChargedAll04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGamma03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGamma04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGammaHighThreshold03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(1.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGammaHighThreshold04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(1.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutral03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutral04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutralHighThreshold03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(1.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutralHighThreshold04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(1.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValuePU03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValuePU04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muParamGlobalIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.025),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.1),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(True),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(False),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(True)
        ),
        Threshold_HO = cms.double(0.1),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muParamGlobalIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muParamGlobalIsoDepositCalEcal = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        DR_Veto_H = cms.double(0.1),
        Vertex_Constraint_Z = cms.bool(False),
        Threshold_H = cms.double(0.5),
        ComponentName = cms.string('CaloExtractor'),
        Threshold_E = cms.double(0.2),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        Weight_E = cms.double(1.0),
        Vertex_Constraint_XY = cms.bool(False),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        Weight_H = cms.double(0.0)
    )
)


process.muParamGlobalIsoDepositCalHcal = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        DR_Veto_H = cms.double(0.1),
        Vertex_Constraint_Z = cms.bool(False),
        Threshold_H = cms.double(0.5),
        ComponentName = cms.string('CaloExtractor'),
        Threshold_E = cms.double(0.2),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        Weight_E = cms.double(0.0),
        Vertex_Constraint_XY = cms.bool(False),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        Weight_H = cms.double(1.0)
    )
)


process.muParamGlobalIsoDepositCtfTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muParamGlobalIsoDepositGsTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muParamGlobalIsoDepositJets = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    )
)


process.muParamGlobalIsoDepositTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muidAllArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('AllArbitrated')
)


process.muidGMStaChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMStaChiCompatibility')
)


process.muidGMTkChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMTkChiCompatibility')
)


process.muidGMTkKinkTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMTkKinkTight')
)


process.muidGlobalMuonPromptTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GlobalMuonPromptTight')
)


process.muidTM2DCompatibilityLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TM2DCompatibilityLoose')
)


process.muidTM2DCompatibilityTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TM2DCompatibilityTight')
)


process.muidTMLastStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationAngLoose')
)


process.muidTMLastStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationAngTight')
)


process.muidTMLastStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationLoose')
)


process.muidTMLastStationOptimizedLowPtLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationOptimizedLowPtLoose')
)


process.muidTMLastStationOptimizedLowPtTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationOptimizedLowPtTight')
)


process.muidTMLastStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationTight')
)


process.muidTMOneStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationAngLoose')
)


process.muidTMOneStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationAngTight')
)


process.muidTMOneStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationLoose')
)


process.muidTMOneStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationTight')
)


process.muidTrackerMuonArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TrackerMuonArbitrated')
)


process.multi5x5BasicClustersCleaned = cms.EDProducer("Multi5x5ClusterProducer",
    reassignSeedCrysToClusterItSeeds = cms.bool(True),
    endcapHitCollection = cms.string('EcalRecHitsEE'),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    IslandEndcapSeedThr = cms.double(0.18),
    doEndcap = cms.bool(True),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    barrelShapeAssociation = cms.string('multi5x5BarrelShapeAssoc'),
    RecHitFlagToBeExcluded = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    endcapHitProducer = cms.string('ecalRecHit'),
    clustershapecollectionEB = cms.string('multi5x5BarrelShape'),
    IslandBarrelSeedThr = cms.double(0.5),
    barrelHitProducer = cms.string('ecalRecHit'),
    endcapShapeAssociation = cms.string('multi5x5EndcapShapeAssoc'),
    barrelHitCollection = cms.string('EcalRecHitsEB'),
    clustershapecollectionEE = cms.string('multi5x5EndcapShape'),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    doBarrel = cms.bool(False)
)


process.multi5x5BasicClustersUncleaned = cms.EDProducer("Multi5x5ClusterProducer",
    reassignSeedCrysToClusterItSeeds = cms.bool(True),
    endcapHitCollection = cms.string('EcalRecHitsEE'),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    IslandEndcapSeedThr = cms.double(0.18),
    doEndcap = cms.bool(True),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    barrelShapeAssociation = cms.string('multi5x5BarrelShapeAssoc'),
    RecHitFlagToBeExcluded = cms.vstring(),
    endcapHitProducer = cms.string('ecalRecHit'),
    clustershapecollectionEB = cms.string('multi5x5BarrelShape'),
    IslandBarrelSeedThr = cms.double(0.5),
    barrelHitProducer = cms.string('ecalRecHit'),
    endcapShapeAssociation = cms.string('multi5x5EndcapShapeAssoc'),
    barrelHitCollection = cms.string('EcalRecHitsEB'),
    clustershapecollectionEE = cms.string('multi5x5EndcapShape'),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    doBarrel = cms.bool(False)
)


process.multi5x5PreshowerClusterShape = cms.EDProducer("PreshowerClusterShapeProducer",
    preshStripEnergyCut = cms.double(0.0),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    preshPi0Nstrip = cms.int32(5),
    endcapSClusterProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    PreshowerClusterShapeCollectionX = cms.string('multi5x5PreshowerXClustersShape'),
    PreshowerClusterShapeCollectionY = cms.string('multi5x5PreshowerYClustersShape'),
    debugLevel = cms.string('INFO')
)


process.multi5x5SuperClusters = cms.EDProducer("UnifiedSCCollectionProducer",
    bcCollectionUncleanOnly = cms.string('uncleanOnlyMulti5x5EndcapBasicClusters'),
    scCollection = cms.string('multi5x5EndcapSuperClusters'),
    bcCollection = cms.string('multi5x5EndcapBasicClusters'),
    uncleanScCollection = cms.InputTag("multi5x5SuperClustersUncleaned","multi5x5EndcapSuperClusters"),
    cleanBcCollection = cms.InputTag("multi5x5BasicClustersCleaned","multi5x5EndcapBasicClusters"),
    cleanScCollection = cms.InputTag("multi5x5SuperClustersCleaned","multi5x5EndcapSuperClusters"),
    uncleanBcCollection = cms.InputTag("multi5x5BasicClustersUncleaned","multi5x5EndcapBasicClusters"),
    scCollectionUncleanOnly = cms.string('uncleanOnlyMulti5x5EndcapSuperClusters')
)


process.multi5x5SuperClustersCleaned = cms.EDProducer("Multi5x5SuperClusterProducer",
    barrelSuperclusterCollection = cms.string('multi5x5BarrelSuperClusters'),
    endcapEtaSearchRoad = cms.double(0.14),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClustersCleaned'),
    dynamicPhiRoad = cms.bool(False),
    endcapClusterProducer = cms.string('multi5x5BasicClustersCleaned'),
    barrelPhiSearchRoad = cms.double(0.8),
    endcapPhiSearchRoad = cms.double(0.6),
    barrelClusterProducer = cms.string('multi5x5BasicClusters'),
    seedTransverseEnergyThreshold = cms.double(1.0),
    endcapSuperclusterCollection = cms.string('multi5x5EndcapSuperClusters'),
    barrelEtaSearchRoad = cms.double(0.06),
    doBarrel = cms.bool(False),
    doEndcaps = cms.bool(True),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    bremRecoveryPset = cms.PSet(
        barrel = cms.PSet(
            cryVec = cms.vint32(16, 13, 11, 10, 9, 
                8, 7, 6, 5, 4, 
                3),
            cryMin = cms.int32(2),
            etVec = cms.vdouble(5.0, 10.0, 15.0, 20.0, 30.0, 
                40.0, 45.0, 55.0, 135.0, 195.0, 
                225.0)
        ),
        endcap = cms.PSet(
            a = cms.double(47.85),
            c = cms.double(0.1201),
            b = cms.double(108.8)
        )
    )
)


process.multi5x5SuperClustersUncleaned = cms.EDProducer("Multi5x5SuperClusterProducer",
    barrelSuperclusterCollection = cms.string('multi5x5BarrelSuperClusters'),
    endcapEtaSearchRoad = cms.double(0.14),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClustersCleaned'),
    dynamicPhiRoad = cms.bool(False),
    endcapClusterProducer = cms.string('multi5x5BasicClustersUncleaned'),
    barrelPhiSearchRoad = cms.double(0.8),
    endcapPhiSearchRoad = cms.double(0.6),
    barrelClusterProducer = cms.string('multi5x5BasicClusters'),
    seedTransverseEnergyThreshold = cms.double(1.0),
    endcapSuperclusterCollection = cms.string('multi5x5EndcapSuperClusters'),
    barrelEtaSearchRoad = cms.double(0.06),
    bremRecoveryPset = cms.PSet(
        barrel = cms.PSet(
            cryVec = cms.vint32(16, 13, 11, 10, 9, 
                8, 7, 6, 5, 4, 
                3),
            cryMin = cms.int32(2),
            etVec = cms.vdouble(5.0, 10.0, 15.0, 20.0, 30.0, 
                40.0, 45.0, 55.0, 135.0, 195.0, 
                225.0)
        ),
        endcap = cms.PSet(
            a = cms.double(47.85),
            c = cms.double(0.1201),
            b = cms.double(108.8)
        )
    ),
    doEndcaps = cms.bool(True),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    doBarrel = cms.bool(False)
)


process.multi5x5SuperClustersWithPreshower = cms.EDProducer("PreshowerClusterProducer",
    assocSClusterCollection = cms.string(''),
    preshStripEnergyCut = cms.double(0.0),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    etThresh = cms.double(0.0),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    preshNclust = cms.int32(4),
    preshClusterEnergyCut = cms.double(0.0),
    preshSeededNstrip = cms.int32(15)
)


process.muonCSCDigis = cms.EDProducer("CSCDCCUnpacker",
    PrintEventNumber = cms.untracked.bool(False),
    UseSelectiveUnpacking = cms.bool(True),
    UseExaminer = cms.bool(True),
    ErrorMask = cms.uint32(0),
    InputObjects = cms.InputTag("rawDataCollector"),
    UseFormatStatus = cms.bool(True),
    ExaminerMask = cms.uint32(535557110),
    UnpackStatusDigis = cms.bool(False),
    VisualFEDInspect = cms.untracked.bool(False),
    FormatedEventDump = cms.untracked.bool(False),
    Debug = cms.untracked.bool(False),
    VisualFEDShort = cms.untracked.bool(False)
)


process.muonCscMon = cms.EDProducer("MuonCandProducerMon",
    VerboseFlag = cms.untracked.int32(0),
    DTinput = cms.untracked.InputTag("dttfDigis"),
    CSCinput = cms.untracked.InputTag("csctfDigis")
)


process.muonDTDigis = cms.EDProducer("DTUnpackingModule",
    useStandardFEDid = cms.bool(True),
    inputLabel = cms.InputTag("rawDataCollector"),
    dataType = cms.string('DDU'),
    fedbyType = cms.bool(False),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            writeSC = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            performDataIntegrityMonitor = cms.untracked.bool(False),
            readDDUIDfromDDU = cms.untracked.bool(True),
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False)
        ),
        performDataIntegrityMonitor = cms.untracked.bool(False),
        localDAQ = cms.untracked.bool(False)
    ),
    dqmOnly = cms.bool(False)
)


process.muonDtMon = cms.EDProducer("MuonCandProducerMon",
    VerboseFlag = cms.untracked.int32(0),
    DTinput = cms.untracked.InputTag("dttfDigis"),
    CSCinput = cms.untracked.InputTag("csctfDigis")
)


process.muonEcalDetIds = cms.EDProducer("InterestingEcalDetIdProducer",
    inputCollection = cms.InputTag("muons1stStep")
)


process.muonMETValueMapProducer = cms.EDProducer("MuonMETValueMapProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    minPt = cms.double(10.0),
    maxNormChi2 = cms.double(10.0),
    minnValidStaHits = cms.int32(1),
    useHO = cms.bool(False),
    minnHits = cms.int32(11),
    useTrackAssociatorPositions = cms.bool(True),
    useRecHits = cms.bool(False),
    maxEta = cms.double(2.5),
    maxd0 = cms.double(0.2),
    towerEtThreshold = cms.double(0.3),
    isAlsoTkMu = cms.bool(True),
    muonInputTag = cms.InputTag("muons")
)


process.muonRPCDigis = cms.EDProducer("RPCUnpackingModule",
    InputLabel = cms.InputTag("rawDataCollector"),
    doSynchro = cms.bool(True)
)


process.muonSelectionTypeValueMapProducer = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('All')
)


process.muonShowerInformation = cms.EDProducer("MuonShowerInformationProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    trackCollection = cms.InputTag("generalTracks"),
    ShowerInformationFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
    ),
    muonCollection = cms.InputTag("muons1stStep")
)


process.muonTCMETValueMapProducer = cms.EDProducer("MuonTCMETValueMapProducer",
    vertexRho = cms.double(2.0),
    chi2_muon = cms.double(10),
    muonMinValidStaHits = cms.int32(1),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    useCaloMuons = cms.bool(False),
    eta_max = cms.double(2.65),
    global_muon = cms.bool(True),
    d0cutb = cms.double(0.5),
    d0cuta = cms.double(0.015),
    vertexMaxDZ = cms.double(0.2),
    chi2_max = cms.double(5),
    chi2_max_tight = cms.double(5.0),
    eta_muon = cms.double(2.5),
    track_algos = cms.vint32(),
    tracker_muon = cms.bool(True),
    track_quality = cms.vint32(2),
    nLayers = cms.int32(0),
    muonInputTag = cms.InputTag("muons"),
    pt_max = cms.double(100.0),
    rf_type = cms.int32(1),
    ptErr_max_tight = cms.double(0.2),
    muon_dptrel = cms.double(1),
    deltaR_muon = cms.double(0.05),
    nhits_muon = cms.double(11),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    usePvtxd0 = cms.bool(False),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    d0_max = cms.double(0.3),
    maxpt_eta25 = cms.double(0.0),
    nhits_min = cms.double(6),
    trackAlgo_max = cms.int32(8),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    d0_muon = cms.double(0.2),
    nhits_min_tight = cms.double(9),
    pt_muon = cms.double(10)
)


process.muons = cms.EDProducer("MuonProducer",
    EcalIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    ShowerInfoMap = cms.InputTag("muonShowerInformation"),
    FillTimingInfo = cms.bool(True),
    FillSelectorMaps = cms.bool(True),
    TrackIsoDeposits = cms.InputTag("muIsoDepositTk"),
    InputMuons = cms.InputTag("muons1stStep"),
    FillDetectorBasedIsolation = cms.bool(True),
    PFCandidates = cms.InputTag("particleFlowTmp"),
    JetIsoDeposits = cms.InputTag("muIsoDepositJets"),
    PFIsolation = cms.PSet(
        isolationR04 = cms.PSet(
            photonHighThreshold = cms.InputTag("muPFIsoValueGammaHighThreshold04"),
            pu = cms.InputTag("muPFIsoValuePU04"),
            neutralHadronHighThreshold = cms.InputTag("muPFIsoValueNeutralHighThreshold04"),
            chargedParticle = cms.InputTag("muPFIsoValueChargedAll04"),
            photon = cms.InputTag("muPFIsoValueGamma04"),
            chargedHadron = cms.InputTag("muPFIsoValueCharged04"),
            neutralHadron = cms.InputTag("muPFIsoValueNeutral04")
        ),
        isolationR03 = cms.PSet(
            photonHighThreshold = cms.InputTag("muPFIsoValueGammaHighThreshold03"),
            pu = cms.InputTag("muPFIsoValuePU03"),
            neutralHadronHighThreshold = cms.InputTag("muPFIsoValueNeutralHighThreshold03"),
            chargedParticle = cms.InputTag("muPFIsoValueChargedAll03"),
            photon = cms.InputTag("muPFIsoValueGamma03"),
            chargedHadron = cms.InputTag("muPFIsoValueCharged03"),
            neutralHadron = cms.InputTag("muPFIsoValueNeutral03")
        )
    ),
    FillCosmicsIdMap = cms.bool(True),
    HoIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    HcalIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    ActivateDebug = cms.untracked.bool(False),
    FillPFIsolation = cms.bool(True),
    CosmicIdMap = cms.InputTag("cosmicsVeto"),
    FillPFMomentumAndAssociation = cms.bool(True),
    FillShoweringInfo = cms.bool(True),
    SelectorMaps = cms.VInputTag(cms.InputTag("muidTMLastStationOptimizedLowPtLoose"), cms.InputTag("muidTMLastStationOptimizedLowPtTight"), cms.InputTag("muidTM2DCompatibilityLoose"), cms.InputTag("muidTM2DCompatibilityTight"), cms.InputTag("muidTrackerMuonArbitrated"), 
        cms.InputTag("muidTMLastStationAngLoose"), cms.InputTag("muidGlobalMuonPromptTight"), cms.InputTag("muidGMStaChiCompatibility"), cms.InputTag("muidTMLastStationAngTight"), cms.InputTag("muidGMTkChiCompatibility"), 
        cms.InputTag("muidTMOneStationAngTight"), cms.InputTag("muidTMOneStationAngLoose"), cms.InputTag("muidTMLastStationLoose"), cms.InputTag("muidTMLastStationTight"), cms.InputTag("muidTMOneStationTight"), 
        cms.InputTag("muidTMOneStationLoose"), cms.InputTag("muidAllArbitrated"), cms.InputTag("muidGMTkKinkTight"))
)


process.muons1stStep = cms.EDProducer("MuonIdProducer",
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    ecalDepositName = cms.string('ecal'),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    hcalDepositName = cms.string('hcal'),
    trackDepositName = cms.string('tracker'),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    maxAbsEta = cms.double(3.0),
    fillGlobalTrackRefits = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links', 
        'outer tracks', 
        'tev firstHit', 
        'tev picky', 
        'tev dyt'),
    minCaloCompatibility = cms.double(0.6),
    fillCaloCompatibility = cms.bool(True),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(True),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    minPCaloMuon = cms.double(1.0),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("globalMuons"), cms.InputTag("standAloneMuons","UpdatedAtVtx"), cms.InputTag("tevMuons","firstHit"), cms.InputTag("tevMuons","picky"), 
        cms.InputTag("tevMuons","dyt")),
    fillGlobalTrackQuality = cms.bool(True),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsFromCosmics = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("regionalCosmicTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    fillGlobalTrackRefits = cms.bool(False),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DCosmicSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    inputCollectionTypes = cms.vstring('links', 
        'outer tracks', 
        'inner tracks'),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(False),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DCosmicSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(False),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillCaloCompatibility = cms.bool(True),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("globalCosmicMuons", "cosmicMuons", "regionalCosmicTracks"),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsFromCosmics1Leg = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("regionalCosmicTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    fillGlobalTrackRefits = cms.bool(False),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DCosmicSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    inputCollectionTypes = cms.vstring('links', 
        'outer tracks', 
        'inner tracks'),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(False),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DCosmicSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(False),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillCaloCompatibility = cms.bool(True),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("globalCosmicMuons1Leg", "cosmicMuons1Leg", "regionalCosmicTracks"),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsWithSET = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    fillGlobalTrackRefits = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links', 
        'outer tracks'),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(True),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(True),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillCaloCompatibility = cms.bool(True),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("generalTracks", "globalSETMuons", cms.InputTag("standAloneSETMuons","UpdatedAtVtx")),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muontiming = cms.EDProducer("MuonTimingProducer",
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    MuonCollection = cms.InputTag("muons1stStep")
)


process.negativeTrackCountingHighEffJetTags = cms.EDProducer("JetTagProducer",
    trackQualityClass = cms.string('any'),
    jetTagComputer = cms.string('negativeTrackCounting3D2nd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.negativeTrackCountingHighPurJetTags = cms.EDProducer("JetTagProducer",
    trackQualityClass = cms.string('any'),
    jetTagComputer = cms.string('negativeTrackCounting3D3rd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.newCombinedSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("initialStepSeeds"), cms.InputTag("pixelPairStepSeeds"), cms.InputTag("mixedTripletStepSeeds"), cms.InputTag("pixelLessStepSeeds"), cms.InputTag("tripletElectronSeeds"), 
        cms.InputTag("pixelPairElectronSeeds"), cms.InputTag("stripPairElectronSeeds"))
)


process.offlineBeamSpot = cms.EDProducer("BeamSpotProducer")


process.offlinePrimaryVertices = cms.EDProducer("PrimaryVertexProducer",
    vertexCollections = cms.VPSet(cms.PSet(
        maxDistanceToBeam = cms.double(1.0),
        useBeamConstraint = cms.bool(False),
        minNdof = cms.double(0.0),
        algorithm = cms.string('AdaptiveVertexFitter'),
        label = cms.string('')
    ), 
        cms.PSet(
            maxDistanceToBeam = cms.double(1.0),
            useBeamConstraint = cms.bool(True),
            minNdof = cms.double(2.0),
            algorithm = cms.string('AdaptiveVertexFitter'),
            label = cms.string('WithBS')
        )),
    verbose = cms.untracked.bool(False),
    TkFilterParameters = cms.PSet(
        maxNormalizedChi2 = cms.double(20.0),
        minPt = cms.double(0.0),
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        trackQuality = cms.string('any'),
        minPixelLayersWithHits = cms.int32(2),
        minSiliconLayersWithHits = cms.int32(5)
    ),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    TrackLabel = cms.InputTag("generalTracks"),
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            dzCutOff = cms.double(4.0),
            d0CutOff = cms.double(3.0),
            Tmin = cms.double(4.0),
            coolingFactor = cms.double(0.6),
            vertexSize = cms.double(0.01),
            use_vdt = cms.untracked.bool(True)
        ),
        algorithm = cms.string('DA_vect')
    )
)


process.outInConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    filterOnConvTrackHyp = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('ckfOutInTracksFromConversions'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.particleFlow = cms.EDProducer("PFLinker",
    ValueMapMerged = cms.string('all'),
    ProducePFCandidates = cms.bool(True),
    ValueMapElectrons = cms.string('electrons'),
    Photons = cms.InputTag("pfPhotonTranslator","pfphot"),
    FillMuonRefs = cms.bool(True),
    ValueMapPhotons = cms.string('photons'),
    OutputPF = cms.string(''),
    Muons = cms.InputTag("muons","muons1stStep2muonsMap"),
    PFCandidate = cms.VInputTag(cms.InputTag("particleFlowTmp")),
    GsfElectrons = cms.InputTag("gsfElectrons")
)


process.particleFlowBlock = cms.EDProducer("PFBlockProducer",
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    RecMuons = cms.InputTag("muons1stStep"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    PFConversions = cms.InputTag("pfConversions"),
    useConversions = cms.bool(True),
    nuclearInteractionsPurity = cms.uint32(1),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    verbose = cms.untracked.bool(False),
    PFClustersPS = cms.InputTag("particleFlowClusterPS"),
    usePFatHLT = cms.bool(False),
    PFClustersHO = cms.InputTag("particleFlowClusterHO"),
    useIterTracking = cms.bool(True),
    useConvBremPFRecTracks = cms.bool(True),
    useV0 = cms.bool(False),
    RecTracks = cms.InputTag("pfTrack"),
    EGPhotons = cms.InputTag("photons"),
    ConvBremGsfRecTracks = cms.InputTag("pfTrackElec","Secondary"),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    useKDTreeTrackEcalLinker = cms.bool(True),
    useHO = cms.bool(True),
    pf_DPtoverPt_Cut = cms.vdouble(-1.0, -1.0, -1.0, 1.0, 1.0),
    GsfRecTracks = cms.InputTag("pfTrackElec"),
    useNuclear = cms.bool(True),
    useConvBremGsfTracks = cms.bool(False),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    PhotonSelectionCuts = cms.vdouble(1, 10, 2.0, 0.001, 4.2, 
        0.003, 2.2, 0.001, 0.05, 10, 
        0.1),
    PFV0 = cms.InputTag("pfV0"),
    debug = cms.untracked.bool(False),
    useEGPhotons = cms.bool(True),
    pf_NHit_Cut = cms.vuint32(3, 3, 3, 3, 3)
)


process.particleFlowClusterECAL = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(9),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(1.5),
    thresh_DoubleSpike_Barrel = cms.double(10.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(4.0),
    PFRecHits = cms.InputTag("particleFlowRecHitECAL"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(8),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.04, -0.024),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.08),
    thresh_Clean_Endcap = cms.double(15.0),
    thresh_Seed_Barrel = cms.double(0.23),
    depthCor_Mode = cms.int32(1),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(True),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.3),
    thresh_Pt_Seed_Endcap = cms.double(0.15),
    minS4S1_Clean_Endcap = cms.vdouble(0.02, -0.0125),
    thresh_Seed_Endcap = cms.double(0.6),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(0.04)
)


process.particleFlowClusterHCAL = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(100000.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL"),
    cleanRBXandHPDs = cms.bool(True),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(4),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.032, -0.045),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(100000.0),
    thresh_Seed_Barrel = cms.double(0.8),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(True),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.032, -0.045),
    thresh_Seed_Endcap = cms.double(1.1),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterHFEM = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(80.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL","HFEM"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(0),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.11, -0.19),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(80.0),
    thresh_Seed_Barrel = cms.double(1.4),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.11, -0.19),
    thresh_Seed_Endcap = cms.double(1.4),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterHFHAD = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(120.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL","HFHAD"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(0),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.045, -0.08),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(120.0),
    thresh_Seed_Barrel = cms.double(1.4),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.045, -0.08),
    thresh_Seed_Endcap = cms.double(1.4),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterHO = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(100000.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHO"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(4),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.032, -0.045),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.5),
    thresh_Clean_Endcap = cms.double(100000.0),
    thresh_Seed_Barrel = cms.double(1.0),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(True),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(1.0),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.032, -0.045),
    thresh_Seed_Endcap = cms.double(3.1),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterPS = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(-1),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(0.2),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(100000.0),
    PFRecHits = cms.InputTag("particleFlowRecHitPS"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(8),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.0, 0.0),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(6e-05),
    thresh_Clean_Endcap = cms.double(100000.0),
    thresh_Seed_Barrel = cms.double(0.00012),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(6e-05),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.0, 0.0),
    thresh_Seed_Endcap = cms.double(0.00012),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowDisplacedVertex = cms.EDProducer("PFDisplacedVertexProducer",
    verbose = cms.untracked.bool(False),
    primaryVertexCut = cms.double(2.5),
    avfParameters = cms.PSet(
        sigmacut = cms.double(6.0),
        ratio = cms.double(0.25),
        Tini = cms.double(256.0)
    ),
    minAdaptWeight = cms.double(0.5),
    switchOff2TrackVertex = cms.untracked.bool(True),
    vertexIdentifierParameters = cms.PSet(
        logPrimSec_min = cms.double(0.0),
        pt_kink_min = cms.double(3.0),
        masses = cms.vdouble(0.05, 0.485, 0.515, 0.48, 0.52, 
            1.107, 1.125, 0.2),
        angles = cms.vdouble(15, 15),
        pt_min = cms.double(0.5),
        bIdentifyVertices = cms.bool(True),
        looper_eta_max = cms.double(0.1)
    ),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    vertexCandidatesLabel = cms.InputTag("particleFlowDisplacedVertexCandidate"),
    transvSize = cms.double(1.0),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    tracksSelectorParameters = cms.PSet(
        nChi2_max = cms.double(5.0),
        bSelectTracks = cms.bool(True),
        nOuterHits_max = cms.int32(9),
        dxy_min = cms.double(0.2),
        nHits_min = cms.int32(6),
        nChi2_min = cms.double(0.5),
        pt_min = cms.double(0.2),
        quality = cms.string('HighPurity')
    ),
    debug = cms.untracked.bool(False),
    tobCut = cms.double(100),
    longSize = cms.double(5),
    tecCut = cms.double(220)
)


process.particleFlowDisplacedVertexCandidate = cms.EDProducer("PFDisplacedVertexCandidateProducer",
    verbose = cms.untracked.bool(False),
    primaryVertexCut = cms.double(2.2),
    dcaPInnerHitCut = cms.double(1000.0),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    tracksSelectorParameters = cms.PSet(
        nChi2_max = cms.double(5.0),
        pt_min = cms.double(0.2),
        dxy = cms.double(0.2),
        pt_min_prim = cms.double(0.8)
    ),
    debug = cms.untracked.bool(False),
    trackCollection = cms.InputTag("generalTracks"),
    dcaCut = cms.double(0.5)
)


process.particleFlowRecHitECAL = cms.EDProducer("PFRecHitProducerECAL",
    crossBarrelEndcapBorder = cms.bool(False),
    verbose = cms.untracked.bool(False),
    ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    thresh_Cleaning_EB = cms.double(2.0),
    timing_Cleaning = cms.bool(True),
    thresh_Barrel = cms.double(0.08),
    thresh_Cleaning_EE = cms.double(2.0),
    topological_Cleaning = cms.bool(True),
    thresh_Endcap = cms.double(0.3)
)


process.particleFlowRecHitHCAL = cms.EDProducer("PFRecHitProducerHCAL",
    ECAL_Compensate = cms.bool(False),
    ECAL_Dead_Code = cms.uint32(10),
    MinLongTiming_Cut = cms.double(-5.0),
    verbose = cms.untracked.bool(False),
    ECAL_Compensation = cms.double(0.5),
    MaxLongTiming_Cut = cms.double(5.0),
    weight_HFhad = cms.double(1.0),
    ApplyPulseDPG = cms.bool(True),
    ECAL_Threshold = cms.double(10.0),
    ApplyTimeDPG = cms.bool(False),
    caloTowers = cms.InputTag("towerMakerPF"),
    hcalRecHitsHBHE = cms.InputTag("hbhereco"),
    LongFibre_Fraction = cms.double(0.1),
    MaxShortTiming_Cut = cms.double(5.0),
    HcalMaxAllowedHFLongShortSev = cms.int32(9),
    thresh_Barrel = cms.double(0.4),
    navigation_HF = cms.bool(True),
    HcalMaxAllowedHFInTimeWindowSev = cms.int32(9),
    HF_Calib_29 = cms.double(1.07),
    LongFibre_Cut = cms.double(120.0),
    EM_Depth = cms.double(22.0),
    weight_HFem = cms.double(1.0),
    LongShortFibre_Cut = cms.double(30.0),
    MinShortTiming_Cut = cms.double(-5.0),
    HCAL_Calib = cms.bool(True),
    thresh_HF = cms.double(0.4),
    HcalMaxAllowedHFDigiTimeSev = cms.int32(9),
    thresh_Endcap = cms.double(0.4),
    HcalMaxAllowedChannelStatusSev = cms.int32(9),
    hcalRecHitsHF = cms.InputTag("hfreco"),
    ShortFibre_Cut = cms.double(60.0),
    ApplyLongShortDPG = cms.bool(True),
    HF_Calib = cms.bool(True),
    HAD_Depth = cms.double(47.0),
    ShortFibre_Fraction = cms.double(0.01),
    HCAL_Calib_29 = cms.double(1.35)
)


process.particleFlowRecHitHO = cms.EDProducer("PFRecHitProducerHO",
    verbose = cms.untracked.bool(False),
    HOMaxAllowedSev = cms.int32(11),
    thresh_Barrel = cms.double(0.4),
    recHitsHO = cms.InputTag("horeco"),
    thresh_Endcap = cms.double(1.0)
)


process.particleFlowRecHitPS = cms.EDProducer("PFRecHitProducerPS",
    thresh_Barrel = cms.double(7e-06),
    ecalRecHitsES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    verbose = cms.untracked.bool(False),
    thresh_Endcap = cms.double(7e-06)
)


process.particleFlowSimParticle = cms.EDProducer("PFSimParticleProducer",
    VertexGenerator = cms.PSet(
        type = cms.string('None')
    ),
    MCTruthMatchingInfo = cms.untracked.bool(False),
    RecTracks = cms.InputTag("trackerDrivenElectronSeeds"),
    Fitter = cms.string('KFFittingSmoother'),
    ecalRecHitsEE = cms.InputTag("caloRecHits","EcalRecHitsEE"),
    ecalRecHitsEB = cms.InputTag("caloRecHits","EcalRecHitsEB"),
    process_RecTracks = cms.untracked.bool(False),
    ParticleFilter = cms.PSet(
        EProton = cms.double(5000.0),
        etaMax = cms.double(5.0),
        pTMin = cms.double(0.0),
        EMin = cms.double(0.0)
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    famosSimHits = cms.untracked.InputTag("famosSimHits","EcalHitsEB"),
    process_Particles = cms.untracked.bool(True),
    Propagator = cms.string('PropagatorWithMaterial'),
    sim = cms.InputTag("g4SimHits"),
    verbose = cms.untracked.bool(False)
)


process.particleFlowTmp = cms.EDProducer("PFProducer",
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    calibHF_use = cms.bool(False),
    verbose = cms.untracked.bool(False),
    minSignificance = cms.double(2.5),
    pf_nsigma_ECAL = cms.double(0.0),
    usePFConversions = cms.bool(True),
    useCalibrationsFromDB = cms.bool(True),
    sumPtTrackIsoForPhoton = cms.double(2.0),
    calibPFSCEle_endcap = cms.vdouble(1.153, -16.5975, 5.668, -0.1772, 16.22, 
        7.326, 0.0483, -4.068, 9.406),
    pf_convID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt'),
    usePFElectrons = cms.bool(True),
    postMuonCleaning = cms.bool(True),
    minSignificanceReduction = cms.double(1.4),
    calibPFSCEle_barrel = cms.vdouble(1.004, -1.536, 22.88, -1.467, 0.3555, 
        0.6227, 14.65, 2051, 25, 0.9932, 
        -0.5444, 0, 0.5438, 0.7109, 7.645, 
        0.2904, 0),
    muon_HO = cms.vdouble(0.9, 0.9),
    postHFCleaning = cms.bool(False),
    factors_45 = cms.vdouble(10.0, 100.0),
    cleanedHF = cms.VInputTag(cms.InputTag("particleFlowRecHitHCAL","Cleaned"), cms.InputTag("particleFlowClusterHFHAD","Cleaned"), cms.InputTag("particleFlowClusterHFEM","Cleaned")),
    iCfgCandConnector = cms.PSet(
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05),
        ptErrorSecondary = cms.double(1.0),
        bCalibPrimary = cms.bool(True),
        bCorrect = cms.bool(True),
        dptRel_MergedTrack = cms.double(5.0),
        dptRel_PrimaryTrack = cms.double(10.0)
    ),
    useBestMuonTrack = cms.bool(False),
    rejectTracks_Bad = cms.bool(True),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    usePFPhotons = cms.bool(True),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    egammaElectrons = cms.InputTag("mvaElectrons"),
    calibHF_a_EMonly = cms.vdouble(0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 
        0.89718, 0.98674, 1.4681, 1.458, 1.458),
    maxDeltaPhiPt = cms.double(7.0),
    muons = cms.InputTag("muons1stStep"),
    nTrackIsoForEgammaSC = cms.uint32(2),
    pf_electronID_crackCorrection = cms.bool(False),
    minHFCleaningPt = cms.double(5.0),
    calibHF_b_HADonly = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    pf_nsigma_HCAL = cms.double(1.0),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(0.6, 6, -0.0255975, 0.0576727, 0.975442, 
        -0.000546394, 1.26147, 25, -0.02025, 0.04537, 
        0.9728, -0.0008962, 1.172),
    blocks = cms.InputTag("particleFlowBlock"),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    pf_electron_mvaCut = cms.double(-0.1),
    useEGammaElectrons = cms.bool(True),
    useHO = cms.bool(True),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    nsigma_TRACK = cms.double(1.0),
    pf_electron_output_col = cms.string('electrons'),
    dptRel_DispVtx = cms.double(10.0),
    usePFMuonMomAssign = cms.bool(False),
    useVerticesForNeutral = cms.bool(True),
    pf_conv_mvaCut = cms.double(0.0),
    usePhotonReg = cms.bool(False),
    pf_Res_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root'),
    usePFDecays = cms.bool(False),
    sumPtTrackIsoSlopeForPhoton = cms.double(0.001),
    calibHF_b_EMHAD = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    rejectTracks_Step45 = cms.bool(True),
    pf_GlobC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root'),
    pf_locC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root'),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(0.9, 6.5, -0.0692932, 0.101776, 0.995338, 
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147, 
        0.923165, 0.000474665, 1.10782),
    useEGammaSupercluster = cms.bool(True),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    usePFNuclearInteractions = cms.bool(True),
    pf_electronID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    maxSignificance = cms.double(2.5),
    minDeltaMet = cms.double(0.4),
    calibHF_a_EMHAD = cms.vdouble(1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576),
    algoType = cms.uint32(0),
    pt_Error = cms.double(1.0),
    debug = cms.untracked.bool(False),
    X0_Map = cms.string('RecoParticleFlow/PFProducer/data/allX0histos.root'),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    calibHF_eta_step = cms.vdouble(0.0, 2.9, 3.0, 3.2, 4.2, 
        4.4, 4.6, 4.8, 5.2, 5.4),
    useRegressionFromDB = cms.bool(True),
    usePFSCEleCalib = cms.bool(True)
)


process.pfConversions = cms.EDProducer("PFConversionProducer",
    conversionCollection = cms.InputTag("allConversions"),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices")
)


process.pfDisplacedTrackerVertex = cms.EDProducer("PFDisplacedTrackerVertexProducer",
    trackColl = cms.InputTag("generalTracks"),
    displacedTrackerVertexColl = cms.InputTag("particleFlowDisplacedVertex")
)


process.pfElectronInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.pfElectronInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.pfElectronTranslator = cms.EDProducer("PFElectronTranslator",
    MVACutBlock = cms.PSet(
        MVACut = cms.double(-1.0)
    ),
    PFBasicClusters = cms.string('pf'),
    PFGsfElectronCore = cms.string('pf'),
    PFGsfElectron = cms.string('pf'),
    PFSuperClusters = cms.string('pf'),
    CheckStatusFlag = cms.bool(True),
    GSFTracks = cms.InputTag("electronGsfTracks"),
    ElectronMVA = cms.string('pf'),
    PFCandidateElectron = cms.InputTag("particleFlowTmp","electrons"),
    PFPreshowerClusters = cms.string('pf'),
    PFCandidate = cms.InputTag("pfSelectedElectrons"),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("elPFIsoValueNeutral04PFId"),
        pfChargedHadrons = cms.InputTag("elPFIsoValueCharged04PFId"),
        pfPhotons = cms.InputTag("elPFIsoValueGamma04PFId")
    ),
    ElectronSC = cms.string('pf')
)


process.pfMet = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("particleFlow"),
    METType = cms.string('PFMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('PFMET'),
    noHF = cms.bool(False),
    jets = cms.InputTag("ak5PFJets"),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('PFCandidateCollection')
)


process.pfNoPileUp = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowTmp"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("pfPileUp"),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    verbose = cms.untracked.bool(False)
)


process.pfNoPileUpIso = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowTmp"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("pfPileUpIso"),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    verbose = cms.untracked.bool(False)
)


process.pfNuclear = cms.EDProducer("PFNuclearProducer",
    likelihoodCut = cms.double(0.1),
    nuclearColList = cms.VInputTag(cms.InputTag("firstnuclearInteractionMaker"))
)


process.pfPhotonInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.pfPhotonInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    keepNextToBoundary = cms.bool(True),
    phiSize = cms.int32(5),
    keepNextToDead = cms.bool(True)
)


process.pfPhotonTranslator = cms.EDProducer("PFPhotonTranslator",
    hcalTowers = cms.InputTag("towerMaker"),
    PFBasicClusters = cms.string('pfphot'),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    EGPhotons = cms.string('photons'),
    PFSuperClusters = cms.string('pfphot'),
    PFConversionCollection = cms.string('pfphot'),
    PFPhotonCores = cms.string('pfphot'),
    PFPhotons = cms.string('pfphot'),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    PFPreshowerClusters = cms.string('pfphot'),
    PFCandidate = cms.InputTag("pfSelectedPhotons"),
    hOverEConeSize = cms.double(0.15),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("phPFIsoValueNeutral04PFId"),
        pfChargedHadrons = cms.InputTag("phPFIsoValueCharged04PFId"),
        pfPhotons = cms.InputTag("phPFIsoValueGamma04PFId")
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.pfPileUp = cms.EDProducer("PFPileUp",
    PFCandidates = cms.InputTag("particleFlowTmp"),
    Enable = cms.bool(True),
    checkClosestZVertex = cms.bool(True),
    verbose = cms.untracked.bool(False),
    Vertices = cms.InputTag("offlinePrimaryVertices")
)


process.pfPileUpIso = cms.EDProducer("PFPileUp",
    checkClosestZVertex = cms.bool(True),
    Enable = cms.bool(True),
    PFCandidates = cms.InputTag("particleFlowTmp"),
    verbose = cms.untracked.bool(False),
    Vertices = cms.InputTag("offlinePrimaryVertices")
)


process.pfRecoTauDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnEcal = cms.double(3.0),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8)
)


process.pfRecoTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.pfRecoTauDiscriminationAgainstElectronMVA = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA",
    minMVA1prongStripsWgsfEC = cms.double(0.053),
    minMVA1prongEC = cms.double(0.06),
    minMVA1prongStripsWOgsfEC = cms.double(0.049),
    returnMVA = cms.bool(False),
    inputFileName1prongStripsWgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1EC_BDT.weights.xml'),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0EC_BDT.weights.xml'),
    inputFileName1prongStripsWgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1BL_BDT.weights.xml'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1BL_BDT.weights.xml'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1EC_BDT.weights.xml'),
    minMVA1prongBL = cms.double(0.054),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0BL_BDT.weights.xml'),
    method = cms.string('BDT'),
    minMVA1prongStripsWOgsfBL = cms.double(0.054),
    minMVA1prongStripsWgsfBL = cms.double(0.06)
)


process.pfRecoTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.pfRecoTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.pfRecoTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.pfRecoTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.pfRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauTagInfoProducer = cms.EDProducer("PFRecoTauTagInfoProducer",
    tkminTrackerHitsn = cms.int32(3),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    tkmaxChi2 = cms.double(100.0),
    ChargedHadrCand_AssociationCone = cms.double(0.8),
    ChargedHadrCand_tkminTrackerHitsn = cms.int32(3),
    ChargedHadrCand_tkmaxChi2 = cms.double(100.0),
    tkPVmaxDZ = cms.double(0.2),
    GammaCand_EcalclusMinEt = cms.double(0.5),
    tkminPixelHitsn = cms.int32(0),
    tkminPt = cms.double(0.5),
    PFCandidateProducer = cms.InputTag("particleFlow"),
    ChargedHadrCand_tkminPt = cms.double(0.5),
    ChargedHadrCand_tkmaxipt = cms.double(0.03),
    ChargedHadrCand_tkminPixelHitsn = cms.int32(0),
    UsePVconstraint = cms.bool(True),
    NeutrHadrCand_HcalclusMinEt = cms.double(1.0),
    PFJetTracksAssociatorProducer = cms.InputTag("ak5PFJetTracksAssociatorAtVertex"),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    ChargedHadrCand_tkPVmaxDZ = cms.double(0.2),
    tkmaxipt = cms.double(0.03)
)


process.pfTauDecayMode = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducer")
)


process.pfTauDecayModeHighEfficiency = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerHighEfficiency")
)


process.pfTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("pfRecoTauDecayModeProducer")
)


process.pfTauDecayModeInsideOut = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerInsideOut")
)


process.pfTrack = cms.EDProducer("PFTrackProducer",
    TrajInEvents = cms.bool(False),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    GsfTracksInEvents = cms.bool(True),
    UseQuality = cms.bool(True),
    MuColl = cms.InputTag("muons1stStep"),
    TrackQuality = cms.string('highPurity'),
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks")
)


process.pfTrackElec = cms.EDProducer("PFElecTkProducer",
    TrajInEvents = cms.bool(False),
    maxDPhiBremTangGsfAngularCleaning = cms.double(0.05),
    PFConversions = cms.InputTag("pfConversions"),
    useConversions = cms.bool(False),
    MaxConvBremRecoPT = cms.double(49.0),
    ModeMomentum = cms.bool(True),
    PFEcalClusters = cms.InputTag("particleFlowClusterECAL"),
    Propagator = cms.string('fwdElectronPropagator'),
    useV0 = cms.bool(False),
    pf_convBremFinderID_mvaWeightFile = cms.string('RecoParticleFlow/PFTracking/data/MVAnalysis_BDT.weights_convBremFinder_19Apr_IntToFloat.txt'),
    useFifthStepForEcalDrivenGsf = cms.bool(False),
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks"),
    MinDPhiGsfSC = cms.double(0.15),
    applyEGSelection = cms.bool(False),
    useNuclear = cms.bool(False),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    applyGsfTrackCleaning = cms.bool(True),
    MinDEtaGsfSC = cms.double(0.06),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    useConvBremFinder = cms.bool(True),
    debugGsfCleaning = cms.bool(False),
    applyAlsoGsfAngularCleaning = cms.bool(True),
    PFV0 = cms.InputTag("pfV0"),
    pf_convBremFinderID_mvaCut = cms.double(0.2),
    useFifthStepForTrackerDrivenGsf = cms.bool(False),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    MinSCEnergy = cms.double(4.0),
    maxDEtaGsfAngularCleaning = cms.double(0.05),
    TTRHBuilder = cms.string('WithTrackAngle'),
    PFRecTrackLabel = cms.InputTag("pfTrack")
)


process.pfV0 = cms.EDProducer("PFV0Producer",
    V0List = cms.VInputTag(cms.InputTag("generalV0Candidates","Kshort"), cms.InputTag("generalV0Candidates","Lambda"))
)


process.phPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        SCMatch_Veto = cms.bool(True),
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        MissHitSCMatch_Veto = cms.bool(False),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoValueCharged03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueCharged04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueChargedAll03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueChargedAll04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueGamma03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueGamma04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueNeutral03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValueNeutral04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValuePU03PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.phPFIsoValuePU04PFId = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("phPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.photonConvTrajSeedFromSingleLeg = cms.EDProducer("PhotonConversionTrajectorySeedProducerFromSingleLeg",
    vtxMinDoF = cms.double(4),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        MaxNumberOfPixelClusters = cms.uint32(20000),
        cut = cms.string('strip < 150000 && pixel < 20000 && (strip < 20000 + 7* pixel)'),
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters")
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(3.0),
            ptMin = cms.double(0.2),
            originHalfLength = cms.double(12.0),
            beamSpot = cms.InputTag("offlineBeamSpot")
        )
    ),
    DoxcheckSeedCandidates = cms.bool(False),
    xcheckSeedCandidates = cms.string('xcheckSeedCandidates'),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedForPhotonConversion1Leg'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TrackRefitter = cms.InputTag("generalTracks"),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(10000),
        SeedingLayers = cms.string('convLayerPairs'),
        maxHitPairsPerTrackAndGenerator = cms.uint32(10)
    ),
    applyTkVtxConstraint = cms.bool(True),
    maxDZSigmas = cms.double(10.0),
    maxNumSelVtx = cms.uint32(2),
    primaryVerticesTag = cms.InputTag("pixelVertices"),
    newSeedCandidates = cms.string('convSeedCandidates')
)


process.photonCore = cms.EDProducer("PhotonCoreProducer",
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    photonCoreCollection = cms.string(''),
    minSCEt = cms.double(10.0),
    pixelSeedProducer = cms.string('electronMergedSeeds'),
    risolveConversionAmbiguity = cms.bool(True),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    conversionProducer = cms.InputTag("conversions")
)


process.photons = cms.EDProducer("PhotonProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    candidateP4type = cms.string('fromEcalEnergy'),
    usePrimaryVertex = cms.bool(True),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    minSCEtBarrel = cms.double(10.0),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    posCalc_t0_barl = cms.double(7.7),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    posCalc_logweight = cms.bool(True),
    hcalTowers = cms.InputTag("towerMaker"),
    nTrackHollowConeBarrel = cms.double(999999999),
    posCalc_t0_endcPresh = cms.double(3.6),
    nTrackSolidConeEndcap = cms.double(999999999),
    minR9Endcap = cms.double(0.95),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_w0 = cms.double(4.2),
    mipVariableSet = cms.PSet(
        XRangeFit = cms.double(180.0),
        ResidualWidth = cms.double(0.23),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0)
    ),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    nTrackHollowConeEndcap = cms.double(999999999),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minSCEtEndcap = cms.double(10.0),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hbheModule = cms.string('hbhereco'),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    maxHoverEBarrel = cms.double(0.5),
    highEt = cms.double(100.0),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hbheInstance = cms.string(''),
    hOverEConeSize = cms.double(0.15),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    posCalc_x0 = cms.double(0.89),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isolationSumsCalculatorSet = cms.PSet(
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        trackProducer = cms.InputTag("generalTracks"),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        longImpactParameterA_Barrel = cms.double(0.2),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        transImpactParameterA_Barrel = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        transImpactParameterA_Endcap = cms.double(0.1),
        ComponentName = cms.string('isolationSumsCalculator'),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        longImpactParameterB_Endcap = cms.double(0.2),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        transImpactParameterB_Endcap = cms.double(0.1),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        vetoClustered = cms.bool(False),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        moduleEtaBoundary = cms.vdouble(0.0, 0.02, 0.43, 0.46, 0.78, 
            0.81, 1.13, 1.15, 1.45, 1.58),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        modulePhiBoundary = cms.double(0.0087),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        transImpactParameterB_Barrel = cms.double(0.1),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0)
    ),
    photonCoreProducer = cms.InputTag("photonCore"),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    posCalc_t0_endc = cms.double(6.3),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999)
)


process.pixelLessStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("mixedTripletStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("mixedTripletStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("mixedTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.pixelLessStepSeedClusterMask = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("pixelLessStepSeeds"),
    oldClusterRemovalInfo = cms.InputTag("mixedTripletStepSeedClusterMask"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.pixelLessStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('pixelLessStepSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        FilterPixelHits = cms.bool(False),
        FilterStripHits = cms.bool(True),
        FilterAtHelixStage = cms.bool(True)
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(2.0),
            ptMin = cms.double(0.7),
            originHalfLength = cms.double(10.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.pixelLessStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("pixelLessStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(3),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(4),
        chi2n_par = cms.double(0.5),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(1.3, 4.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(1.3, 4.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(1),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('pixelLessStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.001),
        d0_par2 = cms.vdouble(1.3, 4.0),
        d0_par1 = cms.vdouble(1.3, 4.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(4),
            chi2n_par = cms.double(0.35),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('pixelLessStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('pixelLessStepLoose'),
            d0_par2 = cms.vdouble(1.1, 4.0),
            d0_par1 = cms.vdouble(1.1, 4.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(4),
            chi2n_par = cms.double(0.2),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.9, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.9, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('pixelLessStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.9, 4.0),
            d0_par1 = cms.vdouble(0.9, 4.0),
            preFilterName = cms.string('pixelLessStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.pixelLessStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("pixelLessStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    numHitsForSeedCleaner = cms.int32(50),
    TrajectoryBuilder = cms.string('pixelLessStepTrajectoryBuilder')
)


process.pixelLessStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("pixelLessStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter5'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.pixelPairElectronSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('pixelPairElectronSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            useFixedError = cms.bool(True),
            originRadius = cms.double(0.015),
            sigmaZVertex = cms.double(3.0),
            fixedError = cms.double(0.03),
            VertexCollection = cms.InputTag("pixelVertices"),
            ptMin = cms.double(1.0),
            useFoundVertices = cms.bool(True),
            nSigmaZ = cms.double(4.0)
        ),
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.pixelPairStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("lowPtTripletStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("lowPtTripletStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("lowPtTripletStepSelector","lowPtTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.pixelPairStepSeedClusterMask = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("pixelPairStepSeeds"),
    oldClusterRemovalInfo = cms.InputTag("initialStepSeedClusterMask"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.pixelPairStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('pixelPairStepSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False),
        FilterAtHelixStage = cms.bool(True)
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            useFixedError = cms.bool(True),
            originRadius = cms.double(0.015),
            sigmaZVertex = cms.double(3.0),
            fixedError = cms.double(0.03),
            VertexCollection = cms.InputTag("pixelVertices"),
            ptMin = cms.double(0.6),
            useFoundVertices = cms.bool(True),
            nSigmaZ = cms.double(4.0)
        ),
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.pixelPairStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("pixelPairStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(0),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(0),
        chi2n_par = cms.double(1.6),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(0.45, 4.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(0.65, 4.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(999),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('pixelPairStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.01),
        d0_par2 = cms.vdouble(0.55, 4.0),
        d0_par1 = cms.vdouble(0.55, 4.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('pixelPairStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('pixelPairStepLoose'),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            res_par = cms.vdouble(0.003, 0.01),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(3),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(3),
            chi2n_par = cms.double(0.7),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(0.35, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('pixelPairStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(0.4, 4.0),
            d0_par1 = cms.vdouble(0.3, 4.0),
            preFilterName = cms.string('pixelPairStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.pixelPairStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("pixelPairStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    TrajectoryBuilder = cms.string('pixelPairStepTrajectoryBuilder'),
    numHitsForSeedCleaner = cms.int32(50)
)


process.pixelPairStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("pixelPairStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.pixelTracks = cms.EDProducer("PixelTrackProducer",
    useFilterWithES = cms.bool(False),
    FilterPSet = cms.PSet(
        chi2 = cms.double(1000.0),
        nSigmaTipMaxTolerance = cms.double(0.0),
        ComponentName = cms.string('PixelTrackFilterByKinematics'),
        nSigmaInvPtTolerance = cms.double(0.0),
        ptMin = cms.double(0.1),
        tipMax = cms.double(1.0)
    ),
    FitterPSet = cms.PSet(
        ComponentName = cms.string('PixelFitterByHelixProjections'),
        TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            originRadius = cms.double(0.2),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    CleanerPSet = cms.PSet(
        ComponentName = cms.string('PixelTrackCleanerBySharedHits')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    passLabel = cms.string('pixelTracks')
)


process.pixelVertices = cms.EDProducer("PrimaryVertexProducer",
    vertexCollections = cms.VPSet(cms.PSet(
        maxDistanceToBeam = cms.double(2.0),
        useBeamConstraint = cms.bool(False),
        minNdof = cms.double(2.0),
        algorithm = cms.string('AdaptiveVertexFitter'),
        label = cms.string('')
    )),
    verbose = cms.untracked.bool(False),
    TkFilterParameters = cms.PSet(
        maxNormalizedChi2 = cms.double(100.0),
        minPt = cms.double(0.0),
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(100.0),
        trackQuality = cms.string('any'),
        minPixelLayersWithHits = cms.int32(3),
        minSiliconLayersWithHits = cms.int32(3)
    ),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    TrackLabel = cms.InputTag("pixelTracks"),
    TkClusParameters = cms.PSet(
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(0.1)
        ),
        algorithm = cms.string('gap')
    )
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.recoTauAK5PFJets08Region = cms.EDProducer("RecoTauJetRegionProducer",
    src = cms.InputTag("ak5PFJets"),
    deltaR = cms.double(0.8),
    pfSrc = cms.InputTag("particleFlow")
)


process.reducedEcalRecHitsEB = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(cms.InputTag("interestingEcalDetIdEB"), cms.InputTag("interestingEcalDetIdEBU"), cms.InputTag("interestingEleIsoDetIdEB"), cms.InputTag("interestingGamIsoDetIdEB"), cms.InputTag("pfElectronInterestingEcalDetIdEB"), 
        cms.InputTag("pfPhotonInterestingEcalDetIdEB"), cms.InputTag("muonEcalDetIds"), cms.InputTag("interestingTrackEcalDetIds")),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsEE = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(cms.InputTag("interestingEcalDetIdEE"), cms.InputTag("interestingEleIsoDetIdEE"), cms.InputTag("interestingGamIsoDetIdEE"), cms.InputTag("pfElectronInterestingEcalDetIdEE"), cms.InputTag("pfPhotonInterestingEcalDetIdEE"), 
        cms.InputTag("muonEcalDetIds"), cms.InputTag("interestingTrackEcalDetIds")),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsES = cms.EDProducer("ReducedESRecHitCollectionProducer",
    interestingDetIds = cms.VInputTag(),
    EndcapSuperClusterCollection = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    scEtThreshold = cms.double(15),
    OutputLabel_ES = cms.string(''),
    EcalRecHitCollectionES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
)


process.reducedHcalRecHits = cms.EDProducer("HcalHitSelection",
    interestingDetIds = cms.VInputTag(),
    hfTag = cms.InputTag("hfreco"),
    hoTag = cms.InputTag("horeco"),
    hbheTag = cms.InputTag("hbhereco"),
    hoSeverityLevel = cms.int32(13)
)


process.refittedStandAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    InputObjects = cms.InputTag("ancientMuonSeed"),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    ),
    STATrajBuilderParameters = cms.PSet(
        DoRefit = cms.bool(True),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            FitDirection = cms.string('insideOut'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(0),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        NavigationType = cms.string('Standard'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            UseSubRecHits = cms.bool(False),
            NMinRecHits = cms.uint32(2),
            RescaleError = cms.double(100.0)
        ),
        DoBackwardFilter = cms.bool(True),
        SeedPosition = cms.string('in'),
        BWFilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            BWSeedType = cms.string('fromGenerator'),
            FitDirection = cms.string('outsideIn'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(0),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            MaxFractionOfLostHits = cms.double(0.05),
            ForceAllIterations = cms.bool(False),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        )
    ),
    MuonTrajectoryBuilder = cms.string('Exhaustive')
)


process.regionalCosmicCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("regionalCosmicTrackerSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilderP5')
)


process.regionalCosmicTrackerSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        MaxNumberOfPixelClusters = cms.uint32(10000),
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(10000),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        doClusterCheck = cms.bool(False)
    ),
    RegionFactoryPSet = cms.PSet(
        CollectionsPSet = cms.PSet(
            recoMuonsCollection = cms.InputTag(""),
            recoTrackMuonsCollection = cms.InputTag("cosmicMuons"),
            recoL2MuonsCollection = cms.InputTag("")
        ),
        ComponentName = cms.string('CosmicRegionalSeedGenerator'),
        RegionInJetsCheckPSet = cms.PSet(
            recoCaloJetsCollection = cms.InputTag("ak5CaloJets"),
            deltaRExclusionSize = cms.double(0.3),
            jetsPtMin = cms.double(5),
            doJetsExclusionCheck = cms.bool(True)
        ),
        ToolsPSet = cms.PSet(
            regionBase = cms.string('seedOnCosmicMuon'),
            thePropagatorName = cms.string('AnalyticalPropagator')
        ),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            deltaPhiRegion = cms.double(0.1),
            measurementTrackerName = cms.string(''),
            zVertex = cms.double(5),
            deltaEtaRegion = cms.double(0.1),
            ptMin = cms.double(1.0),
            rVertex = cms.double(5)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('CosmicSeedCreator'),
        maxseeds = cms.int32(10000),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('GenericPairGenerator'),
        LayerPSet = cms.PSet(
            TOB = cms.PSet(
                TTRHBuilder = cms.string('WithTrackAngle')
            ),
            TEC = cms.PSet(
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                minRing = cms.int32(6),
                maxRing = cms.int32(7)
            ),
            layerList = cms.vstring('TOB6+TOB5', 
                'TOB6+TOB4', 
                'TOB6+TOB3', 
                'TOB5+TOB4', 
                'TOB5+TOB3', 
                'TOB4+TOB3', 
                'TEC1_neg+TOB6', 
                'TEC1_neg+TOB5', 
                'TEC1_neg+TOB4', 
                'TEC1_pos+TOB6', 
                'TEC1_pos+TOB5', 
                'TEC1_pos+TOB4')
        )
    ),
    TTRHBuilder = cms.string('WithTrackAngle')
)


process.regionalCosmicTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("regionalCosmicCkfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FittingSmootherRKP5'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('ctf'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.roadSearchClouds = cms.EDProducer("RoadSearchCloudMaker",
    MinimalFractionOfUsedLayersPerCloud = cms.double(0.5),
    pixelRecHits = cms.InputTag("siPixelRecHits"),
    MergingFraction = cms.double(0.8),
    MaxDetHitsInCloudPerDetId = cms.uint32(8),
    SeedProducer = cms.InputTag("roadSearchSeeds"),
    DoCloudCleaning = cms.bool(True),
    IncreaseMaxNumberOfConsecutiveMissedLayersPerCloud = cms.uint32(4),
    rphiStripRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    UseStereoRecHits = cms.bool(False),
    ZPhiRoadSize = cms.double(0.06),
    MaximalFractionOfConsecutiveMissedLayersPerCloud = cms.double(0.15),
    stereoStripRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHit"),
    MaximalFractionOfMissedLayersPerCloud = cms.double(0.3),
    scalefactorRoadSeedWindow = cms.double(1.5),
    UsePixelsinRS = cms.bool(True),
    IncreaseMaxNumberOfMissedLayersPerCloud = cms.uint32(3),
    RoadsLabel = cms.string(''),
    MaxRecHitsInCloud = cms.int32(100),
    UseRphiRecHits = cms.bool(False),
    StraightLineNoBeamSpotCloud = cms.bool(False),
    RPhiRoadSize = cms.double(0.02),
    matchedStripRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    MinimumHalfRoad = cms.double(0.55)
)


process.roadSearchSeeds = cms.EDProducer("RoadSearchSeedFinder",
    OuterSeedRecHitAccessMode = cms.string('RPHI'),
    pixelRecHits = cms.InputTag("siPixelRecHits"),
    MaximalEndcapImpactParameter = cms.double(1.2),
    MergeSeedsCenterCut_C = cms.double(0.4),
    MergeSeedsCenterCut_B = cms.double(0.25),
    MergeSeedsCenterCut_A = cms.double(0.05),
    MergeSeedsDifferentHitsCut = cms.uint32(1),
    rphiStripRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    MaximalBarrelImpactParameter = cms.double(0.2),
    PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
    MaxNumberOfSeeds = cms.int32(-1),
    doClusterCheck = cms.bool(False),
    stereoStripRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHit"),
    ClusterCollectionLabel = cms.InputTag("siStripClusters"),
    OuterSeedRecHitAccessUseStereo = cms.bool(False),
    MaxNumberOfCosmicClusters = cms.uint32(300),
    MinimalReconstructedTransverseMomentum = cms.double(1.5),
    PhiRangeForDetIdLookupInRings = cms.double(0.5),
    Mode = cms.string('STANDARD'),
    MaxNumberOfPixelClusters = cms.uint32(300),
    AllNegativeOnly = cms.bool(False),
    RoadsLabel = cms.string(''),
    InnerSeedRecHitAccessMode = cms.string('RPHI'),
    InnerSeedRecHitAccessUseStereo = cms.bool(False),
    OuterSeedRecHitAccessUseRPhi = cms.bool(False),
    MergeSeedsRadiusCut_B = cms.double(0.25),
    MergeSeedsRadiusCut_C = cms.double(0.4),
    matchedStripRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    MergeSeedsRadiusCut_A = cms.double(0.05),
    InnerSeedRecHitAccessUseRPhi = cms.bool(False),
    AllPositiveOnly = cms.bool(False)
)


process.rpcRecHits = cms.EDProducer("RPCRecHitProducer",
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    rpcDigiLabel = cms.InputTag("muonRPCDigis"),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgoConfig = cms.PSet(

    ),
    deadSource = cms.string('File'),
    maskSource = cms.string('File')
)


process.rpcTriggerDigis = cms.EDProducer("RPCTrigger",
    RPCTriggerDebug = cms.untracked.int32(0),
    label = cms.string('muonRPCDigis')
)


process.rsTrackCandidates = cms.EDProducer("RoadSearchTrackCandidateMaker",
    NumHitCut = cms.int32(5),
    InitialVertexErrorXY = cms.double(0.2),
    HitChi2Cut = cms.double(30.0),
    StraightLineNoBeamSpotCloud = cms.bool(False),
    nFoundMin = cms.int32(4),
    MinimumChunkLength = cms.int32(7),
    TTRHBuilder = cms.string('WithTrackAngle'),
    CosmicTrackMerging = cms.bool(False),
    MeasurementTrackerName = cms.string(''),
    CloudProducer = cms.InputTag("roadSearchClouds"),
    CosmicSeedPt = cms.double(5.0),
    SplitMatchedHits = cms.bool(False)
)


process.rsWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("rsTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('RKFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('rs'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.sc5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("sisCone5CaloJets")
)


process.sc7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("sisCone7CaloJets")
)


process.scalerBeamSpot = cms.EDProducer("BeamSpotOnlineProducer",
    maxZ = cms.double(40),
    src = cms.InputTag("scalersRawToDigi"),
    gtEvmLabel = cms.InputTag("gtEvmDigis"),
    changeToCMSCoordinates = cms.bool(False),
    setSigmaZ = cms.double(-1),
    maxRadius = cms.double(2)
)


process.scalersRawToDigi = cms.EDProducer("ScalersRawToDigi",
    scalersInputTag = cms.InputTag("rawDataCollector")
)


process.secondaryVertexNegativeTagInfos = cms.EDProducer("SecondaryVertexProducer",
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(-0.01),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(-0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(-99999.9),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(-3.0),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(-2.5),
        distSig3dMin = cms.double(-99999.9)
    ),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    extSVDeltaRToJet = cms.double(0.3),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    useExternalSV = cms.bool(False),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSort = cms.string('sip3dSig'),
    extSVCollection = cms.InputTag("secondaryVertices")
)


process.secondaryVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    extSVDeltaRToJet = cms.double(0.3),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    useExternalSV = cms.bool(False),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSort = cms.string('sip3dSig'),
    extSVCollection = cms.InputTag("secondaryVertices")
)


process.seedClusterRemover = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("initialStepSeeds"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.selectDigi = cms.EDProducer("EcalDigiSelector",
    EcalEBDigiTag = cms.InputTag("ecalDigis","ebDigis"),
    nclus_sel = cms.int32(2),
    EcalEEDigiTag = cms.InputTag("ecalDigis","eeDigis"),
    barrelSuperClusterProducer = cms.InputTag("uncleanedHybridSuperClusters"),
    selectedEcalEBDigiCollection = cms.string('selectedEcalEBDigiCollection'),
    selectedEcalEEDigiCollection = cms.string('selectedEcalEEDigiCollection'),
    endcapSuperClusterProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    EcalEBRecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EcalEERecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    single_cluster_thresh = cms.double(15.0),
    cluster_pt_thresh = cms.double(10.0)
)


process.shrinkingConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("shrinkingConePFTauDecayModeProducer")
)


process.shrinkingConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.shrinkingConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.shrinkingConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.shrinkingConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByTaNC = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(

    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('OneProngNoPiZero'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('OneProngOnePiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('OneProngTwoPiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('ThreeProngNoPiZero'),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('ThreeProngOnePiZero'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    prefailValue = cms.double(-2.0),
    dbLabel = cms.string('')
)


process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9087875)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.8707145)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.921793)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9451915)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9488565)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.7649845)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.699697)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.772231)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.905071)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9238995)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9539685)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.940843)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9645195)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.960407)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.994065)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.959384)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.991353)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9712775)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9875015)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(1.0234655)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauProducer = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("shrinkingConePFTauProducerSansRefs"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.15'),
        name = cms.string('shrinkingCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('min(max(5.0/et(), 0.07), 0.15)'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyTaNCPiZeros")
)


process.shrinkingConePFTauProducerSansRefs = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.15'),
        name = cms.string('shrinkingCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('min(max(5.0/et(), 0.07), 0.15)'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.siPixelClusters = cms.EDProducer("SiPixelClusterProducer",
    src = cms.InputTag("siPixelDigis"),
    ChannelThreshold = cms.int32(1000),
    maxNumberOfClusters = cms.int32(-1),
    SplitClusters = cms.bool(False),
    MissCalibrate = cms.untracked.bool(True),
    VCaltoElectronGain = cms.int32(65),
    VCaltoElectronOffset = cms.int32(-414),
    payloadType = cms.string('Offline'),
    SeedThreshold = cms.int32(1000),
    ClusterThreshold = cms.double(4000.0)
)


process.siPixelClustersForLumi = cms.EDProducer("SiPixelClusterProducer",
    src = cms.InputTag("siPixelDigisForLumi"),
    ChannelThreshold = cms.int32(1000),
    maxNumberOfClusters = cms.int32(-1),
    VCaltoElectronGain = cms.int32(65),
    MissCalibrate = cms.untracked.bool(True),
    SplitClusters = cms.bool(False),
    VCaltoElectronOffset = cms.int32(-414),
    payloadType = cms.string('Offline'),
    SeedThreshold = cms.int32(1000),
    ClusterThreshold = cms.double(4000.0)
)


process.siPixelDigis = cms.EDProducer("SiPixelRawToDigi",
    UseQualityInfo = cms.bool(False),
    CheckPixelOrder = cms.bool(False),
    IncludeErrors = cms.bool(True),
    UseCablingTree = cms.untracked.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    ErrorList = cms.vint32(29),
    Regions = cms.PSet(

    ),
    Timing = cms.untracked.bool(False),
    UserErrorList = cms.vint32(40)
)


process.siPixelDigisForLumi = cms.EDProducer("SiPixelRawToDigi",
    UseQualityInfo = cms.bool(False),
    CheckPixelOrder = cms.bool(False),
    IncludeErrors = cms.bool(True),
    UseCablingTree = cms.untracked.bool(True),
    InputLabel = cms.InputTag("hltFEDSelectorLumiPixels"),
    ErrorList = cms.vint32(29),
    Regions = cms.PSet(

    ),
    Timing = cms.untracked.bool(False),
    UserErrorList = cms.vint32(40)
)


process.siPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("siPixelClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.siStripClusters = cms.EDProducer("SiStripClusterizer",
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode")),
    Clusterizer = cms.PSet(
        ChannelThreshold = cms.double(2.0),
        MaxSequentialBad = cms.uint32(1),
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        MaxSequentialHoles = cms.uint32(0),
        MaxAdjacentBad = cms.uint32(0),
        QualityLabel = cms.string(''),
        SeedThreshold = cms.double(3.0),
        RemoveApvShots = cms.bool(True),
        ClusterThreshold = cms.double(5.0)
    )
)


process.siStripDigis = cms.EDProducer("SiStripRawToDigiModule",
    UseDaqRegister = cms.bool(False),
    ProductLabel = cms.InputTag("rawDataCollector"),
    DoAPVEmulatorCheck = cms.bool(False),
    UnpackCommonModeValues = cms.bool(False),
    AppendedBytes = cms.int32(0),
    UseFedKey = cms.bool(False),
    ErrorThreshold = cms.uint32(7174),
    TriggerFedId = cms.int32(0),
    MarkModulesOnMissingFeds = cms.bool(True),
    UnpackBadChannels = cms.bool(False),
    DoAllCorruptBufferChecks = cms.bool(False)
)


process.siStripElectronToTrackAssociator = cms.EDProducer("SiStripElectronAssociator",
    siStripElectronCollection = cms.InputTag("siStripElectrons"),
    trackCollection = cms.InputTag("egammaCTFFinalFitWithMaterial"),
    electronsLabel = cms.InputTag("siStripElectrons")
)


process.siStripElectrons = cms.EDProducer("SiStripElectronProducer",
    siStereoHitCollection = cms.string('stereoRecHit'),
    maxHitsOnDetId = cms.int32(4),
    minHits = cms.int32(5),
    trackCandidatesLabel = cms.string(''),
    superClusterProducer = cms.string('correctedHybridSuperClusters'),
    phiBandWidth = cms.double(0.01),
    siStripElectronsLabel = cms.string(''),
    maxNormResid = cms.double(10.0),
    siHitProducer = cms.string('siStripMatchedRecHits'),
    maxReducedChi2 = cms.double(10000.0),
    siRphiHitCollection = cms.string('rphiRecHit'),
    originUncertainty = cms.double(15.0),
    siMatchedHitCollection = cms.string('matchedRecHit'),
    superClusterCollection = cms.string('')
)


process.siStripMatchedRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    Regional = cms.bool(False),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    ClusterProducer = cms.InputTag("siStripClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.siStripZeroSuppression = cms.EDProducer("SiStripZeroSuppression",
    fixCM = cms.bool(False),
    DigisToMergeVR = cms.InputTag("siStripVRDigis","VirginRaw"),
    produceCalculatedBaseline = cms.bool(False),
    produceRawDigis = cms.bool(True),
    RawDigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","VirginRaw"), cms.InputTag("siStripDigis","ProcessedRaw"), cms.InputTag("siStripDigis","ScopeMode")),
    storeInZScollBadAPV = cms.bool(True),
    mergeCollections = cms.bool(False),
    Algorithms = cms.PSet(
        CutToAvoidSignal = cms.double(2.0),
        slopeY = cms.int32(4),
        slopeX = cms.int32(3),
        PedestalSubtractionFedMode = cms.bool(False),
        Fraction = cms.double(0.2),
        minStripsToFit = cms.uint32(4),
        consecThreshold = cms.uint32(5),
        hitStripThreshold = cms.uint32(40),
        Deviation = cms.uint32(25),
        CommonModeNoiseSubtractionMode = cms.string('IteratedMedian'),
        filteredBaselineDerivativeSumSquare = cms.double(30),
        ApplyBaselineCleaner = cms.bool(True),
        doAPVRestore = cms.bool(True),
        TruncateInSuppressor = cms.bool(True),
        restoreThreshold = cms.double(0.5),
        APVInspectMode = cms.string('BaselineFollower'),
        ForceNoRestore = cms.bool(False),
        useRealMeanCM = cms.bool(False),
        ApplyBaselineRejection = cms.bool(True),
        DeltaCMThreshold = cms.uint32(20),
        nSigmaNoiseDerTh = cms.uint32(4),
        nSaturatedStrip = cms.uint32(2),
        SiStripFedZeroSuppressionMode = cms.uint32(4),
        useCMMeanMap = cms.bool(False),
        SelfSelectRestoreAlgo = cms.bool(False),
        distortionThreshold = cms.uint32(20),
        filteredBaselineMax = cms.double(6),
        Iterations = cms.int32(3),
        CleaningSequence = cms.uint32(1),
        nSmooth = cms.uint32(9),
        APVRestoreMode = cms.string('BaselineFollower'),
        MeanCM = cms.int32(0)
    ),
    DigisToMergeZS = cms.InputTag("siStripDigis","ZeroSuppressed"),
    storeCM = cms.bool(True),
    produceBaselinePoints = cms.bool(False)
)


process.simEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    InstanceEB = cms.string(''),
    InstanceEE = cms.string(''),
    binOfMaximum = cms.int32(6),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    Debug = cms.bool(False),
    Label = cms.string('simEcalUnsuppressedDigis')
)


process.simHcalTriggerPrimitiveDigis = cms.EDProducer("HcalTrigPrimDigiProducer",
    latency = cms.int32(1),
    MinSignalThreshold = cms.uint32(0),
    ZS_threshold = cms.uint32(1),
    PMTNoiseThreshold = cms.uint32(0),
    InputTagFEDRaw = cms.InputTag("source"),
    inputLabel = cms.VInputTag(cms.InputTag("simHcalUnsuppressedDigis"), cms.InputTag("simHcalUnsuppressedDigis")),
    numberOfPresamples = cms.int32(2),
    PeakFinderAlgorithm = cms.int32(2),
    numberOfSamples = cms.int32(4),
    weights = cms.vdouble(1.0, 1.0),
    RunZS = cms.bool(False),
    FG_threshold = cms.uint32(12),
    FrontEndFormatError = cms.bool(False),
    peakFilter = cms.bool(True)
)


process.simpleSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexNegativeHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexNegativeTagInfos"))
)


process.simpleSecondaryVertexNegativeHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexNegativeTagInfos"))
)


process.sisCone5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5),
    restrictInputs = cms.bool(True),
    maxInputs = cms.uint32(1000)
)


process.sisCone5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    restrictInputs = cms.bool(True),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxInputs = cms.uint32(1000),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.sisCone5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("sisCone5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("sisCone5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("sisCone5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.sisCone5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("sisCone5CaloJets")
)


process.sisCone5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    jets = cms.InputTag("sisCone5CaloJets")
)


process.sisCone5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    restrictInputs = cms.bool(True),
    maxInputs = cms.uint32(1000)
)


process.sisCone7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    restrictInputs = cms.bool(True),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    puPtMin = cms.double(10),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxInputs = cms.uint32(1000),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.sisCone7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("trackRefsForJets"),
    jetPtMin = cms.double(3.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.softElectronBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softElectron'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronCands = cms.EDProducer("SoftElectronCandProducer",
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0),
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01),
    electrons = cms.InputTag("gsfElectrons")
)


process.softElectronSelector = cms.EDProducer("BtagGsfElectronSelector",
    input = cms.InputTag("gsfElectrons"),
    selection = cms.InputTag("eidLoose"),
    cut = cms.double(0.5)
)


process.softElectronTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(0),
    leptons = cms.InputTag("gsfElectrons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag("softElectronCands"),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5CaloJets"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(10.0)
)


process.softMuonBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuon'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonNoIPBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuonNoIP'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(1),
    leptons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag(""),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5CaloJets"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(9999.0)
)


process.standAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    InputObjects = cms.InputTag("ancientMuonSeed"),
    MuonTrajectoryBuilder = cms.string('Exhaustive'),
    STATrajBuilderParameters = cms.PSet(
        DoRefit = cms.bool(False),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            FitDirection = cms.string('insideOut'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(0),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        NavigationType = cms.string('Standard'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            UseSubRecHits = cms.bool(False),
            NMinRecHits = cms.uint32(2),
            RescaleError = cms.double(100.0)
        ),
        DoBackwardFilter = cms.bool(True),
        SeedPosition = cms.string('in'),
        BWFilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            BWSeedType = cms.string('fromGenerator'),
            FitDirection = cms.string('outsideIn'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(0),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            MaxFractionOfLostHits = cms.double(0.05),
            ForceAllIterations = cms.bool(False),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        )
    )
)


process.standAloneSETMuons = cms.EDProducer("StandAloneMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    InputObjects = cms.InputTag("SETMuonSeed"),
    MuonTrajectoryBuilder = cms.string('DirectMuonTrajectoryBuilder'),
    STATrajBuilderParameters = cms.PSet(
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            UseSubRecHits = cms.bool(False),
            NMinRecHits = cms.uint32(2),
            RescaleError = cms.double(1.0)
        )
    )
)


process.stripPairElectronSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('stripPairElectronSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.4),
            ptMin = cms.double(1.0),
            originHalfLength = cms.double(12.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.tagGsf = cms.EDProducer("CandViewShallowCloneCombiner",
    decay = cms.string('PassingTightId PassingVeryLooseId'),
    cut = cms.string('mass > 40.0'),
    checkCharge = cms.bool(False)
)


process.tcMet = cms.EDProducer("METProducer",
    vertexRho = cms.double(2.0),
    eVetoDeltaPhi = cms.double(100.0),
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    dupMinPt = cms.double(0.0),
    usedeltaRRejection = cms.bool(False),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    corner = cms.double(1.479),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    eta_max = cms.double(2.65),
    METType = cms.string('TCMET'),
    eVetoDeltaCotTheta = cms.double(100.0),
    tcmetDepValueMap = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    maxd0cut = cms.double(0.3),
    alias = cms.string('TCMET'),
    d0cutb = cms.double(0.5),
    trackInputTag = cms.InputTag("generalTracks"),
    usePFClusters = cms.bool(False),
    vertexMaxDZ = cms.double(0.2),
    deltaRShower = cms.double(0.01),
    chi2_max = cms.double(5),
    zdist = cms.double(314.0),
    noHF = cms.bool(False),
    track_algos = cms.vint32(),
    ptErr_tight_max = cms.double(0.2),
    InputType = cms.string('CaloMET:Electron:Muon:Track'),
    maxTrackAlgo = cms.int32(8),
    nLayers = cms.int32(0),
    muonInputTag = cms.InputTag("muons"),
    correctShowerTracks = cms.bool(False),
    vetoDuplicates = cms.bool(False),
    pt_max = cms.double(100.0),
    nhits_tight_min = cms.double(9),
    nMinOuterHits = cms.int32(2),
    globalThreshold = cms.double(0.0),
    chi2_tight_max = cms.double(5.0),
    src = cms.InputTag("towerMaker"),
    checkTrackPropagation = cms.bool(False),
    dupDPhi = cms.double(0.03),
    electronInputTag = cms.InputTag("gsfElectrons"),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    d0cuta = cms.double(0.015),
    hOverECut = cms.double(0.1),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    electronVetoCone = cms.bool(True),
    muonDepValueMap = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metInputTag = cms.InputTag("met"),
    usePvtxd0 = cms.bool(False),
    dupDCotTh = cms.double(0.0006),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    maxpt_eta25 = cms.double(0.0),
    nhits_min = cms.double(6),
    eVetoDeltaR = cms.double(0.015),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    rf_type = cms.int32(1),
    radius = cms.double(130.0),
    track_quality = cms.vint32(2),
    isCosmics = cms.bool(False),
    eVetoMinElectronPt = cms.double(10.0)
)


process.tcMetWithPFclusters = cms.EDProducer("METProducer",
    vertexRho = cms.double(2.0),
    eVetoDeltaPhi = cms.double(100.0),
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    dupMinPt = cms.double(0.0),
    chi2_tight_max = cms.double(5.0),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    corner = cms.double(1.479),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    eta_max = cms.double(2.65),
    muonInputTag = cms.InputTag("muons"),
    eVetoDeltaCotTheta = cms.double(100.0),
    maxd0cut = cms.double(0.3),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    d0cutb = cms.double(0.5),
    checkTrackPropagation = cms.bool(False),
    usePFClusters = cms.bool(True),
    vertexMaxDZ = cms.double(0.2),
    deltaRShower = cms.double(0.01),
    chi2_max = cms.double(5),
    maxpt_eta25 = cms.double(0.0),
    noHF = cms.bool(False),
    track_algos = cms.vint32(),
    ptErr_tight_max = cms.double(0.2),
    InputType = cms.string('CaloMET:Electron:Muon:Track'),
    maxTrackAlgo = cms.int32(8),
    nLayers = cms.int32(0),
    METType = cms.string('TCMET'),
    correctShowerTracks = cms.bool(False),
    vetoDuplicates = cms.bool(False),
    pt_max = cms.double(100.0),
    radius = cms.double(130.0),
    nhits_tight_min = cms.double(9),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    dupDCotTh = cms.double(0.0006),
    globalThreshold = cms.double(0.0),
    usedeltaRRejection = cms.bool(False),
    src = cms.InputTag("towerMaker"),
    trackInputTag = cms.InputTag("generalTracks"),
    dupDPhi = cms.double(0.03),
    electronInputTag = cms.InputTag("gsfElectrons"),
    tcmetDepValueMap = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    d0cuta = cms.double(0.015),
    hOverECut = cms.double(0.1),
    electronVetoCone = cms.bool(True),
    muonDepValueMap = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metInputTag = cms.InputTag("met"),
    usePvtxd0 = cms.bool(False),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    alias = cms.string('TCMET'),
    zdist = cms.double(314.0),
    nhits_min = cms.double(6),
    eVetoDeltaR = cms.double(0.015),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    rf_type = cms.int32(1),
    nMinOuterHits = cms.int32(2),
    track_quality = cms.vint32(2),
    isCosmics = cms.bool(False),
    eVetoMinElectronPt = cms.double(10.0)
)


process.tcRecoTauProducer = cms.EDProducer("TCRecoTauProducer",
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)


process.tevMuons = cms.EDProducer("TevMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    RefitIndex = cms.vint32(1, 2, 3, 4),
    RefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        MuonHitsOption = cms.int32(1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        Chi2ProbabilityCut = cms.double(30.0),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        DYTthrs = cms.vint32(10, 5),
        RefitRPCHits = cms.bool(True),
        Chi2CutDT = cms.double(30.0),
        PtCut = cms.double(1.0),
        SkipStation = cms.int32(-1)
    ),
    Refits = cms.vstring('default', 
        'firstHit', 
        'picky', 
        'dyt'),
    MuonCollectionLabel = cms.InputTag("globalMuons")
)


process.tobTecStepClusters = cms.EDProducer("TrackClusterRemover",
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    trajectories = cms.InputTag("pixelLessStepTracks"),
    oldClusterRemovalInfo = cms.InputTag("pixelLessStepClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag("pixelLessStepSelector","pixelLessStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.tobTecStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('tobTecStepSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(6.0),
            ptMin = cms.double(0.6),
            originHalfLength = cms.double(30.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.tobTecStepSelector = cms.EDProducer("MultiTrackSelector",
    src = cms.InputTag("tobTecStepTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        max_d0 = cms.double(100.0),
        minNumber3DLayers = cms.uint32(2),
        applyAbsCutsIfNoPV = cms.bool(False),
        qualityBit = cms.string('loose'),
        minNumberLayers = cms.uint32(5),
        chi2n_par = cms.double(0.4),
        nSigmaZ = cms.double(4.0),
        dz_par2 = cms.vdouble(1.8, 4.0),
        applyAdaptedPVCuts = cms.bool(True),
        dz_par1 = cms.vdouble(1.8, 4.0),
        copyTrajectories = cms.untracked.bool(False),
        vtxNumber = cms.int32(-1),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(1),
        max_relpterr = cms.double(9999.0),
        copyExtras = cms.untracked.bool(True),
        vertexCut = cms.string('ndof>=2&!isFake'),
        max_z0 = cms.double(100.0),
        min_nhits = cms.uint32(0),
        name = cms.string('tobTecStepLoose'),
        chi2n_no1Dmod_par = cms.double(9999),
        res_par = cms.vdouble(0.003, 0.001),
        d0_par2 = cms.vdouble(2.0, 4.0),
        d0_par1 = cms.vdouble(2.0, 4.0),
        preFilterName = cms.string(''),
        minHitsToBypassChecks = cms.uint32(20)
    ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(2),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('tight'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.3),
            dz_par1 = cms.vdouble(1.4, 4.0),
            dz_par2 = cms.vdouble(1.4, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('tobTecStepTight'),
            chi2n_no1Dmod_par = cms.double(9999),
            preFilterName = cms.string('tobTecStepLoose'),
            d0_par2 = cms.vdouble(1.5, 4.0),
            d0_par1 = cms.vdouble(1.5, 4.0),
            res_par = cms.vdouble(0.003, 0.001),
            minHitsToBypassChecks = cms.uint32(20)
        ), 
        cms.PSet(
            max_d0 = cms.double(100.0),
            minNumber3DLayers = cms.uint32(2),
            applyAbsCutsIfNoPV = cms.bool(False),
            qualityBit = cms.string('highPurity'),
            minNumberLayers = cms.uint32(5),
            chi2n_par = cms.double(0.2),
            nSigmaZ = cms.double(4.0),
            dz_par2 = cms.vdouble(1.3, 4.0),
            applyAdaptedPVCuts = cms.bool(True),
            dz_par1 = cms.vdouble(1.3, 4.0),
            copyTrajectories = cms.untracked.bool(False),
            vtxNumber = cms.int32(-1),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_relpterr = cms.double(9999.0),
            copyExtras = cms.untracked.bool(True),
            vertexCut = cms.string('ndof>=2&!isFake'),
            max_z0 = cms.double(100.0),
            min_nhits = cms.uint32(0),
            name = cms.string('tobTecStep'),
            chi2n_no1Dmod_par = cms.double(9999),
            res_par = cms.vdouble(0.003, 0.001),
            d0_par2 = cms.vdouble(1.4, 4.0),
            d0_par1 = cms.vdouble(1.4, 4.0),
            preFilterName = cms.string('tobTecStepTight'),
            minHitsToBypassChecks = cms.uint32(20)
        )),
    beamspot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("pixelVertices"),
    useVtxError = cms.bool(False),
    useVertices = cms.bool(True)
)


process.tobTecStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("tobTecStepSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    TrajectoryBuilder = cms.string('tobTecStepTrajectoryBuilder'),
    numHitsForSeedCleaner = cms.int32(50)
)


process.tobTecStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("tobTecStepTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('tobTecFlexibleKFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter6'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.towerMaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HBThreshold = cms.double(0.7),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.8),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.towerMakerPF = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HBThreshold = cms.double(0.4),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.4),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(1.8),
    HcalAcceptSeverityLevel = cms.uint32(11),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(0.8),
    HOThresholdPlus2 = cms.double(0.8),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(1.2),
    HOThresholdMinus1 = cms.double(0.8),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.4),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(0.8),
    HOThreshold0 = cms.double(0.2),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.towerMakerWithHO = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    MomEEDepth = cms.double(0.0),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    HBThreshold = cms.double(0.7),
    EBThreshold = cms.double(0.07),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HESWeight = cms.double(1.0),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring('kTime', 
        'kWeird', 
        'kBad'),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.trackCountingHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D2nd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackCountingHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D3rd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackExtrapolator = cms.EDProducer("TrackExtrapolator",
    trackQuality = cms.string('goodIterative'),
    trackSrc = cms.InputTag("generalTracks")
)


process.trackRefsForJets = cms.EDProducer("ChargedRefCandidateProducer",
    src = cms.InputTag("trackWithVertexRefSelector"),
    particleType = cms.string('pi+')
)


process.trackerDrivenElectronSeeds = cms.EDProducer("GoodSeedProducer",
    HOverPLead_maxValue = cms.double(0.05),
    MaxEOverP = cms.double(3.0),
    Smoother = cms.string('GsfTrajectorySmoother_forPreId'),
    PtThresholdSavePreId = cms.untracked.double(1.0),
    UseQuality = cms.bool(True),
    EOverPLead_minValue = cms.double(0.95),
    ProducePreId = cms.untracked.bool(True),
    PFPSClusterLabel = cms.InputTag("particleFlowClusterPS"),
    ApplyIsolation = cms.bool(False),
    TMVAMethod = cms.string('BDT'),
    MaxEta = cms.double(2.4),
    PFHcalClusterLabel = cms.InputTag("particleFlowClusterHCAL"),
    EtaMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_eta.dat'),
    PhiMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_phi.dat'),
    EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
    PreCkfLabel = cms.string('SeedsForCkf'),
    NHitsInSeed = cms.int32(3),
    Fitter = cms.string('GsfTrajectoryFitter_forPreId'),
    ThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/Threshold.dat'),
    UsePreShower = cms.bool(False),
    MinEOverP = cms.double(0.3),
    PreIdLabel = cms.string('preid'),
    PreGsfLabel = cms.string('SeedsForGsf'),
    EcalStripSumE_minClusEnergy = cms.double(0.1),
    EcalStripSumE_deltaEta = cms.double(0.03),
    PFEcalClusterLabel = cms.InputTag("particleFlowClusterECAL"),
    PSThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/PSThreshold.dat'),
    MinPt = cms.double(2.0),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    UseTMVA = cms.untracked.bool(True),
    HcalWindow = cms.double(0.184),
    TrackQuality = cms.string('highPurity'),
    Weights = cms.string('RecoParticleFlow/PFTracking/data/BDT_weights_21.txt'),
    MaxPt = cms.double(50.0),
    EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
    ClusterThreshold = cms.double(0.5)
)


process.tripletElectronClusterMask = cms.EDProducer("SeedClusterRemover",
    trajectories = cms.InputTag("tripletElectronSeeds"),
    oldClusterRemovalInfo = cms.InputTag("pixelLessStepSeedClusterMask"),
    stripClusters = cms.InputTag("siStripClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True)
)


process.tripletElectronSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('none')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('tripletElectronSeedLayers')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(150000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(20000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(0.02),
            nSigmaZ = cms.double(4.0),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(1.0)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.uncleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    eThreshA = cms.double(0.003),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    clustershapecollection = cms.string(''),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    RecHitSeverityToBeExcluded = cms.vstring(),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    HybridBarrelSeedThr = cms.double(1.0),
    dynamicPhiRoad = cms.bool(False),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    RecHitFlagToBeExcluded = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    useEtForXi = cms.bool(True),
    step = cms.int32(17),
    eThreshB = cms.double(0.1),
    xi = cms.double(0.0),
    eseed = cms.double(0.35),
    ecalhitproducer = cms.string('ecalRecHit'),
    dynamicEThresh = cms.bool(False),
    ecalhitcollection = cms.string('EcalRecHitsEB'),
    excludeFlagged = cms.bool(False),
    superclusterCollection = cms.string('')
)


process.uncleanedOnlyAllConversions = cms.EDProducer("ConversionProducer",
    bypassPreselGsf = cms.bool(True),
    AllowD0 = cms.bool(True),
    dEtaTrackBC = cms.double(0.2),
    convertedPhotonCollection = cms.string(''),
    AllowRightBC = cms.bool(False),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridSuperClusters"),
    scEndcapProducer = cms.InputTag("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower"),
    MaxChi2Right = cms.double(10.0),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    vtxChi2 = cms.double(0.0005),
    maxTrackRho = cms.double(120.0),
    d0 = cms.double(0.0),
    bypassPreselEcal = cms.bool(False),
    dPhicutForSCmatching = cms.double(0.05),
    AllowOppCharge = cms.bool(True),
    bcEndcapCollection = cms.InputTag("multi5x5SuperClusters","uncleanOnlyMulti5x5EndcapBasicClusters"),
    deltaEta = cms.double(0.4),
    maxDelta = cms.double(0.01),
    HalfwayEta = cms.double(0.1),
    MinApproachLow = cms.double(-0.25),
    AllowDeltaPhi = cms.bool(False),
    maxReducedChiSq = cms.double(225.0),
    maxTrackZ = cms.double(300.0),
    maxNumOfTrackInPU = cms.int32(999999),
    MinApproachHigh = cms.double(1.0),
    AllowSingleLeg = cms.bool(False),
    AllowVertex = cms.bool(True),
    dEtacutForSCmatching = cms.double(0.03),
    DeltaPhi = cms.double(0.2),
    MinHitsRight = cms.int32(2),
    dz = cms.double(5.0),
    maxNbrOfIterations = cms.int32(40),
    AllowDeltaCot = cms.bool(True),
    EnergyBC = cms.double(0.3),
    MinHitsLeft = cms.int32(4),
    DeltaCotTheta = cms.double(0.1),
    src = cms.InputTag("uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger"),
    EnergyTotalBC = cms.double(0.3),
    UsePvtx = cms.bool(True),
    bypassPreselEcalEcal = cms.bool(True),
    minSCEt = cms.double(10.0),
    AllowTrackBC = cms.bool(False),
    rCut = cms.double(2.0),
    minChiSqImprovement = cms.double(50.0),
    dPhiTrackBC = cms.double(1.0),
    MaxChi2Left = cms.double(10.0),
    AlgorithmName = cms.string('mixed'),
    scBarrelProducer = cms.InputTag("uncleanedOnlyCorrectedHybridSuperClusters"),
    AllowMinApproach = cms.bool(True)
)


process.uncleanedOnlyCkfInOutTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("uncleanedOnlyConversionTrackCandidates","inOutTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('uncleanedOnlyConversionTrackCandidates'),
    Fitter = cms.string('KFFittingSmootherForInOut'),
    ComponentName = cms.string('uncleanedOnlyCkfInOutTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    trackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('inOutEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('inOutTrackSCAssociationCollection')
)


process.uncleanedOnlyCkfOutInTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("uncleanedOnlyConversionTrackCandidates","outInTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('uncleanedOnlyConversionTrackCandidates'),
    Fitter = cms.string('KFFitterForOutIn'),
    ComponentName = cms.string('uncleanedOnlyCkfOutInTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    trackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('outInEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('outInTrackSCAssociationCollection')
)


process.uncleanedOnlyConversionTrackCandidates = cms.EDProducer("ConversionTrackCandidateProducer",
    RecHitSeverityToBeExcludedEE = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    scHybridBarrelProducer = cms.InputTag("uncleanedOnlyCorrectedHybridSuperClusters"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('alongMomElePropagator'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('oppositeToMomElePropagator')
    ),
    inOutTrackCandidateCollection = cms.string('inOutTracksFromConversions'),
    RecHitSeverityToBeExcludedEB = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    useHitsSplitting = cms.bool(False),
    outInTrackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    ValidHitBonus = cms.double(5.0),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    vetoClusteredHits = cms.bool(False),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower"),
    ecalIsoCut_offset = cms.double(999999999),
    hcalTowers = cms.InputTag("towerMaker"),
    RecHitFlagToBeExcludedEB = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    isoEMin = cms.double(0.08),
    isoEtaSlice = cms.double(2.5),
    maxHOverE = cms.double(0.15),
    maxNumOfSeedsOutIn = cms.int32(50),
    bcEndcapCollection = cms.InputTag("multi5x5SuperClusters","uncleanOnlyMulti5x5EndcapBasicClusters"),
    useNumXstals = cms.bool(True),
    RecHitFlagToBeExcludedEE = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    InOutRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    ecalIsoCut_slope = cms.double(0.0),
    maxNumOfSeedsInOut = cms.int32(50),
    isoEtMin = cms.double(0.0),
    fractionShared = cms.double(0.5),
    minSCEt = cms.double(20.0),
    MissingHitPenalty = cms.double(20.0),
    OutInRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    MeasurementTrackerName = cms.string(''),
    outInTrackCandidateCollection = cms.string('outInTracksFromConversions'),
    hOverEConeSize = cms.double(0.15),
    inOutTrackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isoInnerConeR = cms.double(3.5),
    isoConeR = cms.double(0.4),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForConversions'),
    allowSharedFirstHit = cms.bool(True)
)


process.uncleanedOnlyCorrectedHybridSuperClusters = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    modeEE = cms.int32(0),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Hybrid'),
    modeEB = cms.int32(0),
    applyLocalContCorrection = cms.bool(True),
    rawSuperClusterProducer = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridSuperClusters"),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    applyEnergyCorrection = cms.bool(True),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    applyCrackCorrection = cms.bool(True),
    etThresh = cms.double(0.0),
    hyb_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(1.1),
        fEtEtaVec = cms.vdouble(0, 1.00121, -0.63672, 0, 0, 
            0, 0.5655, 6.457, 0.5081, 8.0, 
            1.023, -0.00181),
        brLinearHighThr = cms.double(8.0),
        fBremVec = cms.vdouble(-0.04382, 0.1169, 0.9267, -0.0009413, 1.419)
    ),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    modeEE = cms.int32(0),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Multi5x5'),
    modeEB = cms.int32(0),
    applyLocalContCorrection = cms.bool(False),
    rawSuperClusterProducer = cms.InputTag("uncleanedOnlyMulti5x5SuperClustersWithPreshower"),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    applyEnergyCorrection = cms.bool(True),
    fix_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(0.9),
        fEtEtaVec = cms.vdouble(1, -0.4386, -32.38, 0.6372, 15.67, 
            -0.0928, -2.462, 1.138, 20.93),
        brLinearHighThr = cms.double(6.0),
        fBremVec = cms.vdouble(-0.05228, 0.08738, 0.9508, 0.002677, 1.221)
    ),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    etThresh = cms.double(0.0),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.uncleanedOnlyElectronCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("uncleanedOnlyElectronSeeds"),
    maxSeedsBeforeCleaning = cms.uint32(1000),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    TrajectoryCleaner = cms.string('electronTrajectoryCleanerBySharedHits'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForElectrons')
)


process.uncleanedOnlyElectronGsfTracks = cms.EDProducer("GsfTrackProducer",
    src = cms.InputTag("uncleanedOnlyElectronCkfTrackCandidates"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('gsf'),
    Propagator = cms.string('fwdGsfElectronPropagator')
)


process.uncleanedOnlyElectronSeeds = cms.EDProducer("ElectronSeedProducer",
    endcapSuperClusters = cms.InputTag("uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower"),
    SeedConfiguration = cms.PSet(
        PhiMax2B = cms.double(0.002),
        hOverEPtMin = cms.double(0.0),
        PhiMax2F = cms.double(0.003),
        searchInTIDTEC = cms.bool(True),
        PhiMin2F = cms.double(-0.003),
        deltaZ1WithVertex = cms.double(25.0),
        HighPtThreshold = cms.double(35.0),
        r2MinF = cms.double(-0.15),
        maxHBarrel = cms.double(0.0),
        DeltaPhi1Low = cms.double(0.23),
        DeltaPhi1High = cms.double(0.08),
        ePhiMin1 = cms.double(-0.125),
        hcalTowers = cms.InputTag("towerMaker"),
        LowPtThreshold = cms.double(5.0),
        maxHOverEBarrel = cms.double(0.15),
        dynamicPhiRoad = cms.bool(True),
        ePhiMax1 = cms.double(0.075),
        measurementTrackerName = cms.string(''),
        SizeWindowENeg = cms.double(0.675),
        nSigmasDeltaZ1 = cms.double(5.0),
        rMaxI = cms.double(0.2),
        maxHEndcaps = cms.double(0.0),
        preFilteredSeeds = cms.bool(False),
        r2MaxF = cms.double(0.15),
        maxHOverEEndcaps = cms.double(0.15),
        pPhiMin1 = cms.double(-0.075),
        initialSeeds = cms.InputTag("newCombinedSeeds"),
        pPhiMax1 = cms.double(0.125),
        SCEtCut = cms.double(4.0),
        z2MaxB = cms.double(0.09),
        fromTrackerSeeds = cms.bool(True),
        hcalRecHits = cms.InputTag("hbhereco"),
        z2MinB = cms.double(-0.09),
        rMinI = cms.double(-0.2),
        hOverEConeSize = cms.double(0.15),
        hOverEHBMinE = cms.double(0.7),
        useRecoVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
        DeltaPhi2F = cms.double(0.012),
        applyHOverECut = cms.bool(True),
        hOverEHFMinE = cms.double(0.8),
        DeltaPhi2B = cms.double(0.008),
        PhiMin2B = cms.double(-0.002)
    ),
    barrelSuperClusters = cms.InputTag("uncleanedOnlyCorrectedHybridSuperClusters")
)


process.uncleanedOnlyGeneralConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('generalTracks'),
    filterOnConvTrackHyp = cms.bool(True),
    setTrackerOnly = cms.bool(True),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.uncleanedOnlyGeneralInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    minProb = cms.double(1e-06),
    allowFirstHitShare = cms.bool(True),
    arbitratedMergedPreferCollection = cms.int32(3),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(2),
    TrackProducer2 = cms.string('uncleanedOnlyGeneralConversionTrackProducer'),
    TrackProducer1 = cms.string('uncleanedOnlyInOutOutInConversionTrackMerger')
)


process.uncleanedOnlyGsfConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    setArbitratedMergedEcalGeneral = cms.bool(False),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('uncleanedOnlyElectronGsfTracks'),
    filterOnConvTrackHyp = cms.bool(False),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.uncleanedOnlyGsfElectronCores = cms.EDProducer("GsfElectronCoreEcalDrivenProducer",
    ctfTracks = cms.InputTag("generalTracks"),
    gsfTracks = cms.InputTag("uncleanedOnlyElectronGsfTracks"),
    gsfPfRecTracks = cms.InputTag("uncleanedOnlyPfTrackElec"),
    useGsfPfRecTracks = cms.bool(True)
)


process.uncleanedOnlyGsfElectrons = cms.EDProducer("GsfElectronEcalDrivenProducer",
    hOverEPtMin = cms.double(0.0),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxHBarrelPflow = cms.double(0.0),
    minSCEtBarrel = cms.double(4.0),
    recHitSeverityToBeExcludedBarrel = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    etMinEndcaps = cms.double(0.11),
    gsfPfRecTracksTag = cms.InputTag("uncleanedOnlyPfTrackElec"),
    minEOverPBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    eMinBarrel = cms.double(0.095),
    isFiducial = cms.bool(False),
    maxDeltaEtaEndcaps = cms.double(0.02),
    minEOverPBarrel = cms.double(0.0),
    maxVtxDistTk = cms.double(0.2),
    maxFbremBarrel = cms.double(999999999.0),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    applyAmbResolution = cms.bool(False),
    minMVAPflow = cms.double(-0.4),
    ctfTracksTag = cms.InputTag("generalTracks"),
    hOverEConeSizePflow = cms.double(0.15),
    recHitSeverityToBeExcludedEndcaps = cms.vstring('kWeird', 
        'kBad', 
        'kTime'),
    minSCEtEndcaps = cms.double(4.0),
    ambSortingStrategy = cms.uint32(1),
    etMinHcal = cms.double(0.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    pfMvaTag = cms.InputTag(""),
    pflowGsfElectronsTag = cms.InputTag(""),
    maxHBarrel = cms.double(0.0),
    intRadiusEcalBarrel = cms.double(3.0),
    recHitFlagsToBeExcludedEndcaps = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kSaturated', 
        'kLeadingEdgeRecovered', 
        'kNeighboursRecovered', 
        'kTowerRecovered', 
        'kDead', 
        'kWeird'),
    minEOverPEndcapsPflow = cms.double(0.0),
    eMinEndcaps = cms.double(0.0),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    useNumCrystals = cms.bool(True),
    addPflowElectrons = cms.bool(True),
    ctfTracksCheck = cms.bool(True),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    stripEndcapTk = cms.double(0.015),
    isEndcaps = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxEOverPBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    hOverEConeSize = cms.double(0.15),
    maxDrbTk = cms.double(999999999.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    minSCEtBarrelPflow = cms.double(0.0),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minMvaByPassForIsolatedPflow = cms.double(-0.4),
    vetoClustered = cms.bool(False),
    hcalTowers = cms.InputTag("towerMaker"),
    etMinBarrel = cms.double(0.0),
    intRadiusHcal = cms.double(0.15),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEEndcaps = cms.double(0.15),
    isBarrel = cms.bool(False),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    isBarrelPflow = cms.bool(False),
    minSCEtEndcapsPflow = cms.double(0.0),
    previousGsfElectronsTag = cms.InputTag(""),
    stripBarrelTk = cms.double(0.015),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxDeltaEtaBarrel = cms.double(0.02),
    ambClustersOverlapStrategy = cms.uint32(1),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    ptMinTk = cms.double(0.7),
    intRadiusEcalEndcaps = cms.double(3.0),
    minEOverPEndcaps = cms.double(0.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    jurassicWidth = cms.double(1.5),
    minMvaByPassForIsolated = cms.double(-0.4),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    intRadiusEndcapTk = cms.double(0.015),
    applyPreselection = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    minMVA = cms.double(-0.4),
    useGsfPfRecTracks = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("uncleanedOnlyGsfElectronCores"),
    isFiducialPflow = cms.bool(False),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    seedsTag = cms.InputTag("uncleanedOnlyElectronSeeds"),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    hOverEPtMinPflow = cms.double(0.0),
    recHitFlagsToBeExcludedBarrel = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    intRadiusBarrelTk = cms.double(0.015)
)


process.uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    minProb = cms.double(1e-06),
    allowFirstHitShare = cms.bool(True),
    arbitratedMergedPreferCollection = cms.int32(2),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(-1),
    TrackProducer2 = cms.string('uncleanedOnlyGsfConversionTrackProducer'),
    TrackProducer1 = cms.string('uncleanedOnlyGeneralInOutOutInConversionTrackMerger')
)


process.uncleanedOnlyInOutConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('uncleanedOnlyCkfInOutTracksFromConversions'),
    filterOnConvTrackHyp = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.uncleanedOnlyInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    minProb = cms.double(1e-06),
    allowFirstHitShare = cms.bool(True),
    arbitratedMergedPreferCollection = cms.int32(3),
    arbitratedEcalSeededPreferCollection = cms.int32(3),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(3),
    TrackProducer2 = cms.string('uncleanedOnlyOutInConversionTrackProducer'),
    TrackProducer1 = cms.string('uncleanedOnlyInOutConversionTrackProducer')
)


process.uncleanedOnlyMulti5x5SuperClustersWithPreshower = cms.EDProducer("PreshowerClusterProducer",
    assocSClusterCollection = cms.string(''),
    preshStripEnergyCut = cms.double(0.0),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    etThresh = cms.double(0.0),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","uncleanOnlyMulti5x5EndcapSuperClusters"),
    preshNclust = cms.int32(4),
    preshClusterEnergyCut = cms.double(0.0),
    preshSeededNstrip = cms.int32(15)
)


process.uncleanedOnlyOutInConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    minConvRadius = cms.double(2.0),
    TrackProducer = cms.string('uncleanedOnlyCkfOutInTracksFromConversions'),
    filterOnConvTrackHyp = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    setArbitratedMerged = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.uncleanedOnlyPfConversions = cms.EDProducer("PFConversionProducer",
    conversionCollection = cms.InputTag("allConversions"),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices")
)


process.uncleanedOnlyPfTrack = cms.EDProducer("PFTrackProducer",
    TrajInEvents = cms.bool(False),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    GsfTracksInEvents = cms.bool(True),
    UseQuality = cms.bool(True),
    GsfTrackModuleLabel = cms.InputTag("uncleanedOnlyElectronGsfTracks"),
    TrackQuality = cms.string('highPurity'),
    MuColl = cms.InputTag("muons1stStep")
)


process.uncleanedOnlyPfTrackElec = cms.EDProducer("PFElecTkProducer",
    TrajInEvents = cms.bool(False),
    maxDPhiBremTangGsfAngularCleaning = cms.double(0.05),
    PFConversions = cms.InputTag("uncleanedOnlyPfConversions"),
    useConversions = cms.bool(False),
    MinSCEnergy = cms.double(4.0),
    PFEcalClusters = cms.InputTag("particleFlowClusterECAL"),
    ModeMomentum = cms.bool(True),
    Propagator = cms.string('fwdElectronPropagator'),
    useV0 = cms.bool(False),
    pf_convBremFinderID_mvaWeightFile = cms.string('RecoParticleFlow/PFTracking/data/MVAnalysis_BDT.weights_convBremFinder_19Apr_IntToFloat.txt'),
    useFifthStepForEcalDrivenGsf = cms.bool(False),
    GsfTrackModuleLabel = cms.InputTag("uncleanedOnlyElectronGsfTracks"),
    MinDPhiGsfSC = cms.double(0.15),
    applyEGSelection = cms.bool(False),
    useNuclear = cms.bool(False),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    applyGsfTrackCleaning = cms.bool(True),
    MinDEtaGsfSC = cms.double(0.06),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    useConvBremFinder = cms.bool(True),
    debugGsfCleaning = cms.bool(False),
    applyAlsoGsfAngularCleaning = cms.bool(True),
    PFV0 = cms.InputTag("pfV0"),
    pf_convBremFinderID_mvaCut = cms.double(0.2),
    useFifthStepForTrackerDrivenGsf = cms.bool(False),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    MaxConvBremRecoPT = cms.double(49.0),
    maxDEtaGsfAngularCleaning = cms.double(0.05),
    TTRHBuilder = cms.string('WithTrackAngle'),
    PFRecTrackLabel = cms.InputTag("uncleanedOnlyPfTrack")
)


process.valCscTriggerPrimitiveDigis = cms.EDProducer("CSCTriggerPrimitivesProducer",
    clctParamMTCC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(4),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(1)
    ),
    MaxBX = cms.int32(9),
    CSCComparatorDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCComparatorDigi"),
    alctParamMTCC = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(3),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    clctParamOldMC = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(2),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(4)
    ),
    MinBX = cms.int32(3),
    tmbParam = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        verbosity = cms.untracked.int32(0),
        clctTrigEnable = cms.uint32(0),
        tmbL1aWindowSize = cms.uint32(7),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        matchTrigEnable = cms.uint32(1)
    ),
    commonParam = cms.PSet(
        isTMB07 = cms.bool(True),
        isMTCC = cms.bool(False)
    ),
    CSCWireDigiProducer = cms.InputTag("muonCSCDigis","MuonCSCWireDigi"),
    alctParam07 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(7),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(2),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    alctParamOldMC = cms.PSet(
        alctAccelMode = cms.uint32(1),
        alctTrigMode = cms.uint32(3),
        verbosity = cms.untracked.int32(0),
        alctL1aWindowWidth = cms.uint32(5),
        alctNplanesHitAccelPretrig = cms.uint32(2),
        alctDriftDelay = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctFifoTbins = cms.uint32(16),
        alctNplanesHitPretrig = cms.uint32(2),
        alctFifoPretrig = cms.uint32(10)
    ),
    clctParam07 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctMinSeparation = cms.uint32(10),
        clctPidThreshPretrig = cms.uint32(2),
        clctFifoTbins = cms.uint32(12),
        verbosity = cms.untracked.int32(0),
        clctNplanesHitPretrig = cms.uint32(2),
        clctHitPersist = cms.uint32(6),
        clctFifoPretrig = cms.uint32(7),
        clctNplanesHitPattern = cms.uint32(4)
    )
)


process.valCsctfDigis = cms.EDProducer("CSCTFCandidateProducer",
    CSCTrackProducer = cms.untracked.InputTag("valCsctfTrackDigis"),
    MuonSorter = cms.PSet(
        MaxBX = cms.int32(9),
        MinBX = cms.int32(3)
    )
)


process.valCsctfTrackDigis = cms.EDProducer("CSCTFTrackProducer",
    isTMB07 = cms.bool(True),
    useDT = cms.bool(True),
    SectorReceiverInput = cms.untracked.InputTag("csctfDigis"),
    DtDirectProd = cms.untracked.InputTag("csctfunpacker","DT"),
    readDtDirect = cms.bool(False),
    DTproducer = cms.untracked.InputTag("dttfDigis"),
    SectorProcessor = cms.PSet(
        MaxBX = cms.int32(9),
        MinBX = cms.int32(3),
        maxdphi13_accp = cms.uint32(64),
        SRLUT = cms.PSet(
            UseMiniLUTs = cms.untracked.bool(True),
            ReadLUTs = cms.untracked.bool(False),
            LUTPath = cms.untracked.string('./'),
            Binary = cms.untracked.bool(False)
        ),
        mindphip_halo = cms.uint32(128),
        AllowALCTonly = cms.bool(False),
        PTLUT = cms.PSet(
            LowQualityFlag = cms.untracked.uint32(4),
            ReadPtLUT = cms.bool(False),
            PtMethod = cms.untracked.uint32(29)
        ),
        QualityEnableME1b = cms.uint32(65535),
        QualityEnableME1c = cms.uint32(65535),
        QualityEnableME1a = cms.uint32(65535),
        QualityEnableME1f = cms.uint32(65535),
        QualityEnableME1d = cms.uint32(65535),
        QualityEnableME1e = cms.uint32(65535),
        QualityEnableME3a = cms.uint32(65535),
        QualityEnableME3b = cms.uint32(65535),
        QualityEnableME3c = cms.uint32(65535),
        maxdphi112_accp = cms.uint32(64),
        rescaleSinglesPhi = cms.bool(True),
        mindeta112_accp = cms.uint32(14),
        maxdeta113_accp = cms.uint32(38),
        maxdeta13_accp = cms.uint32(27),
        maxdphi113_accp = cms.uint32(64),
        EtaMin = cms.vuint32(0, 0, 0, 0, 0, 
            0, 0, 0),
        mindeta12_accp = cms.uint32(12),
        firmwareSP = cms.uint32(20120319),
        maxdphi12_accp = cms.uint32(64),
        trigger_on_ME1a = cms.bool(False),
        mbbPhiOff = cms.uint32(1982),
        mbaPhiOff = cms.uint32(0),
        EtaMax = cms.vuint32(127, 127, 127, 127, 127, 
            24, 24, 127),
        CoreLatency = cms.uint32(7),
        PreTrigger = cms.uint32(2),
        mindetap = cms.uint32(7),
        trigger_on_MB1d = cms.bool(False),
        maxdeta112_accp = cms.uint32(29),
        mindeta13_accp = cms.uint32(13),
        run_core = cms.bool(True),
        firmwareFA = cms.uint32(20091026),
        trigger_on_MB1a = cms.bool(False),
        firmwareDD = cms.uint32(20091026),
        QualityEnableME2c = cms.uint32(65535),
        EtaWindows = cms.vuint32(4, 4, 6, 6, 6, 
            6, 6),
        QualityEnableME2a = cms.uint32(65535),
        trigger_on_ME4 = cms.bool(False),
        initializeFromPSet = cms.bool(False),
        maxdeta12_accp = cms.uint32(17),
        QualityEnableME4a = cms.uint32(65535),
        QualityEnableME4c = cms.uint32(65535),
        straightp = cms.uint32(19),
        gangedME1a = cms.untracked.bool(True),
        trigger_on_ME1b = cms.bool(False),
        AllowCLCTonly = cms.bool(False),
        QualityEnableME4b = cms.uint32(65535),
        widePhi = cms.uint32(0),
        mindetap_halo = cms.uint32(8),
        curvedp = cms.uint32(15),
        singlesTrackOutput = cms.uint32(1),
        isCoreVerbose = cms.bool(False),
        mindphip = cms.uint32(180),
        mindeta113_accp = cms.uint32(21),
        kill_fiber = cms.uint32(0),
        firmwareVM = cms.uint32(20091026),
        trigger_on_ME2 = cms.bool(False),
        BXAdepth = cms.uint32(2),
        trigger_on_ME3 = cms.bool(False),
        QualityEnableME2b = cms.uint32(65535)
    )
)


process.valDtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    lutDumpFlag = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    lutBtic = cms.untracked.int32(31),
    digiTag = cms.InputTag("muonDTDigis"),
    DTTFSectorNumbering = cms.bool(True)
)


process.valDttfDigis = cms.EDProducer("DTTrackFinder",
    Open_LUTs = cms.untracked.bool(False),
    Extrapolation_nbits_PhiB = cms.untracked.int32(8),
    BX_max = cms.untracked.int32(7),
    BX_min = cms.untracked.int32(-9),
    EtaTrackFinder = cms.untracked.bool(True),
    DTDigi_Source = cms.InputTag("dttfDigis"),
    CSCStub_Source = cms.InputTag("valCsctfTrackDigis"),
    Extrapolation_Filter = cms.untracked.int32(1),
    PT_Assignment_nbits_Phi = cms.untracked.int32(12),
    Overlap = cms.untracked.bool(True),
    PT_Assignment_nbits_PhiB = cms.untracked.int32(10),
    Extrapolation_nbits_Phi = cms.untracked.int32(8),
    Extrapolation_21 = cms.untracked.bool(False),
    PHI_Assignment_nbits_PhiB = cms.untracked.int32(10),
    Debug = cms.untracked.int32(0),
    OutOfTime_Filter = cms.untracked.bool(False),
    PHI_Assignment_nbits_Phi = cms.untracked.int32(10),
    CSC_Eta_Cancellation = cms.untracked.bool(False),
    OutOfTime_Filter_Window = cms.untracked.int32(1)
)


process.valEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    InstanceEB = cms.string('ebDigis'),
    InstanceEE = cms.string('eeDigis'),
    binOfMaximum = cms.int32(6),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    Debug = cms.bool(False),
    Label = cms.string('ecalDigis')
)


process.valGctDigis = cms.EDProducer("L1GctEmulator",
    useImprovedTauAlgorithm = cms.bool(True),
    ignoreRCTTauVetoBitsForIsolation = cms.bool(False),
    postSamples = cms.uint32(0),
    preSamples = cms.uint32(0),
    inputLabel = cms.InputTag("gctDigis"),
    writeInternalData = cms.bool(False),
    jetFinderType = cms.string('hardwareJetFinder'),
    hardwareTest = cms.bool(False)
)


process.valGmtDigis = cms.EDProducer("L1MuGlobalMuonTrigger",
    BX_min_readout = cms.int32(-2),
    BX_min = cms.int32(-4),
    CSCCandidates = cms.InputTag("gtDigis","CSC"),
    BX_max = cms.int32(4),
    BX_max_readout = cms.int32(2),
    RPCfCandidates = cms.InputTag("gtDigis","RPCf"),
    Debug = cms.untracked.int32(0),
    RPCbCandidates = cms.InputTag("gtDigis","RPCb"),
    DTCandidates = cms.InputTag("gtDigis","DT"),
    WriteLUTsAndRegs = cms.untracked.bool(False),
    SendMipIso = cms.untracked.bool(False),
    MipIsoData = cms.InputTag("gctDigis")
)


process.valGtDigis = cms.EDProducer("L1GlobalTrigger",
    TechnicalTriggersUnprescaled = cms.bool(True),
    ProduceL1GtObjectMapRecord = cms.bool(True),
    AlgorithmTriggersUnmasked = cms.bool(False),
    EmulateBxInEvent = cms.int32(3),
    AlgorithmTriggersUnprescaled = cms.bool(True),
    ProduceL1GtDaqRecord = cms.bool(True),
    ReadTechnicalTriggerRecords = cms.bool(True),
    RecordLength = cms.vint32(3, 5),
    TechnicalTriggersUnmasked = cms.bool(False),
    ProduceL1GtEvmRecord = cms.bool(True),
    GmtInputTag = cms.InputTag("gtDigis"),
    TechnicalTriggersVetoUnmasked = cms.bool(True),
    AlternativeNrBxBoardEvm = cms.uint32(2),
    TechnicalTriggersInputTags = cms.VInputTag(cms.InputTag("valRpcTechTrigDigis"), cms.InputTag("valHcalTechTrigDigis")),
    CastorInputTag = cms.InputTag("castorL1Digis"),
    GctInputTag = cms.InputTag("gctDigis"),
    AlternativeNrBxBoardDaq = cms.uint32(257),
    WritePsbL1GtDaqRecord = cms.bool(True),
    BstLengthBytes = cms.int32(-1)
)


process.valHcalTTPDigis = cms.EDProducer("HcalTTPDigiProducer",
    iEtaMax = cms.int32(41),
    defTT10 = cms.string('hits>=3:hfp>=1:hfm>=1'),
    defTT9 = cms.string('hits>=2:hfp>=1:hfm>=1'),
    defTT8 = cms.string('hits>=2'),
    presamples = cms.int32(2),
    iEtaMin = cms.int32(33),
    fwAlgorithm = cms.int32(1),
    HFSoI = cms.int32(4),
    threshold = cms.uint32(2),
    id = cms.untracked.int32(101),
    samples = cms.int32(5),
    defTTLocal = cms.string('hits>=4'),
    HFDigiCollection = cms.InputTag("hcalDigis"),
    maskedChannels = cms.vuint32()
)


process.valHcalTechTrigDigis = cms.EDProducer("HcalTTPTriggerRecord",
    ttpBitNames = cms.vstring('L1Tech_HCAL_HF_MM_or_PP_or_PM.v0', 
        'L1Tech_HCAL_HF_coincidence_PM.v1', 
        'L1Tech_HCAL_HF_MMP_or_MPP.v0'),
    ttpDigiCollection = cms.InputTag("simHcalTTPDigis"),
    ttpBits = cms.vuint32(8, 9, 10)
)


process.valHcalTriggerPrimitiveDigis = cms.EDProducer("HcalTrigPrimDigiProducer",
    latency = cms.int32(1),
    MinSignalThreshold = cms.uint32(0),
    ZS_threshold = cms.uint32(1),
    PMTNoiseThreshold = cms.uint32(0),
    InputTagFEDRaw = cms.InputTag("source"),
    inputLabel = cms.VInputTag(cms.InputTag("hcalDigis"), cms.InputTag("hcalDigis")),
    numberOfPresamples = cms.int32(2),
    PeakFinderAlgorithm = cms.int32(2),
    numberOfSamples = cms.int32(4),
    weights = cms.vdouble(1.0, 1.0),
    RunZS = cms.bool(False),
    FG_threshold = cms.uint32(12),
    FrontEndFormatError = cms.bool(True),
    peakFilter = cms.bool(True)
)


process.valRctDigis = cms.EDProducer("L1RCTProducer",
    hcalDigis = cms.VInputTag(cms.InputTag("hcalDigis")),
    ecalDigis = cms.VInputTag(cms.InputTag("ecalDigis","EcalTriggerPrimitives")),
    getFedsFromOmds = cms.bool(False),
    queryDelayInLS = cms.uint32(10),
    queryIntervalInLS = cms.uint32(100),
    useEcal = cms.bool(True),
    useHcal = cms.bool(True),
    BunchCrossings = cms.vint32(0)
)


process.valRpcTechTrigDigis = cms.EDProducer("RPCTechnicalTrigger",
    BitNumbers = cms.vuint32(24, 25, 26, 27, 28, 
        29, 30),
    RPCDigiLabel = cms.InputTag("muonRPCDigis"),
    Verbosity = cms.untracked.int32(0),
    UseEventSetup = cms.untracked.int32(0),
    ConfigFile = cms.string('hardware-pseudoconfig.txt'),
    RPCSimLinkInstance = cms.InputTag("RPCDigiSimLink"),
    BitNames = cms.vstring('L1Tech_RPC_TTU_barrel_Cosmics/v0', 
        'L1Tech_RPC_TTU_pointing_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBplus2_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBplus1_Cosmics/v0', 
        'L1Tech_RPC_TTU_RB0_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBminus1_Cosmics/v0', 
        'L1Tech_RPC_TTU_RBminus2_Cosmics/v0'),
    UseRPCSimLink = cms.untracked.int32(0)
)


process.valRpcTriggerDigis = cms.EDProducer("RPCTrigger",
    label = cms.string('muonRPCDigis'),
    RPCTriggerDebug = cms.untracked.int32(0)
)


process.zdcreco = cms.EDProducer("ZdcHitReconstructor",
    digiLabel = cms.InputTag("hcalDigis"),
    setNoiseFlags = cms.bool(True),
    lowGainOffset = cms.int32(1),
    lowGainFrac = cms.double(8.15),
    correctionPhaseNS = cms.double(0.0),
    setSaturationFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    dropZSmarkedPassed = cms.bool(True),
    setHSCPFlags = cms.bool(True),
    Subdetector = cms.string('ZDC'),
    AuxTSvec = cms.vint32(4, 5, 6, 7),
    setTimingTrustFlags = cms.bool(False),
    recoMethod = cms.int32(2),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False)
)


process.ALCARECODtCalibCosmicsHLTFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlcaDtCalibCosmics'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    andOr = cms.bool(True)
)


process.ALCARECODtCalibHLTFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlcaDtCalibMu'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    andOr = cms.bool(True)
)


process.ALCARECOHcalCalHOCosmicHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('HcalCalHOCosmics'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOHcalCalHOHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('HcalCalHO'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOHltFilterForBS = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('PromptCalibProdForBS'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlBeamHalo = cms.EDFilter("AlignmentCSCBeamHaloSelectorModule",
    minHitsPerStation = cms.uint32(4),
    minStations = cms.uint32(0),
    filter = cms.bool(True),
    src = cms.InputTag("cosmicMuons")
)


process.ALCARECOMuAlBeamHaloDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(False),
    DetectorType = cms.vstring('CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlBeamHaloHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlBeamHalo'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlBeamHaloOverlaps = cms.EDFilter("AlignmentCSCOverlapSelectorModule",
    filter = cms.bool(True),
    src = cms.InputTag("ALCARECOMuAlBeamHaloOverlapsEnergyCut"),
    minHitsPerChamber = cms.uint32(4),
    station = cms.int32(0)
)


process.ALCARECOMuAlBeamHaloOverlapsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(False),
    DetectorType = cms.vstring('CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlBeamHaloOverlapsEnergyCut = cms.EDFilter("AlignmentCSCBeamHaloSelectorModule",
    minHitsPerStation = cms.uint32(4),
    minStations = cms.uint32(0),
    filter = cms.bool(True),
    src = cms.InputTag("cosmicMuons")
)


process.ALCARECOMuAlBeamHaloOverlapsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlBeamHaloOverlaps'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlCalIsolatedMu = cms.EDFilter("AlignmentMuonSelectorModule",
    chi2nMaxSA = cms.double(9999999.0),
    minMassPair = cms.double(89.0),
    nHitMaxGB = cms.double(9999999.0),
    applyMultiplicityFilter = cms.bool(False),
    pMin = cms.double(10.0),
    etaMin = cms.double(-2.4),
    nHitMaxTO = cms.double(9999999.0),
    etaMax = cms.double(2.4),
    pMax = cms.double(999999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    ptMin = cms.double(0.0),
    minMultiplicity = cms.int32(1),
    applyNHighestPt = cms.bool(False),
    nHitMaxSA = cms.double(9999999.0),
    ptMax = cms.double(999999.0),
    nHitMinSA = cms.double(0.0),
    chi2nMaxTO = cms.double(9999999.0),
    chi2nMaxGB = cms.double(9999999.0),
    nHighestPt = cms.int32(2),
    applyMassPairFilter = cms.bool(False),
    src = cms.InputTag("muons"),
    nHitMinGB = cms.double(0.0),
    filter = cms.bool(True),
    maxMassPair = cms.double(90.0),
    nHitMinTO = cms.double(0.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOMuAlCalIsolatedMuHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlCalIsolatedMu'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlGlobalCosmics = cms.EDFilter("AlignmentMuonSelectorModule",
    chi2nMaxSA = cms.double(9999999.0),
    minMassPair = cms.double(89.0),
    nHitMaxGB = cms.double(9999999.0),
    applyMultiplicityFilter = cms.bool(False),
    pMin = cms.double(0.0),
    etaMin = cms.double(-100.0),
    nHitMaxTO = cms.double(9999999.0),
    etaMax = cms.double(100.0),
    pMax = cms.double(999999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    ptMin = cms.double(10.0),
    minMultiplicity = cms.int32(1),
    applyNHighestPt = cms.bool(False),
    nHitMaxSA = cms.double(9999999.0),
    ptMax = cms.double(999999.0),
    nHitMinSA = cms.double(0.0),
    chi2nMaxTO = cms.double(9999999.0),
    chi2nMaxGB = cms.double(9999999.0),
    nHighestPt = cms.int32(2),
    applyMassPairFilter = cms.bool(False),
    src = cms.InputTag("muons"),
    nHitMinGB = cms.double(1),
    filter = cms.bool(True),
    maxMassPair = cms.double(90.0),
    nHitMinTO = cms.double(0.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOMuAlGlobalCosmicsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(False),
    DetectorType = cms.vstring('DT0', 
        'DTp', 
        'DTm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlGlobalCosmicsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlGlobalCosmics'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlGlobalCosmicsInCollisions = cms.EDFilter("AlignmentMuonSelectorModule",
    chi2nMaxSA = cms.double(9999999.0),
    minMassPair = cms.double(89.0),
    nHitMaxGB = cms.double(9999999.0),
    applyMultiplicityFilter = cms.bool(False),
    pMin = cms.double(0.0),
    etaMin = cms.double(-100.0),
    nHitMaxTO = cms.double(9999999.0),
    etaMax = cms.double(100.0),
    pMax = cms.double(999999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    ptMin = cms.double(10.0),
    minMultiplicity = cms.int32(1),
    applyNHighestPt = cms.bool(False),
    nHitMaxSA = cms.double(9999999.0),
    ptMax = cms.double(999999.0),
    nHitMinSA = cms.double(0.0),
    chi2nMaxTO = cms.double(9999999.0),
    chi2nMaxGB = cms.double(9999999.0),
    nHighestPt = cms.int32(2),
    applyMassPairFilter = cms.bool(False),
    src = cms.InputTag("muonsFromCosmics"),
    nHitMinGB = cms.double(1),
    filter = cms.bool(True),
    maxMassPair = cms.double(90.0),
    nHitMinTO = cms.double(0.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOMuAlGlobalCosmicsInCollisionsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(False),
    DetectorType = cms.vstring('DT0', 
        'DTp', 
        'DTm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlGlobalCosmicsInCollisionsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlGlobalCosmics'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlOverlaps = cms.EDFilter("AlignmentCSCOverlapSelectorModule",
    filter = cms.bool(True),
    src = cms.InputTag("ALCARECOMuAlOverlapsMuonSelector","StandAlone"),
    minHitsPerChamber = cms.uint32(4),
    station = cms.int32(0)
)


process.ALCARECOMuAlOverlapsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(False),
    DetectorType = cms.vstring('CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlOverlapsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlOverlaps'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlOverlapsMuonSelector = cms.EDFilter("AlignmentMuonSelectorModule",
    chi2nMaxSA = cms.double(9999999.0),
    minMassPair = cms.double(89.0),
    nHitMaxGB = cms.double(9999999.0),
    applyMultiplicityFilter = cms.bool(False),
    pMin = cms.double(0.0),
    etaMin = cms.double(-2.4),
    nHitMaxTO = cms.double(9999999.0),
    etaMax = cms.double(2.4),
    pMax = cms.double(999999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    ptMin = cms.double(3.0),
    minMultiplicity = cms.int32(1),
    applyNHighestPt = cms.bool(False),
    nHitMaxSA = cms.double(9999999.0),
    ptMax = cms.double(999999.0),
    nHitMinSA = cms.double(0.0),
    chi2nMaxTO = cms.double(9999999.0),
    chi2nMaxGB = cms.double(9999999.0),
    nHighestPt = cms.int32(2),
    applyMassPairFilter = cms.bool(False),
    src = cms.InputTag("muons"),
    nHitMinGB = cms.double(0.0),
    filter = cms.bool(True),
    maxMassPair = cms.double(90.0),
    nHitMinTO = cms.double(0.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOMuAlZMuMu = cms.EDFilter("AlignmentMuonSelectorModule",
    chi2nMaxSA = cms.double(9999999.0),
    minMassPair = cms.double(81.0),
    nHitMaxGB = cms.double(9999999.0),
    applyMultiplicityFilter = cms.bool(False),
    pMin = cms.double(0.0),
    etaMin = cms.double(-2.4),
    nHitMaxTO = cms.double(9999999.0),
    etaMax = cms.double(2.4),
    pMax = cms.double(999999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    ptMin = cms.double(10.0),
    minMultiplicity = cms.int32(1),
    applyNHighestPt = cms.bool(False),
    nHitMaxSA = cms.double(9999999.0),
    ptMax = cms.double(999999.0),
    nHitMinSA = cms.double(0.0),
    chi2nMaxTO = cms.double(9999999.0),
    chi2nMaxGB = cms.double(9999999.0),
    nHighestPt = cms.int32(2),
    applyMassPairFilter = cms.bool(True),
    src = cms.InputTag("muons"),
    nHitMinGB = cms.double(0.0),
    filter = cms.bool(True),
    maxMassPair = cms.double(101.0),
    nHitMinTO = cms.double(0.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOMuAlZMuMuDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOMuAlZMuMuHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('MuAlZMuMu'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECORpcCalHLTFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('RpcCalHLT'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    andOr = cms.bool(True)
)


process.ALCARECOSiPixelLorentzAngleHLTFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring('HLT_IsoMu11', 
        'HLT_DoubleMu3', 
        'HLT_DoubleMu3_JPsi', 
        'HLT_DoubleMu3_Upsilon', 
        'HLT_DoubleMu7_Z', 
        'HLT_DoubleMu3_SameSign'),
    throw = cms.bool(False),
    andOr = cms.bool(True)
)


process.ALCARECOSiStripCalMinBias = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-2.6),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(2.6),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(6),
    ptMax = cms.double(999.0),
    ptMin = cms.double(0.8),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(10.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOSiStripCalMinBiasHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('SiStripCalMinBias'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOSiStripCalZeroBiasHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('SiStripCalZeroBias'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlBeamHalo = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-9999),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(9999),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(3),
    ptMax = cms.double(999.0),
    ptMin = cms.double(0.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("beamhaloTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlBeamHaloDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlCosmics0TDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlCosmics0THLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlCosmics0T'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsCTF = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(4.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    pMax = cms.double(99999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(True),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("ctfWithMaterialTracksP5"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsCTF0T = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("ctfWithMaterialTracksP5"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsCosmicTF = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(4.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    minHitIsolation = cms.double(0.01),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    trackQualities = cms.vstring(),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    pMax = cms.double(99999.0),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    nHitMax = cms.double(999.0),
    applyNHighestPt = cms.bool(True),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    applyChargeCheck = cms.bool(False),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("cosmictrackfinderP5"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    chi2nMax = cms.double(999999.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsCosmicTF0T = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    minHitIsolation = cms.double(0.01),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    trackQualities = cms.vstring(),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    pMax = cms.double(9999.0),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    nHitMax = cms.double(999.0),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    applyChargeCheck = cms.bool(False),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("cosmictrackfinderP5"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    chi2nMax = cms.double(999999.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlCosmicsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlCosmics'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsInCollisions = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(4.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    pMax = cms.double(99999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(True),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("regionalCosmicTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsInCollisionsDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlCosmicsInCollisionsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlCosmics'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsRegional = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(4.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    minHitIsolation = cms.double(0.01),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    trackQualities = cms.vstring(),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    pMax = cms.double(99999.0),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    nHitMax = cms.double(999.0),
    applyNHighestPt = cms.bool(True),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    applyChargeCheck = cms.bool(False),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("regionalCosmicTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    chi2nMax = cms.double(999999.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlCosmicsRegional0T = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-99.0),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(99.0),
    minHitIsolation = cms.double(0.01),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    trackQualities = cms.vstring(),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    pMax = cms.double(9999.0),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(99999.0),
    ptMin = cms.double(0.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    nHitMax = cms.double(999.0),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    applyChargeCheck = cms.bool(False),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(1),
    nHitMin2D = cms.uint32(2),
    src = cms.InputTag("regionalCosmicTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    chi2nMax = cms.double(999999.0),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlJpsiMuMu = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("ALCARECOTkAlJpsiMuMuGoodMuons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(True),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(True),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(3.4),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(2.7),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(0.8),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlJpsiMuMuDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlJpsiMuMuGoodMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("muons"),
    cut = cms.string('isGlobalMuon &isTrackerMuon &numberOfMatches > 1 &globalTrack.hitPattern.numberOfValidMuonHits > 0 &abs(eta) < 2.5 &globalTrack.normalizedChi2 < 20.')
)


process.ALCARECOTkAlJpsiMuMuHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlJpsiMuMu'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlLASEventFilter = cms.EDFilter("LaserAlignmentEventFilter",
    FED_Filter = cms.bool(True),
    FED_IDs = cms.vint32(260, 261, 262, 263, 264, 
        265, 266, 267, 269, 270, 
        273, 274, 277, 278, 281, 
        282, 284, 285, 288, 289, 
        292, 293, 294, 295, 300, 
        301, 304, 305, 308, 309, 
        310, 311, 316, 317, 324, 
        325, 329, 330, 331, 332, 
        339, 340, 341, 342, 349, 
        350, 351, 352, 164, 165, 
        172, 173, 177, 178, 179, 
        180, 187, 188, 189, 190, 
        197, 198, 199, 200, 204, 
        205, 208, 209, 212, 213, 
        214, 215, 220, 221, 224, 
        225, 228, 229, 230, 231, 
        236, 237, 238, 239, 240, 
        241, 242, 243, 245, 246, 
        249, 250, 253, 254, 257, 
        258, 478, 476, 477, 482, 
        484, 480, 481, 474, 459, 
        460, 461, 463, 485, 487, 
        488, 489, 118, 119, 120, 
        121, 122, 123, 124, 125, 
        126, 127, 128, 129, 130, 
        131, 132, 133, 288, 289, 
        292, 293, 300, 301, 304, 
        305, 310, 311, 316, 317, 
        329, 330, 339, 340, 341, 
        342, 349, 350, 164, 165, 
        177, 178, 179, 180, 189, 
        190, 197, 198, 204, 205, 
        212, 213, 220, 221, 224, 
        225, 230, 231),
    SINGLE_CHANNEL_THRESH = cms.uint32(11),
    FedInputTag = cms.InputTag("hltTrackerCalibrationRaw"),
    DET_ID_Filter = cms.bool(True),
    CHANNEL_COUNT_THRESH = cms.uint32(8),
    SIGNAL_Filter = cms.bool(True),
    SIGNAL_IDs = cms.vint32(470389128, 470389384, 470389640, 470389896, 470390152, 
        470390408, 470390664, 470390920, 470389192, 470389448, 
        470389704, 470389960, 470390216, 470390472, 470390728, 
        470390984, 470126984, 470127240, 470127496, 470127752, 
        470128008, 470128264, 470128520, 470128776, 470127048, 
        470127304, 470127560, 470127816, 470128072, 470128328, 
        470128584, 470128840, 436232506, 436232826, 436233146, 
        436233466, 369174604, 369174812, 369175068, 369175292, 
        470307468, 470307716, 470308236, 470308748, 470308996, 
        470045316, 470045580, 470046084, 470046596, 470046860),
    DET_IDs = cms.vint32( (470307208, 470307272, 470307464, 470307528, 470307720, 
        470307784, 470307976, 470308040, 470308232, 470308296, 
        470308488, 470308552, 470308744, 470308808, 470309000, 
        470309064, 470323592, 470323656, 470323848, 470323912, 
        470324104, 470324168, 470324360, 470324424, 470324616, 
        470324680, 470324872, 470324936, 470325128, 470325192, 
        470325384, 470325448, 470339976, 470340040, 470340232, 
        470340296, 470340488, 470340552, 470340744, 470340808, 
        470341000, 470341064, 470341256, 470341320, 470341512, 
        470341576, 470341768, 470341832, 470356360, 470356424, 
        470356616, 470356680, 470356872, 470356936, 470357128, 
        470357192, 470357384, 470357448, 470357640, 470357704, 
        470357896, 470357960, 470358152, 470358216, 470372744, 
        470372808, 470373000, 470373064, 470373256, 470373320, 
        470373512, 470373576, 470373768, 470373832, 470374024, 
        470374088, 470374280, 470374344, 470374536, 470374600, 
        470389128, 470389192, 470389384, 470389448, 470389640, 
        470389704, 470389896, 470389960, 470390152, 470390216, 
        470390408, 470390472, 470390664, 470390728, 470390920, 
        470390984, 470405512, 470405576, 470405768, 470405832, 
        470406024, 470406088, 470406280, 470406344, 470406536, 
        470406600, 470406792, 470406856, 470407048, 470407112, 
        470407304, 470407368, 470421896, 470421960, 470422152, 
        470422216, 470422408, 470422472, 470422664, 470422728, 
        470422920, 470422984, 470423176, 470423240, 470423432, 
        470423496, 470423688, 470423752, 470438280, 470438344, 
        470438536, 470438600, 470438792, 470438856, 470439048, 
        470439112, 470439304, 470439368, 470439560, 470439624, 
        470439816, 470439880, 470440072, 470440136, 470045064, 
        470061448, 470077832, 470094216, 470110600, 470126984, 
        470143368, 470159752, 470176136, 470045320, 470061704, 
        470078088, 470094472, 470110856, 470127240, 470143624, 
        470160008, 470176392, 470045576, 470061960, 470078344, 
        470094728, 470111112, 470127496, 470143880, 470160264, 
        470176648, 470045832, 470062216, 470078600, 470094984, 
        470111368, 470127752, 470144136, 470160520, 470176904, 
        470046088, 470062472, 470078856, 470095240, 470111624, 
        470128008, 470144392, 470160776, 470177160, 470046344, 
        470062728, 470079112, 470095496, 470111880, 470128264, 
        470144648, 470161032, 470177416, 470046600, 470062984, 
        470079368, 470095752, 470112136, 470128520, 470144904, 
        470161288, 470177672, 470046856, 470063240, 470079624, 
        470096008, 470112392, 470128776, 470145160, 470161544, 
        470177928, 470045128, 470061512, 470077896, 470094280, 
        470110664, 470127048, 470143432, 470159816, 470176200, 
        470045384, 470061768, 470078152, 470094536, 470110920, 
        470127304, 470143688, 470160072, 470176456, 470045640, 
        470062024, 470078408, 470094792, 470111176, 470127560, 
        470143944, 470160328, 470176712, 470045896, 470062280, 
        470078664, 470095048, 470111432, 470127816, 470144200, 
        470160584, 470176968, 470046152, 470062536, 470078920, 
        470095304, 470111688, 470128072, 470144456, 470160840, 
        470177224, 470046408, 470062792, 470079176, 470095560, 
        470111944, 470128328, 470144712, 470161096, 470177480, 
        470046664, 470063048, 470079432, 470095816, 470112200, 
        470128584, 470144968, 470161352, 470177736, 470046920, 
        470063304, 470079688, 470096072, 470112456, 470128840, 
        470145224, 470161608, 470177992, 436232314, 436232306, 
        436232298, 436228198, 436228206, 436228214, 436232506, 
        436232498, 436232490, 436228390, 436228398, 436228406, 
        436232634, 436232626, 436232618, 436228518, 436228526, 
        436228534, 436232826, 436232818, 436232810, 436228710, 
        436228718, 436228726, 436233018, 436233010, 436233002, 
        436228902, 436228910, 436228918, 436233146, 436233138, 
        436233130, 436229030, 436229038, 436229046, 436233338, 
        436233330, 436233322, 436229222, 436229230, 436229238, 
        436233466, 436233458, 436233450, 436229350, 436229358, 
        436229366, 369174604, 369174600, 369174596, 369170500, 
        369170504, 369170508, 369174732, 369174728, 369174724, 
        369170628, 369170632, 369170636, 369174812, 369174808, 
        369174804, 369170708, 369170712, 369170716, 369174940, 
        369174936, 369174932, 369170836, 369170840, 369170844, 
        369175068, 369175064, 369175060, 369170964, 369170968, 
        369170972, 369175164, 369175160, 369175156, 369171060, 
        369171064, 369171068, 369175292, 369175288, 369175284, 
        369171188, 369171192, 369171196, 369175372, 369175368, 
        369175364, 369171268, 369171272, 369171276, 470307468, 
        470323852, 470340236, 470356620, 470373004, 470307716, 
        470324100, 470340484, 470356868, 470373252, 470308236, 
        470324620, 470341004, 470357388, 470373772, 470308748, 
        470325132, 470341516, 470357900, 470374284, 470308996, 
        470325380, 470341764, 470358148, 470374532, 470045316, 
        470061700, 470078084, 470094468, 470110852, 470045580, 
        470061964, 470078348, 470094732, 470111116, 470046084, 
        470062468, 470078852, 470095236, 470111620, 470046596, 
        470062980, 470079364, 470095748, 470112132, 470046860, 
        470063244, 470079628, 470096012, 470112396 ) )
)


process.ALCARECOTkAlMinBias = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(1.5),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(7),
    ptMax = cms.double(999.0),
    ptMin = cms.double(0.65),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlMinBiasDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlMinBiasFilterForBS = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    TriggerResultsTag = cms.InputTag("TriggerResults","","RECO"),
    HLTPaths = cms.vstring('pathALCARECOTkAlMinBias'),
    throw = cms.bool(True),
    andOr = cms.bool(True)
)


process.ALCARECOTkAlMinBiasHIHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlMinBiasHI'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring(),
    andOr = cms.bool(True),
    throw = cms.bool(False)
)


process.ALCARECOTkAlMinBiasHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlMinBias'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMinBiasNOTHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlMinBiasNOT'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMuonIsolated = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("ALCARECOTkAlMuonIsolatedRelCombIsoMuons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.1),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(True),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(2.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlMuonIsolatedDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlMuonIsolatedGoodMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("muons"),
    cut = cms.string('isGlobalMuon &isTrackerMuon &numberOfMatches > 1 &globalTrack.hitPattern.numberOfValidMuonHits > 0 &abs(eta) < 2.5 &globalTrack.normalizedChi2 < 20.')
)


process.ALCARECOTkAlMuonIsolatedHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlMuonIsolated'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMuonIsolatedPA = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.0),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(True),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(2.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlMuonIsolatedPADCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlMuonIsolatedPAHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlMuonIsolated'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMuonIsolatedRelCombIsoMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("ALCARECOTkAlMuonIsolatedGoodMuons"),
    cut = cms.string('(isolationR03().sumPt + isolationR03().emEt + isolationR03().hadEt)/pt  < 0.15')
)


process.ALCARECOTkAlUpsilonMuMu = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("ALCARECOTkAlUpsilonMuMuRelCombIsoMuons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(True),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(True),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(9.9),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(8.9),
        applyChargeFilter = cms.bool(True),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(3.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlUpsilonMuMuDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlUpsilonMuMuGoodMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("muons"),
    cut = cms.string('isGlobalMuon &isTrackerMuon &numberOfMatches > 1 &globalTrack.hitPattern.numberOfValidMuonHits > 0 &abs(eta) < 2.5 &globalTrack.normalizedChi2 < 20.')
)


process.ALCARECOTkAlUpsilonMuMuHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlUpsilonMuMu'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlUpsilonMuMuRelCombIsoMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("ALCARECOTkAlUpsilonMuMuGoodMuons"),
    cut = cms.string('(isolationR03().sumPt + isolationR03().emEt + isolationR03().hadEt)/pt  < 0.3')
)


process.ALCARECOTkAlZMuMu = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-3.5),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(3.5),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("ALCARECOTkAlZMuMuRelCombIsoMuons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(True),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(True),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(115.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(65.0),
        applyChargeFilter = cms.bool(True),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(15.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("generalTracks"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(True),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(True)
)


process.ALCARECOTkAlZMuMuDCSFilter = cms.EDFilter("DetStatus",
    DebugOn = cms.untracked.bool(False),
    AndOr = cms.bool(True),
    DetectorType = cms.vstring('TIBTID', 
        'TOB', 
        'TECp', 
        'TECm', 
        'BPIX', 
        'FPIX', 
        'DT0', 
        'DTp', 
        'DTm', 
        'CSCp', 
        'CSCm'),
    ApplyFilter = cms.bool(True)
)


process.ALCARECOTkAlZMuMuGoodMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("muons"),
    cut = cms.string('isGlobalMuon &isTrackerMuon &numberOfMatches > 1 &globalTrack.hitPattern.numberOfValidMuonHits > 0 &abs(eta) < 2.5 &globalTrack.normalizedChi2 < 20.')
)


process.ALCARECOTkAlZMuMuHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('TkAlZMuMu'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlZMuMuRelCombIsoMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(True),
    src = cms.InputTag("ALCARECOTkAlZMuMuGoodMuons"),
    cut = cms.string('(isolationR03().sumPt + isolationR03().emEt + isolationR03().hadEt)/pt  < 0.15')
)


process.DCSStatusForSiStripCalMinBias = cms.EDFilter("SiStripDCSFilter")


process.DCSStatusForSiStripCalZeroBias = cms.EDFilter("SiStripDCSFilter")


process.DTCalibMuonSelection = cms.EDFilter("DTCalibMuonSelection",
    filter = cms.bool(True),
    src = cms.InputTag("muons"),
    etaMin = cms.double(-1.25),
    etaMax = cms.double(1.25),
    ptMin = cms.double(3.0)
)


process.ElGoodTracks = cms.EDFilter("TrackSelector",
    filter = cms.bool(False),
    src = cms.InputTag("generalTracks"),
    cut = cms.string('pt > 5 && abs(eta) < 2.5')
)


process.ElPrimaryVertexFilter = cms.EDFilter("VertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 24 && position.Rho <= 2')
)


process.LargeSiStripClusterEvents = cms.EDFilter("LargeSiStripClusterEvents",
    absoluteThreshold = cms.untracked.int32(150000),
    collectionName = cms.InputTag("calZeroBiasClusters"),
    moduleThreshold = cms.untracked.int32(20)
)


process.MuGoodTracks = cms.EDFilter("TrackSelector",
    filter = cms.bool(False),
    src = cms.InputTag("generalTracks"),
    cut = cms.string('pt > 5 && abs(eta) < 2.5')
)


process.MuPrimaryVertexFilter = cms.EDFilter("VertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 24 && position.Rho <= 2')
)


process.PFJetsId = cms.EDFilter("TauValPFJetSelector",
    filter = cms.bool(False),
    src = cms.InputTag("kinematicSelectedPFJets"),
    cut = cms.string('chargedHadronEnergyFraction > 0.0 & neutralHadronEnergyFraction < 0.99 & neutralHadronEnergyFraction < 0.99 & chargedEmEnergyFraction < 0.99 & chargedEmEnergyFraction < 0.99 & neutralEmEnergyFraction < 0.99 & chargedMultiplicity > 0 & nConstituents > 1')
)


process.PassingTightId = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('(abs(superCluster.eta)<2.5) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && (gsfTrack.trackerExpectedHitsInner.numberOfHits<=1 ) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && ((isEB && ( dr03TkSumPt/p4.Pt <0.2 && dr03EcalRecHitSumEt/p4.Pt < 0.3 && dr03HcalTowerSumEt/p4.Pt  < 0.3 ) && (sigmaIetaIeta<0.012) && ( -0.8<deltaPhiSuperClusterTrackAtVtx<0.8 ) && ( -0.01<deltaEtaSuperClusterTrackAtVtx<0.01 ) && (hadronicOverEm<0.15)) || (isEE && ( dr03TkSumPt/p4.Pt <0.2 && dr03EcalRecHitSumEt/p4.Pt < 0.3 && dr03HcalTowerSumEt/p4.Pt  < 0.3 ) && (sigmaIetaIeta<0.033) && ( -0.7<deltaPhiSuperClusterTrackAtVtx<0.7 ) && ( -0.01<deltaEtaSuperClusterTrackAtVtx<0.01 ) && (hadronicOverEm<0.15) )) && (ecalEnergy*sin(superClusterPosition.theta)>20.0)')
)


process.PassingVeryLooseId = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('(abs(superCluster.eta)<2.5) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && (gsfTrack.trackerExpectedHitsInner.numberOfHits<=1 ) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && ((isEB && ( dr03TkSumPt/p4.Pt <0.2 && dr03EcalRecHitSumEt/p4.Pt < 0.3 && dr03HcalTowerSumEt/p4.Pt  < 0.3 ) && (sigmaIetaIeta<0.012) && ( -0.8<deltaPhiSuperClusterTrackAtVtx<0.8 ) && ( -0.01<deltaEtaSuperClusterTrackAtVtx<0.01 ) && (hadronicOverEm<0.15)) || (isEE && ( dr03TkSumPt/p4.Pt <0.2 && dr03EcalRecHitSumEt/p4.Pt < 0.3 && dr03HcalTowerSumEt/p4.Pt  < 0.3 ) && (sigmaIetaIeta<0.033) && ( -0.7<deltaPhiSuperClusterTrackAtVtx<0.7 ) && ( -0.01<deltaEtaSuperClusterTrackAtVtx<0.01 ) && (hadronicOverEm<0.15) ))')
)


process.PassingWP80 = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('(abs(superCluster.eta)<2.5) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && (gsfTrack.trackerExpectedHitsInner.numberOfHits==0 && !(-0.02<convDist<0.02 && -0.02<convDcot<0.02)) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && ((isEB && ( dr03TkSumPt/p4.Pt <0.12 && dr03EcalRecHitSumEt/p4.Pt < 0.09 && dr03HcalTowerSumEt/p4.Pt  < 0.1 ) && (sigmaIetaIeta<0.01) && ( -0.06<deltaPhiSuperClusterTrackAtVtx<0.06 ) && ( -0.004<deltaEtaSuperClusterTrackAtVtx<0.004 ) && (hadronicOverEm<0.12)) || (isEE && ( dr03TkSumPt/p4.Pt <0.05 && dr03EcalRecHitSumEt/p4.Pt < 0.06 && dr03HcalTowerSumEt/p4.Pt  < 0.03 ) && (sigmaIetaIeta<0.03) && ( -0.03<deltaPhiSuperClusterTrackAtVtx<0.03 ) && ( -0.007<deltaEtaSuperClusterTrackAtVtx<0.007 ) && (hadronicOverEm<0.10) ))')
)


process.PassingWP90 = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('(abs(superCluster.eta)<2.5) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && (gsfTrack.trackerExpectedHitsInner.numberOfHits<=1 && !(-0.02<convDist<0.02 && -0.02<convDcot<0.02)) && (ecalEnergy*sin(superClusterPosition.theta)>10.0) && ((isEB && ( dr03TkSumPt/p4.Pt <0.12 && dr03EcalRecHitSumEt/p4.Pt < 0.09 && dr03HcalTowerSumEt/p4.Pt  < 0.1 ) && (sigmaIetaIeta<0.01) && ( -0.8<deltaPhiSuperClusterTrackAtVtx<0.8 ) && ( -0.007<deltaEtaSuperClusterTrackAtVtx<0.007 ) && (hadronicOverEm<0.12)) || (isEE && ( dr03TkSumPt/p4.Pt <0.07 && dr03EcalRecHitSumEt/p4.Pt < 0.07 && dr03HcalTowerSumEt/p4.Pt  < 0.07 ) && (sigmaIetaIeta<0.03) && ( -0.7<deltaPhiSuperClusterTrackAtVtx<0.7 ) && ( -0.009<deltaEtaSuperClusterTrackAtVtx<0.009 ) && (hadronicOverEm<0.1) ))')
)


process.PotentialTIBTECFrameHeaderEventsAdditionalPeak = cms.EDFilter("EventWithHistoryEDFilter",
    commonConfiguration = cms.untracked.PSet(
        historyProduct = cms.untracked.InputTag("consecutiveHEs"),
        APVPhaseLabel = cms.untracked.string('APVPhases')
    ),
    filterConfigurations = cms.untracked.VPSet(cms.PSet(
        apvModes = cms.untracked.vint32(47),
        partitionName = cms.untracked.string('Any'),
        absBXInCycleRangeLtcyAware = cms.untracked.vint32(24, 25)
    ), 
        cms.PSet(
            apvModes = cms.untracked.vint32(37),
            partitionName = cms.untracked.string('Any'),
            absBXInCycleRangeLtcyAware = cms.untracked.vint32(22, 23)
        ))
)


process.PotentialTIBTECFrameHeaderEventsFPeak = cms.EDFilter("EventWithHistoryEDFilter",
    commonConfiguration = cms.untracked.PSet(
        historyProduct = cms.untracked.InputTag("consecutiveHEs"),
        APVPhaseLabel = cms.untracked.string('APVPhases')
    ),
    filterConfigurations = cms.untracked.VPSet(cms.PSet(
        apvModes = cms.untracked.vint32(47),
        partitionName = cms.untracked.string('Any'),
        absBXInCycleRangeLtcyAware = cms.untracked.vint32(19, 21)
    ), 
        cms.PSet(
            apvModes = cms.untracked.vint32(37),
            partitionName = cms.untracked.string('Any'),
            absBXInCycleRangeLtcyAware = cms.untracked.vint32(17, 19)
        ))
)


process.PotentialTIBTECHugeEvents = cms.EDFilter("EventWithHistoryEDFilter",
    commonConfiguration = cms.untracked.PSet(
        historyProduct = cms.untracked.InputTag("consecutiveHEs"),
        APVPhaseLabel = cms.untracked.string('APVPhases')
    ),
    filterConfigurations = cms.untracked.VPSet(cms.PSet(
        apvModes = cms.untracked.vint32(47),
        partitionName = cms.untracked.string('Any'),
        absBXInCycleRangeLtcyAware = cms.untracked.vint32(8, 8)
    ), 
        cms.PSet(
            apvModes = cms.untracked.vint32(37),
            partitionName = cms.untracked.string('Any'),
            absBXInCycleRangeLtcyAware = cms.untracked.vint32(6, 8)
        ))
)


process.TkAlIsoProd = cms.EDFilter("AlignmentTrackSelectorModule",
    theCharge = cms.int32(0),
    minHitChargeStrip = cms.double(20.0),
    minHitsPerSubDet = cms.PSet(
        inPIXEL = cms.int32(0),
        inENDCAPminus = cms.int32(0),
        inFPIXminus = cms.int32(0),
        inTIDplus = cms.int32(0),
        inTECminus = cms.int32(0),
        inFPIXplus = cms.int32(0),
        inTOB = cms.int32(0),
        inTEC = cms.int32(0),
        inTECplus = cms.int32(0),
        inENDCAPplus = cms.int32(0),
        inTID = cms.int32(0),
        inFPIX = cms.int32(0),
        inENDCAP = cms.int32(0),
        inBPIX = cms.int32(0),
        inTIDminus = cms.int32(0),
        inTIB = cms.int32(0)
    ),
    applyMultiplicityFilter = cms.bool(False),
    matchedrecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    countStereoHitAs2D = cms.bool(True),
    pMin = cms.double(0.0),
    etaMin = cms.double(-2.6),
    dzMax = cms.double(999999.0),
    etaMax = cms.double(2.6),
    pMax = cms.double(9999.0),
    phiMax = cms.double(3.1416),
    phiMin = cms.double(-3.1416),
    GlobalSelector = cms.PSet(
        applyIsolationtest = cms.bool(False),
        muonSource = cms.InputTag("muons"),
        minIsolatedCount = cms.int32(0),
        jetIsoSource = cms.InputTag("kt6CaloJets"),
        minGlobalMuonCount = cms.int32(1),
        minJetDeltaR = cms.double(0.2),
        maxJetCount = cms.int32(3),
        applyGlobalMuonFilter = cms.bool(False),
        minJetPt = cms.double(40.0),
        jetCountSource = cms.InputTag("kt6CaloJets"),
        maxJetPt = cms.double(40.0),
        applyJetCountFilter = cms.bool(False),
        maxTrackDeltaR = cms.double(0.001)
    ),
    maxHitDiffEndcaps = cms.double(999.0),
    dzMin = cms.double(-999999.0),
    TwoBodyDecaySelector = cms.PSet(
        applyMassrangeFilter = cms.bool(False),
        daughterMass = cms.double(0.105),
        applyMissingETFilter = cms.bool(False),
        missingETSource = cms.InputTag("met"),
        maxXMass = cms.double(15000.0),
        numberOfCandidates = cms.uint32(1),
        charge = cms.int32(0),
        acoplanarDistance = cms.double(1.0),
        minXMass = cms.double(0.0),
        applyChargeFilter = cms.bool(False),
        applyAcoplanarityFilter = cms.bool(False),
        useUnsignedCharge = cms.bool(True)
    ),
    minPrescaledHits = cms.int32(-1),
    minHitIsolation = cms.double(0.01),
    minMultiplicity = cms.int32(1),
    nHitMin = cms.double(0.0),
    ptMax = cms.double(999.0),
    ptMin = cms.double(0.0),
    nHitMax = cms.double(999.0),
    d0Max = cms.double(999999.0),
    iterativeTrackingSteps = cms.vstring(),
    trackQualities = cms.vstring(),
    applyNHighestPt = cms.bool(False),
    d0Min = cms.double(-999999.0),
    nLostHitMax = cms.double(999.0),
    chi2nMax = cms.double(999999.0),
    rphirecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    hitPrescaleMapTag = cms.InputTag(""),
    nHighestPt = cms.int32(2),
    nHitMin2D = cms.uint32(0),
    src = cms.InputTag("IsoProd","IsoTrackTracksCollection"),
    applyIsolationCut = cms.bool(False),
    multiplicityOnInput = cms.bool(False),
    filter = cms.bool(False),
    maxMultiplicity = cms.int32(999999),
    seedOnlyFrom = cms.int32(0),
    applyChargeCheck = cms.bool(False),
    applyBasicCuts = cms.bool(False)
)


process.WEnuHltFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring('HLT_Ele*'),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ZEEHltFilter = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring('HLT_Ele*'),
    throw = cms.bool(False),
    andOr = cms.bool(True)
)


process.dijetsHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('HcalCalDijets'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.dqmInfoES = cms.EDFilter("DQMEventInfo",
    subSystemFolder = cms.untracked.string('EcalPreshower')
)


process.ecaletaCalibHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('EcalCalEtaCalib'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ecalphiSymHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring('AlCa_EcalPhiSym*'),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ecalpi0CalibHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('EcalCalPi0Calib'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.elecMetCounter = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("elecMet"),
    minNumber = cms.uint32(1)
)


process.electronsWithPresel = cms.EDFilter("GsfElectronSelector",
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    cut = cms.string('pt > 5 && ecalDrivenSeed && passingCutBasedPreselection')
)


process.gammajetHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring('HLT_IsoPhoton30_L1I', 
        'HLT_IsoPhoton15_L1R'),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.goodElectrons = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('(abs(superCluster.eta)<2.5) && (ecalEnergy*sin(superClusterPosition.theta)>10.0)')
)


process.goodOfflinePrimaryVertices = cms.EDFilter("PrimaryVertexObjectFilter",
    src = cms.InputTag("offlinePrimaryVertices"),
    filterParams = cms.PSet(
        maxZ = cms.double(24.0),
        minNdof = cms.double(4.0),
        maxRho = cms.double(2.0),
        pvSrc = cms.InputTag("offlinePrimaryVertices")
    )
)


process.hcalminbiasHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('HcalCalMinBias'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.hltHighLevel = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    HLTPaths = cms.vstring(),
    throw = cms.bool(True),
    andOr = cms.bool(True)
)


process.idElectrons = cms.EDFilter("TauValElectronSelector",
    filter = cms.bool(False),
    src = cms.InputTag("ElectronsFromPV"),
    cut = cms.string('ecalDrivenSeed & isGsfCtfScPixChargeConsistent & isGsfScPixChargeConsistent & isGsfCtfChargeConsistent & !isEBEEGap & (isEB & sigmaIetaIeta<0.01 & abs(deltaPhiSuperClusterTrackAtVtx)<0.06 & abs(deltaEtaSuperClusterTrackAtVtx)<0.006 & hadronicOverEm<0.04 | isEE & sigmaIetaIeta<0.03 & abs(deltaPhiSuperClusterTrackAtVtx)<0.04 & abs(deltaEtaSuperClusterTrackAtVtx)<0.007 & hadronicOverEm<0.025)')
)


process.isoHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string('HcalCalIsoTrk'),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring(),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.isolatedElectrons = cms.EDFilter("TauValElectronSelector",
    filter = cms.bool(False),
    src = cms.InputTag("trackElectrons"),
    cut = cms.string('(isEB & (dr04TkSumPt/pt + max(0.,dr04EcalRecHitSumEt-2.)/pt + dr04HcalTowerSumEt/pt < 0.10)) | (isEE & (dr04TkSumPt/pt + dr04EcalRecHitSumEt/pt + dr04HcalTowerSumEt/pt < 0.09))')
)


process.kinematicSelectedPFJets = cms.EDFilter("TauValPFJetSelector",
    filter = cms.bool(False),
    src = cms.InputTag("ak5PFJets"),
    cut = cms.string('pt > 15 & abs(eta) < 2.5')
)


process.mvaElectrons = cms.EDFilter("ElectronIdMVABased",
    electronTag = cms.InputTag("electronsWithPresel"),
    thresholdIsoDR03Barrel = cms.double(10.0),
    thresholdEndcap = cms.double(-0.1075),
    thresholdIsoDR03Endcap = cms.double(10.0),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    HZZmvaWeightFile = cms.string('RecoEgamma/ElectronIdentification/data/TMVA_BDTSimpleCat_17Feb2011.weights.xml'),
    thresholdBarrel = cms.double(-0.1875)
)


process.noiseHLT = cms.EDFilter("HLTHighLevel",
    eventSetupPathsKey = cms.string(''),
    andOr = cms.bool(True),
    HLTPaths = cms.vstring('HLT_MET25'),
    throw = cms.bool(False),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.noscraping = cms.EDFilter("FilterOutScraping",
    debugOn = cms.untracked.bool(False),
    thresh = cms.untracked.double(0.25),
    numtrack = cms.untracked.uint32(10),
    applyfilter = cms.untracked.bool(True)
)


process.offlinePrimaryVerticesWithBS = cms.EDFilter("VertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices","WithBS"),
    cut = cms.string('')
)


process.pfAllChargedHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllChargedParticles = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212, 11, -11, 13, 
        -13),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllElectrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(11, -11),
    src = cms.InputTag("pfNoMuon")
)


process.pfAllMuons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(-13, 13),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllNeutralHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllNeutralHadronsAndPhotons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(22, 111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllPhotons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfPileUpAllChargedParticles = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212, 11, -11, 13, 
        -13),
    src = cms.InputTag("pfPileUpIso")
)


process.pfSelectedElectrons = cms.EDFilter("GenericPFCandidateSelector",
    src = cms.InputTag("particleFlowTmp"),
    cut = cms.string('abs(pdgId())==11')
)


process.pfSelectedPhotons = cms.EDFilter("GenericPFCandidateSelector",
    src = cms.InputTag("particleFlowTmp"),
    cut = cms.string('pdgId()==22 && mva_nothing_gamma>0')
)


process.prescaler = cms.EDFilter("PrescalerFHN",
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT"),
    Prescales = cms.VPSet(cms.PSet(
        PrescaleFactor = cms.uint32(1),
        HLTName = cms.string('HLT_MET25')
    ))
)


process.primaryVertexFilter = cms.EDFilter("VertexSelector",
    filter = cms.bool(True),
    src = cms.InputTag("offlinePrimaryVertices"),
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 15 && position.Rho <= 2')
)


process.recoTauPileUpVertices = cms.EDFilter("RecoTauPileUpVertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    minTrackSumPt = cms.double(5)
)


process.selectedElectrons = cms.EDFilter("TauValElectronSelector",
    filter = cms.bool(False),
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('pt > 25.0 && abs(eta) < 2.4 && isElectron')
)


process.selectedMuons = cms.EDFilter("MuonSelector",
    filter = cms.bool(False),
    src = cms.InputTag("muons"),
    cut = cms.string('pt > 20.0 && abs(eta) < 2.1 && isGlobalMuon = 1 && isTrackerMuon = 1')
)


process.selectedMuonsIso = cms.EDFilter("MuonSelector",
    filter = cms.bool(False),
    src = cms.InputTag("selectedMuons"),
    cut = cms.string('(isolationR03().emEt + isolationR03().hadEt + isolationR03().sumPt)/pt < 0.15')
)


process.tagGsfCounter = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("tagGsf"),
    minNumber = cms.uint32(1)
)


process.trackElectrons = cms.EDFilter("TauValElectronSelector",
    filter = cms.bool(False),
    src = cms.InputTag("idElectrons"),
    cut = cms.string('gsfTrack.isNonnull  && 0.7 < eSuperClusterOverP < 1.5')
)


process.trackWithVertexRefSelector = cms.EDFilter("TrackWithVertexRefSelector",
    normalizedChi2 = cms.double(999999.0),
    d0Max = cms.double(999.0),
    numberOfValidHits = cms.uint32(0),
    vtxFallback = cms.bool(True),
    copyExtras = cms.untracked.bool(False),
    quality = cms.string('highPurity'),
    nVertices = cms.uint32(0),
    copyTrajectories = cms.untracked.bool(False),
    ptMax = cms.double(500.0),
    zetaVtx = cms.double(1.0),
    numberOfLostHits = cms.uint32(999),
    etaMin = cms.double(0.0),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    ptErrorCut = cms.double(0.2),
    ptMin = cms.double(0.3),
    numberOfValidPixelHits = cms.uint32(0),
    rhoVtx = cms.double(0.2),
    dzMax = cms.double(999.0),
    src = cms.InputTag("generalTracks"),
    etaMax = cms.double(5.0),
    useVtx = cms.bool(True)
)


process.trackingDQMgoodOfflinePrimaryVertices = cms.EDFilter("PrimaryVertexObjectFilter",
    src = cms.InputTag("offlinePrimaryVertices"),
    filterParams = cms.PSet(
        maxZ = cms.double(24.0),
        minNdof = cms.double(4.0),
        maxRho = cms.double(2.0),
        pvSrc = cms.InputTag("offlinePrimaryVertices")
    ),
    filter = cms.bool(False)
)


process.ALCARECODTCalibrationDQM = cms.EDAnalyzer("DTPreCalibrationTask",
    SaveFile = cms.untracked.bool(False),
    minTriggerWidth = cms.untracked.int32(0),
    outputFileName = cms.untracked.string('DigiHistos.root'),
    folderName = cms.untracked.string('AlCaReco/DTCalibration'),
    digiLabel = cms.untracked.string('muonDTDigis'),
    maxTriggerWidth = cms.untracked.int32(1600)
)


process.ALCARECODtCalibCosmicsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlcaDtCalibCosmics'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('DtCalibSynchCosmics'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/DtCalibSynchCosmics/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECODtCalibHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlcaDtCalibMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('DtCalibSynch'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/DtCalibSynch/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOEcalCalElectronCalibDQM = cms.EDAnalyzer("DQMSourceEleCalib",
    electronCollection = cms.InputTag("electronFilter"),
    AlCaStreamEBTag = cms.InputTag("alCaIsolatedElectrons","alcaBarrelHits"),
    AlCaStreamEETag = cms.InputTag("alCaIsolatedElectrons","alcaEndcapHits"),
    FolderName = cms.untracked.string('AlCaReco/EcalSingleEle')
)


process.ALCARECOEcalCalEtaCalibDQM = cms.EDAnalyzer("DQMSourcePi0",
    selePtGammaEndCap = cms.double(0.8),
    seleS4S9GammaEta = cms.double(0.9),
    prescaleFactor = cms.untracked.int32(1),
    selePtGammaEtaEndCap = cms.double(1.5),
    seleMinvMaxPi0 = cms.double(0.22),
    seleMinvMinEta = cms.double(0.3),
    selePtEta = cms.double(4.0),
    seleS9S25GammaEta = cms.double(0.8),
    seleS4S9Gamma = cms.double(0.83),
    seleXtalMinEnergy = cms.double(-0.15),
    seleXtalMinEnergyEndCap = cms.double(-0.75),
    selePi0BeltDetaEndCap = cms.double(0.05),
    selePtPi0 = cms.double(2.0),
    seleMinvMaxEta = cms.double(0.8),
    massHighPi0Cand = cms.double(0.163),
    clusSeedThr = cms.double(0.5),
    seleEtaBeltDeta = cms.double(0.1),
    SaveToFile = cms.untracked.bool(False),
    ptMinForIsolationEtaEndCap = cms.double(0.5),
    selePtGammaEta = cms.double(1.2),
    clusPhiSize = cms.int32(3),
    selePi0BeltDREndCap = cms.double(0.2),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    isMonEEeta = cms.untracked.bool(True),
    clusEtaSize = cms.int32(3),
    isMonEBpi0 = cms.untracked.bool(True),
    seleEtaBeltDR = cms.double(0.3),
    seleEtaBeltDREndCap = cms.double(0.3),
    AlCaStreamEEetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEE"),
    ptMinForIsolationEndCap = cms.double(0.5),
    selePi0IsoEndCap = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    seleEtaIso = cms.double(0.5),
    selePi0Iso = cms.double(0.5),
    seleEtaIsoEndCap = cms.double(0.5),
    selePtPi0EndCap = cms.double(3.0),
    massLowPi0Cand = cms.double(0.104),
    seleMinvMaxPi0EndCap = cms.double(0.3),
    selePi0BeltDeta = cms.double(0.05),
    selePtEtaEndCap = cms.double(5),
    seleS4S9GammaEndCap = cms.double(0.9),
    selePtGamma = cms.double(1),
    clusSeedThrEndCap = cms.double(1.0),
    ptMinForIsolation = cms.double(1),
    ptMinForIsolationEta = cms.double(1.0),
    FolderName = cms.untracked.string('AlCaReco/EcalPi0'),
    seleS9S25GammaEtaEndCap = cms.double(0.85),
    seleS4S9GammaEtaEndCap = cms.double(0.9),
    seleMinvMinPi0EndCap = cms.double(0.05),
    seleMinvMinPi0 = cms.double(0.06),
    seleMinvMaxEtaEndCap = cms.double(0.8),
    FileName = cms.untracked.string('MonitorAlCaEcalPi0.root'),
    AlCaStreamEBetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEB"),
    AlCaStreamEBpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEB"),
    AlCaStreamEEpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEE"),
    seleEtaBeltDetaEndCap = cms.double(0.1),
    isMonEEpi0 = cms.untracked.bool(True),
    seleMinvMinEtaEndCap = cms.double(0.3),
    isMonEBeta = cms.untracked.bool(True)
)


process.ALCARECOEcalCalPhisymDQM = cms.EDAnalyzer("HLTAlCaMonEcalPhiSym",
    AlCaStreamEBTag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEB"),
    SaveToFile = cms.untracked.bool(False),
    FolderName = cms.untracked.string('AlCaReco/EcalPhiSym'),
    AlCaStreamEETag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEE"),
    prescaleFactor = cms.untracked.int32(1),
    FileName = cms.untracked.string('MonitorAlCaEcalPhiSym.root')
)


process.ALCARECOEcalCalPi0CalibDQM = cms.EDAnalyzer("DQMSourcePi0",
    selePtGammaEndCap = cms.double(0.8),
    seleS4S9GammaEta = cms.double(0.9),
    prescaleFactor = cms.untracked.int32(1),
    selePtGammaEtaEndCap = cms.double(1.5),
    seleMinvMaxPi0 = cms.double(0.22),
    seleMinvMinEta = cms.double(0.3),
    selePtEta = cms.double(4.0),
    seleS9S25GammaEta = cms.double(0.8),
    seleS4S9Gamma = cms.double(0.83),
    seleXtalMinEnergy = cms.double(-0.15),
    seleXtalMinEnergyEndCap = cms.double(-0.75),
    selePi0BeltDetaEndCap = cms.double(0.05),
    selePtPi0 = cms.double(2.0),
    seleMinvMaxEta = cms.double(0.8),
    massHighPi0Cand = cms.double(0.163),
    clusSeedThr = cms.double(0.5),
    seleEtaBeltDeta = cms.double(0.1),
    SaveToFile = cms.untracked.bool(False),
    ptMinForIsolationEtaEndCap = cms.double(0.5),
    selePtGammaEta = cms.double(1.2),
    clusPhiSize = cms.int32(3),
    selePi0BeltDREndCap = cms.double(0.2),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    isMonEEeta = cms.untracked.bool(True),
    clusEtaSize = cms.int32(3),
    isMonEBpi0 = cms.untracked.bool(True),
    seleEtaBeltDR = cms.double(0.3),
    seleEtaBeltDREndCap = cms.double(0.3),
    AlCaStreamEEetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEE"),
    ptMinForIsolationEndCap = cms.double(0.5),
    selePi0IsoEndCap = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    seleEtaIso = cms.double(0.5),
    selePi0Iso = cms.double(0.5),
    seleEtaIsoEndCap = cms.double(0.5),
    selePtPi0EndCap = cms.double(3.0),
    massLowPi0Cand = cms.double(0.104),
    seleMinvMaxPi0EndCap = cms.double(0.3),
    selePi0BeltDeta = cms.double(0.05),
    selePtEtaEndCap = cms.double(5),
    seleS4S9GammaEndCap = cms.double(0.9),
    selePtGamma = cms.double(1),
    clusSeedThrEndCap = cms.double(1.0),
    ptMinForIsolation = cms.double(1),
    ptMinForIsolationEta = cms.double(1.0),
    FolderName = cms.untracked.string('AlCaReco/EcalPi0'),
    seleS9S25GammaEtaEndCap = cms.double(0.85),
    seleS4S9GammaEtaEndCap = cms.double(0.9),
    seleMinvMinPi0EndCap = cms.double(0.05),
    seleMinvMinPi0 = cms.double(0.06),
    seleMinvMaxEtaEndCap = cms.double(0.8),
    FileName = cms.untracked.string('MonitorAlCaEcalPi0.root'),
    AlCaStreamEBetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEB"),
    AlCaStreamEBpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEB"),
    AlCaStreamEEpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEE"),
    seleEtaBeltDetaEndCap = cms.double(0.1),
    isMonEEpi0 = cms.untracked.bool(True),
    seleMinvMinEtaEndCap = cms.double(0.3),
    isMonEBeta = cms.untracked.bool(True)
)


process.ALCARECOHcalCalDiJetsDQM = cms.EDAnalyzer("DQMHcalDiJetsAlCaReco",
    hbheInput = cms.InputTag("DiJProd","DiJetsHBHERecHitCollection"),
    SaveToFile = cms.untracked.bool(False),
    hfInput = cms.InputTag("DiJProd","DiJetsHFRecHitCollection"),
    hoInput = cms.InputTag("DiJProd","DiJetsHORecHitCollection"),
    FolderName = cms.untracked.string('AlCaReco/HcalDiJets'),
    jetsInput = cms.InputTag("DiJProd","DiJetsBackToBackCollection"),
    ecInput = cms.InputTag("DiJProd","DiJetsEcalRecHitCollection"),
    FileName = cms.untracked.string('HcalDiJetsAlCaRecoMon.root')
)


process.ALCARECOHcalCalHODQM = cms.EDAnalyzer("DQMHOAlCaRecoStream",
    nbins = cms.untracked.int32(100),
    saveToFile = cms.untracked.bool(False),
    sigmaval = cms.untracked.double(0.2),
    lowradposinmuch = cms.untracked.double(400.0),
    folderName = cms.untracked.string('AlCaReco/HcalHO'),
    highedge = cms.untracked.double(10.0),
    RootFileName = cms.untracked.string('test.root'),
    highradposinmuch = cms.untracked.double(480),
    lowedge = cms.untracked.double(-2.0)
)


process.ALCARECOHcalCalIsoTrackDQM = cms.EDAnalyzer("DQMHcalIsoTrackAlCaReco",
    outputRootFileName = cms.string('HcalIsoTrackAlCaRecoMon.root'),
    saveToFile = cms.bool(False),
    hltL3FilterLabels = cms.vstring('hltIsolPixelTrackL3FilterHB', 
        'hltIsolPixelTrackL3FilterHE'),
    recoTracksLabel = cms.InputTag("IsoProd","IsoTrackTracksCollection"),
    hltTriggerEventLabel = cms.InputTag("hltTriggerSummaryAOD"),
    alcarecoIsoTracksLabel = cms.InputTag("IsoProd","HcalIsolatedTrackCollection"),
    folderName = cms.string('AlCaReco/HcalIsoTrack'),
    l1FilterLabel = cms.string('hltL1sJet52')
)


process.ALCARECOHcalCalPhisymDQM = cms.EDAnalyzer("DQMHcalPhiSymAlCaReco",
    hoInputNoise = cms.InputTag("horecoNoise"),
    hbheInputNoise = cms.InputTag("hbherecoNoise"),
    SaveToFile = cms.untracked.bool(False),
    hoInputMB = cms.InputTag("horecoMB"),
    hbheInputMB = cms.InputTag("hbherecoMB"),
    rawInputLabel = cms.InputTag("rawDataCollector"),
    FileName = cms.untracked.string('MonitorAlCaHcalPhiSym.root'),
    hfInputMB = cms.InputTag("hfrecoMBspecial"),
    period = cms.uint32(4096),
    hfInputNoise = cms.InputTag("hfrecoNoise"),
    FolderName = cms.untracked.string('AlCaReco/HcalPhiSym')
)


process.ALCARECOMuAlBeamHaloHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlBeamHalo'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('MuAlBeamHalo'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlBeamHalo/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlBeamHaloOverlapsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlBeamHaloOverlaps'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('MuAlBeamHaloOverlaps'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlBeamHaloOverlaps/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlBeamHaloOverlapsTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlBeamHaloOverlaps/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlBeamHaloOverlaps'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(70),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlBeamHaloOverlaps'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(70),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlBeamHaloOverlaps"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlBeamHaloTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlBeamHalo/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlBeamHalo'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlBeamHalo'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(5),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlBeamHalo"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlCalIsolatedMuHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlCalIsolatedMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('MuAlCalIsolatedMu'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlCalIsolatedMu/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlCalIsolatedMuMuAlDQM = cms.EDAnalyzer("MuonAlignment",
    OutputMEsInRootFile = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlCalIsolatedMu'),
    meanAngleRange = cms.untracked.double(0.05),
    doCSC = cms.untracked.bool(True),
    RecHits4DCSCCollectionTag = cms.InputTag("cscSegments"),
    resThetaRange = cms.untracked.double(0.1),
    OutputFileName = cms.string('MuonAlignmentMonitor.root'),
    meanPositionRange = cms.untracked.double(0.5),
    resPhiRange = cms.untracked.double(0.1),
    min1DTrackRecHitSize = cms.untracked.uint32(1),
    resLocalXRangeStation2 = cms.untracked.double(0.3),
    MuonCollection = cms.InputTag("ALCARECOMuAlCalIsolatedMu","GlobalMuon"),
    rmsPositionRange = cms.untracked.double(0.01),
    resLocalXRangeStation1 = cms.untracked.double(0.1),
    rmsAngleRange = cms.untracked.double(0.005),
    min4DTrackSegmentSize = cms.untracked.uint32(1),
    nbins = cms.untracked.uint32(500),
    resLocalYRangeStation1 = cms.untracked.double(0.7),
    resLocalYRangeStation3 = cms.untracked.double(3.0),
    resLocalYRangeStation2 = cms.untracked.double(1.0),
    resLocalYRangeStation4 = cms.untracked.double(5.0),
    RecHits4DDTCollectionTag = cms.InputTag("dt4DSegments"),
    resLocalXRangeStation4 = cms.untracked.double(3.0),
    doSummary = cms.untracked.bool(True),
    resLocalXRangeStation3 = cms.untracked.double(1.0),
    doDT = cms.untracked.bool(True)
)


process.ALCARECOMuAlCalIsolatedMuTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlCalIsolatedMu/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlCalIsolatedMu'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlCalIsolatedMu'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(5),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlCalIsolatedMu","GlobalMuon"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlGlobalCosmicsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlGlobalCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('MuAlGlobalCosmics'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlGlobalCosmics/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlGlobalCosmicsInCollisionsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlGlobalCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('MuAlGlobalCosmicsInCollisions'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlGlobalCosmicsInCollisions/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlGlobalCosmicsInCollisionsTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlGlobalCosmicsInCollisions/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlGlobalCosmicsInCollisions'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlGlobalCosmicsInCollisions'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(5),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlGlobalCosmicsInCollisions","GlobalMuon"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlGlobalCosmicsTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlGlobalCosmics/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlGlobalCosmics'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlGlobalCosmics'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(5),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlGlobalCosmics","GlobalMuon"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlOverlapsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlOverlaps'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('MuAlOverlaps'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlOverlaps/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlOverlapsTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlOverlaps/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlOverlaps'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(70),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlOverlaps'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(70),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlOverlaps"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOMuAlZMuMuHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('MuAlZMuMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('MuAlZMuMu'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/MuAlZMuMu/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOMuAlZMuMuMuAlDQM = cms.EDAnalyzer("MuonAlignment",
    OutputMEsInRootFile = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlCaZMuMu'),
    meanAngleRange = cms.untracked.double(0.05),
    doCSC = cms.untracked.bool(True),
    RecHits4DCSCCollectionTag = cms.InputTag("cscSegments"),
    resThetaRange = cms.untracked.double(0.1),
    OutputFileName = cms.string('MuonAlignmentMonitor.root'),
    meanPositionRange = cms.untracked.double(0.5),
    resPhiRange = cms.untracked.double(0.1),
    min1DTrackRecHitSize = cms.untracked.uint32(1),
    resLocalXRangeStation2 = cms.untracked.double(0.3),
    MuonCollection = cms.InputTag("ALCARECOMuAlZMuMu","StandAlone"),
    rmsPositionRange = cms.untracked.double(0.01),
    resLocalXRangeStation1 = cms.untracked.double(0.1),
    rmsAngleRange = cms.untracked.double(0.005),
    min4DTrackSegmentSize = cms.untracked.uint32(1),
    nbins = cms.untracked.uint32(500),
    resLocalYRangeStation1 = cms.untracked.double(0.7),
    resLocalYRangeStation3 = cms.untracked.double(3.0),
    resLocalYRangeStation2 = cms.untracked.double(1.0),
    resLocalYRangeStation4 = cms.untracked.double(5.0),
    RecHits4DDTCollectionTag = cms.InputTag("dt4DSegments"),
    resLocalXRangeStation4 = cms.untracked.double(3.0),
    doSummary = cms.untracked.bool(True),
    resLocalXRangeStation3 = cms.untracked.double(1.0),
    doDT = cms.untracked.bool(True)
)


process.ALCARECOMuAlZMuMuTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/MuAlZMuMu/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOMuAlZMuMu'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/MuAlZMuMu'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(5),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOMuAlZMuMu","StandAlone"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOSiStripCalMinBiasTrackerDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/SiStripCalMinBias'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(0.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(100.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    SumChargeBin = cms.uint32(101),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(False),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOSiStripCalMinBias'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOSiStripCalMinBias"),
    TrackPtBin = cms.uint32(110),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    MassBin = cms.uint32(100),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOSiStripCalMinBiasTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/SiStripCalMinBias/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOSiStripCalMinBias'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(70.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/SiStripCalMinBias'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(71),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOSiStripCalMinBias"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOTkAlBeamHaloTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlBeamHalo/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlBeamHalo'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlBeamHalo'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(150),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlBeamHalo"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlCosmicsCTF0THLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics0T'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsCTF0T'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsCTF0T/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsCTF0TTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCTF0T'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCTF0T"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    SumChargeBin = cms.uint32(101),
    ReferenceTrackProducer = cms.InputTag("ctfWithMaterialTracksP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsCTF0TTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsCTF0T/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCTF0T'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCTF0T"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlCosmicsCTFHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsCTF'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsCTF/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsCTFTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    FolderName = cms.string('AlCaReco/TkAlCosmics'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    SumChargeBin = cms.uint32(101),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCTF'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCTF"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("ctfWithMaterialTracksP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsCTFTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsCTF/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCTF'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    RecLostBin = cms.int32(10),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(100),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    EtaBin = cms.int32(26),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCTF"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    TrackQMax = cms.double(2.5)
)


process.ALCARECOTkAlCosmicsCosmicTF0THLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics0T'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsCosmicTF0T'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsCosmicTF0T/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsCosmicTF0TTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    SumChargeBin = cms.uint32(101),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCosmicTF0T'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCosmicTF0T"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("cosmictrackfinderP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsCosmicTF0TTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsCosmicTF0T/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCosmicTF0T'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    RecLostBin = cms.int32(10),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(100),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    EtaBin = cms.int32(26),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCosmicTF0T"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    TrackQMax = cms.double(2.5)
)


process.ALCARECOTkAlCosmicsCosmicTFHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsCosmicTF'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsCosmicTF/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsCosmicTFTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    SumChargeBin = cms.uint32(101),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCosmicTF'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCosmicTF"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    MassBin = cms.uint32(300),
    ReferenceTrackProducer = cms.InputTag("cosmictrackfinderP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsCosmicTFTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsCosmicTF/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsCosmicTF'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsCosmicTF"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOTkAlCosmicsInCollisionsHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsInCollisions'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsInCollisions/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsInCollisionsTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlCosmicsInCollisions'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlCosmicsInCollisions'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsInCollisions"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    SumChargeBin = cms.uint32(101),
    ReferenceTrackProducer = cms.InputTag("regionalCosmicTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsInCollisionsTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsInCollisions/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsInCollisions'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmicsInCollisions'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsInCollisions"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlCosmicsRegional0THLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics0T'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsRegional0T'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsRegional0T/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsRegional0TTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    SumChargeBin = cms.uint32(101),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    AlgoName = cms.string('ALCARECOTkAlCosmicsRegional0T'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsRegional0T"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("cosmictrackfinderP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsRegional0TTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsRegional0T/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsRegional0T'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    RecLostBin = cms.int32(10),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(100),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    EtaBin = cms.int32(26),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsRegional0T"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    TrackQMax = cms.double(2.5)
)


process.ALCARECOTkAlCosmicsRegionalHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlCosmics'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlCosmicsRegional'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlCosmicsRegional/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlCosmicsRegionalTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlCosmics0T'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(True),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    SumChargeBin = cms.uint32(101),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlCosmicsRegional'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsRegional"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    MassBin = cms.uint32(300),
    ReferenceTrackProducer = cms.InputTag("cosmictrackfinderP5"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlCosmicsRegionalTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlCosmicsRegional/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlCosmicsRegional'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(500),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlCosmics'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(500),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlCosmicsRegional"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.ALCARECOTkAlJpsiMuMuHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlJpsiMuMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('TkAlJpsiMuMu'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlJpsiMuMu/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlJpsiMuMuTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    MassBin = cms.uint32(300),
    FolderName = cms.string('AlCaReco/TkAlJpsiMuMu'),
    fillInvariantMass = cms.bool(True),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(2.5),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-5.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(4.0),
    AlgoName = cms.string('ALCARECOTkAlJpsiMuMu'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(50),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(5.5),
    SumChargeBin = cms.uint32(11),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlJpsiMuMu"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlJpsiMuMuTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlJpsiMuMu/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlJpsiMuMu'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlJpsiMuMu'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(50),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlJpsiMuMu"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlLASDigiDQM = cms.EDAnalyzer("LaserAlignmentT0ProducerDQM",
    OutputInPlainROOT = cms.bool(False),
    PlainOutputFileName = cms.string('TkAlLAS.dqm.root'),
    FolderName = cms.string('AlCaReco/TkAlLAS'),
    UpperAdcThreshold = cms.uint32(220),
    DigiProducerList = cms.VPSet(cms.PSet(
        DigiLabel = cms.string('ZeroSuppressed'),
        DigiType = cms.string('Processed'),
        DigiProducer = cms.string('ALCARECOTkAlLAST0Producer')
    )),
    LowerAdcThreshold = cms.uint32(15)
)


process.ALCARECOTkAlMinBiasHIHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlMinBiasHI'),
    HLTPaths = cms.vstring(),
    histLabel = cms.untracked.string('TkAlMinBiasHI'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlMinBiasHI/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMinBiasHITkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlMinBiasHI'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlMinBiasHI'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlMinBiasHI"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("iterativeConePu5CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    SumChargeBin = cms.uint32(101),
    ReferenceTrackProducer = cms.InputTag("hiSelectedTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlMinBiasHITrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlMinBiasHI/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlMinBiasHI'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(70.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    RecLostBin = cms.int32(10),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlMinBiasHI'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(100),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(71),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    EtaBin = cms.int32(26),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlMinBiasHI"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    TrackQMax = cms.double(2.5)
)


process.ALCARECOTkAlMinBiasHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlMinBias'),
    HLTPaths = cms.vstring(),
    histLabel = cms.untracked.string('TkAlMinBias'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlMinBias/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMinBiasNOTHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlMinBiasNOT'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlMinBias'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlMinBias/HLTSummaryNOT'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMinBiasTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    MassBin = cms.uint32(300),
    FolderName = cms.string('AlCaReco/TkAlMinBias'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    AlgoName = cms.string('ALCARECOTkAlMinBias'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    SumChargeBin = cms.uint32(101),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlMinBias"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlMinBiasTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlMinBias/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlMinBias'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(70.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlMinBias'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(30),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(71),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlMinBias"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlMuonIsolatedHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlMuonIsolated'),
    HLTPaths = cms.vstring('HLT_.*L1.*'),
    histLabel = cms.untracked.string('TkAlMuonIsolated'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlMuonIsolated/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlMuonIsolatedTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlMuonIsolated'),
    fillInvariantMass = cms.bool(False),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-50.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(30),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(50.5),
    MassBin = cms.uint32(300),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlMuonIsolated'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlMuonIsolated"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    SumChargeBin = cms.uint32(101),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlMuonIsolatedTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlMuonIsolated/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlMuonIsolated'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(15.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlMuonIsolated'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(150),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(16),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlMuonIsolated"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.ALCARECOTkAlUpsilonMuMuHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlUpsilonMuMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('TkAlUpsilonMuMu'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlUpsilonMuMu/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlUpsilonMuMuTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    TrackEfficiencyMin = cms.double(-0.01),
    MassBin = cms.uint32(300),
    FolderName = cms.string('AlCaReco/TkAlUpsilonMuMu'),
    fillInvariantMass = cms.bool(True),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(8.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-5.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(10),
    AlgoName = cms.string('ALCARECOTkAlUpsilonMuMu'),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(50),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(5.5),
    SumChargeBin = cms.uint32(11),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    JetPtBin = cms.uint32(100),
    maxJetPt = cms.double(10),
    TrackProducer = cms.InputTag("ALCARECOTkAlUpsilonMuMu"),
    MinTrackDeltaRMin = cms.double(0),
    TrackPtBin = cms.uint32(150),
    HitMapsRBin = cms.uint32(120),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    JetPtMax = cms.double(50.0),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlUpsilonMuMuTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlUpsilonMuMu/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlUpsilonMuMu'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    RecLostBin = cms.int32(10),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlUpsilonMuMu'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(50),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(100),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    EtaBin = cms.int32(26),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlUpsilonMuMu"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    TrackQMax = cms.double(2.5)
)


process.ALCARECOTkAlZMuMuHLTDQM = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string('TkAlZMuMu'),
    HLTPaths = cms.vstring('HLT_.*Mu.*'),
    histLabel = cms.untracked.string('TkAlZMuMu'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('AlCaReco/TkAlZMuMu/HLTSummary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.ALCARECOTkAlZMuMuTkAlDQM = cms.EDAnalyzer("TkAlCaRecoMonitor",
    OutputMEsInRootFile = cms.bool(False),
    MeasurementState = cms.string('default'),
    HitMapsRBin = cms.uint32(120),
    FolderName = cms.string('AlCaReco/TkAlZMuMu'),
    fillInvariantMass = cms.bool(True),
    TrackCurvatureMin = cms.double(-0.01),
    MinJetDeltaRMax = cms.double(10),
    MassMin = cms.double(50.0),
    fillRawIdMap = cms.bool(True),
    useSignedR = cms.bool(False),
    MinJetDeltaRMin = cms.double(0),
    TrackEfficiencyBin = cms.uint32(102),
    OutputFileName = cms.string('TkAlCaRecoDQM.root'),
    TrackCurvatureBin = cms.uint32(2000),
    SumChargeMin = cms.double(-5.5),
    TrackCurvatureMax = cms.double(0.01),
    MassMax = cms.double(150.0),
    JetPtBin = cms.uint32(100),
    TrackEfficiencyMax = cms.double(1.01),
    TrackPtMax = cms.double(150.0),
    HitMapRMax = cms.double(120.0),
    JetPtMin = cms.double(0.0),
    SumChargeMax = cms.double(5.5),
    SumChargeBin = cms.uint32(11),
    JetPtMax = cms.double(50.0),
    MinTrackDeltaRMax = cms.double(3.2),
    runsOnReco = cms.bool(True),
    MinJetDeltaRBin = cms.uint32(100),
    AlgoName = cms.string('ALCARECOTkAlZMuMu'),
    maxJetPt = cms.double(10),
    MinTrackDeltaRMin = cms.double(0),
    TrackProducer = cms.InputTag("ALCARECOTkAlZMuMu"),
    TrackPtBin = cms.uint32(150),
    TrackEfficiencyMin = cms.double(-0.01),
    HitMapZMax = cms.double(300.0),
    daughterMass = cms.double(0.10565836),
    HitMapsZBin = cms.uint32(300),
    CaloJetCollection = cms.InputTag("kt6CaloJets"),
    MinTrackDeltaRBin = cms.uint32(100),
    MassBin = cms.uint32(300),
    ReferenceTrackProducer = cms.InputTag("generalTracks"),
    TrackPtMin = cms.double(0.0)
)


process.ALCARECOTkAlZMuMuTrackingDQM = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('AlCaReco/TkAlZMuMu/BeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('ALCARECOTkAlZMuMu'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(5.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(150),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('AlCaReco/TkAlZMuMu'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(150),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(6),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(True),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("ALCARECOTkAlZMuMu"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.AlcaBeamMonitor = cms.EDAnalyzer("AlcaBeamMonitor",
    ScalerLabel = cms.untracked.InputTag("scalerBeamSpot"),
    BeamSpotLabel = cms.untracked.InputTag("offlineBeamSpot"),
    PrimaryVertexLabel = cms.untracked.InputTag("offlinePrimaryVertices"),
    TrackLabel = cms.untracked.InputTag("generalTracks"),
    BeamFitter = cms.PSet(
        MaximumNormChi2 = cms.untracked.double(10.0),
        MaximumEta = cms.untracked.double(2.4),
        MaximumZ = cms.untracked.double(60),
        SaveNtuple = cms.untracked.bool(False),
        IsMuonCollection = cms.untracked.bool(False),
        WriteAscii = cms.untracked.bool(False),
        FractionOfFittedTrks = cms.untracked.double(0.9),
        deltaSignificanceCut = cms.untracked.double(10),
        WriteDIPAscii = cms.untracked.bool(False),
        OutputFileName = cms.untracked.string('BeamFit.root'),
        AsciiFileName = cms.untracked.string('BeamFit.txt'),
        SaveFitResults = cms.untracked.bool(False),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        MinimumPixelLayers = cms.untracked.int32(0),
        InputBeamWidth = cms.untracked.double(0.006),
        Debug = cms.untracked.bool(False),
        MinimumPt = cms.untracked.double(1.0),
        TrackAlgorithm = cms.untracked.vstring(),
        MinimumInputTracks = cms.untracked.int32(150),
        AppendRunToFileName = cms.untracked.bool(True),
        SavePVVertices = cms.untracked.bool(False),
        DIPFileName = cms.untracked.string('BeamFitDIP.txt'),
        MinimumTotalLayers = cms.untracked.int32(6),
        TrackQuality = cms.untracked.vstring(),
        MaximumImpactParameter = cms.untracked.double(1.0)
    ),
    PVFitter = cms.PSet(
        minVertexNdf = cms.untracked.double(10.0),
        nSigmaCut = cms.untracked.double(5.0),
        errorScale = cms.untracked.double(0.9),
        Apply3DFit = cms.untracked.bool(True),
        VertexCollection = cms.untracked.InputTag("offlinePrimaryVertices"),
        FitPerBunchCrossing = cms.untracked.bool(False),
        minVertexNTracks = cms.untracked.uint32(0),
        minVertexMeanWeight = cms.untracked.double(0.5),
        maxVertexR = cms.untracked.double(2),
        maxNrStoredVertices = cms.untracked.uint32(10000),
        Debug = cms.untracked.bool(False),
        minNrVerticesForFit = cms.untracked.uint32(50),
        maxVertexNormChi2 = cms.untracked.double(10.0),
        maxVertexZ = cms.untracked.double(10)
    ),
    MonitorName = cms.untracked.string('AlcaBeamMonitor')
)


process.AllCaloTowersDQMOffline = cms.EDAnalyzer("CaloTowersAnalyzer",
    useAllHistos = cms.untracked.bool(False),
    outputFile = cms.untracked.string(''),
    CaloTowerCollectionLabel = cms.untracked.InputTag("towerMaker"),
    hcalselector = cms.untracked.string('all')
)


process.AnalyzeBeamHalo = cms.EDAnalyzer("BeamHaloAnalyzer",
    StandardDQM = cms.bool(True),
    ESRecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    BeamHaloMuonLabel = cms.InputTag("muonsBeamHaloEndCapsOnly"),
    HBHERecHitLabel = cms.InputTag("hbhereco"),
    CollisionMuonLabel = cms.InputTag("muons"),
    TextFile = cms.string(''),
    DumpMET = cms.double(20.0),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite'),
        RPCLayers = cms.bool(True)
    ),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    MatchParameters = cms.PSet(
        DTsegments = cms.InputTag("dt4DSegments"),
        CSCsegments = cms.InputTag("cscSegments"),
        DTradius = cms.double(0.01),
        TightMatchDT = cms.bool(False),
        TightMatchCSC = cms.bool(True)
    ),
    EERecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    PhotonLabel = cms.InputTag("photons"),
    metLabel = cms.InputTag("met"),
    SuperClusterLabel = cms.InputTag("correctedHybridSuperClusters"),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    HORecHitLabel = cms.InputTag("horeco"),
    L1MuGMTReadoutLabel = cms.InputTag("gtDigis"),
    CosmicStandAloneMuonLabel = cms.InputTag("muonsFromCosmics"),
    GlobalHaloDataLabel = cms.InputTag("GlobalHaloData"),
    OutputFile = cms.string(''),
    BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    CollisionStandAloneMuonLabel = cms.InputTag("standAloneMuons"),
    folderName = cms.string('JetMET/BeamHalo'),
    CaloTowerLabel = cms.InputTag("towerMaker"),
    EBRecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits"),
    HFRecHitLabel = cms.InputTag("hfreco"),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.AnalyzeSUSYDQM = cms.EDAnalyzer("SUSYDQMAnalyzer",
    JetTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_L1Jet6U'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowptjet'),
        errorReplyHlt = cms.bool(False)
    ),
    PFJetCollectionLabel = cms.InputTag("ak5PFJets"),
    maxNJets = cms.double(10),
    CaloJetCollectionLabel = cms.InputTag("ak5CaloJets"),
    ptThreshold = cms.double(20.0),
    folderName = cms.string('JetMET/SUSYDQM/'),
    maxAbsEta = cms.double(2.4),
    PFMETCollectionLabel = cms.InputTag("pfMet"),
    JPTJetCollectionLabel = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    TCMETCollectionLabel = cms.InputTag("tcMet"),
    CaloMETCollectionLabel = cms.InputTag("met")
)


process.ClientTrackEfficiencySTACosmicMuons = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(True),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Muons/cosmicMuons'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    effD0Bin = cms.int32(50),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    AlgoName = cms.string('STA'),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.ClientTrackEfficiencyTkTracks = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(False),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Muons/TKTrack'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    effD0Bin = cms.int32(50),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    AlgoName = cms.string('CTF'),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.ClusterizerLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('lowPtTripletStepClusters', 
        'pixelPairStepClusters', 
        'detachedTripletStepClusters', 
        'mixedTripletStepClusters', 
        'pixelLessStepClusters', 
        'tobTecStepClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackClusterRemover'),
    categories = cms.vstring()
)


process.ClusterizerLogMessageMonCommon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('lowPtTripletStepClusters', 
        'pixelPairStepClusters', 
        'detachedTripletStepClusters', 
        'mixedTripletStepClusters', 
        'pixelLessStepClusters', 
        'tobTecStepClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackClusterRemover'),
    categories = cms.vstring(),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.ClusterizerLogMessageMonMB = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('lowPtTripletStepClusters', 
        'pixelPairStepClusters', 
        'detachedTripletStepClusters', 
        'mixedTripletStepClusters', 
        'pixelLessStepClusters', 
        'tobTecStepClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackClusterRemover'),
    categories = cms.vstring(),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.ConversionLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('photonConvTrajSeedFromSingleLeg', 
        'convTrackCandidates', 
        'convStepTracks'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('Conversion'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds')
)


process.DQMMessageLogger = cms.EDAnalyzer("DQMMessageLogger",
    Directory = cms.string('MessageLogger'),
    Categories = cms.vstring()
)


process.FullIterTrackingLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepSeeds_iter0', 
        'initialStepTrackCandidates_iter0', 
        'initialStepTracks_iter0', 
        'lowPtTripletStepSeeds_iter1', 
        'lowPtTripletStepTrackCandidates_iter1', 
        'lowPtTripletStepTracks_iter1', 
        'pixelPairStepSeeds_iter2', 
        'pixelPairStepTrackCandidates_iter2', 
        'pixelPairStepTracks_iter2', 
        'detachedTripletStepSeeds_iter3', 
        'detachedTripletStepTrackCandidates_iter3', 
        'detachedTripletStepTracks_iter3', 
        'mixedTripletStepSeedsA_iter4', 
        'mixedTripletStepSeedsB_iter4', 
        'mixedTripletStepTrackCandidates_iter4', 
        'mixedTripletStepTracks_iter4', 
        'pixelLessStepSeeds_iter5', 
        'pixelLessStepTrackCandidates_iter5', 
        'pixelLessStepTracks_iter5', 
        'tobTecStepSeeds_iter6', 
        'tobTecStepTrackCandidates_iter6', 
        'tobTecStepTracks_iter6', 
        'photonConvTrajSeedFromSingleLeg', 
        'convTrackCandidates', 
        'convStepTracks'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('FullIterTracking'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds')
)


process.HLTTauPostAnalysis_Inclusive = cms.EDAnalyzer("HLTTauPostProcessor",
    DQMBaseFolder = cms.untracked.string('HLT/TauOffline/Inclusive/'),
    Setup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        DQMFolder = cms.untracked.string('DoubleTau'),
        TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('EleTau'),
            DQMFolder = cms.untracked.string('Ele.+?Tau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuLooseTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuMediumTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuTightTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('SingleTau'),
            DQMFolder = cms.untracked.string('Single.+?Tau_MET'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            DQMFolder = cms.untracked.string('Summary'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT")
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.untracked.string('L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        )),
    SourceModule = cms.untracked.string('hltTauOfflineMonitor_Inclusive'),
    HLTProcessName = cms.untracked.string('HLT')
)


process.HLTTauPostAnalysis_PFTaus = cms.EDAnalyzer("HLTTauPostProcessor",
    DQMBaseFolder = cms.untracked.string('HLT/TauOffline/PFTaus/'),
    Setup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        DQMFolder = cms.untracked.string('DoubleTau'),
        TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('EleTau'),
            DQMFolder = cms.untracked.string('Ele.+?Tau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuLooseTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuMediumTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuTightTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('SingleTau'),
            DQMFolder = cms.untracked.string('Single.+?Tau_MET'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            DQMFolder = cms.untracked.string('Summary'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT")
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.untracked.string('L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        )),
    SourceModule = cms.untracked.string('hltTauOfflineMonitor_PFTaus'),
    HLTProcessName = cms.untracked.string('HLT')
)


process.HiggsDQM = cms.EDAnalyzer("HiggsDQM",
    electronCollection = cms.InputTag("gsfElectrons"),
    caloMETCollection = cms.InputTag("corMetGlobalMuons"),
    muonTriggerPathToPass = cms.string('HLT_Mu9'),
    pfMETCollection = cms.InputTag("pfMet"),
    triggerResultsCollection = cms.InputTag("TriggerResults","","HLT"),
    elecTriggerPathToPass = cms.string('HLT_Ele10_LW_L1R'),
    PtThrMu2 = cms.untracked.double(3.0),
    muonCollection = cms.InputTag("muons"),
    genParticleCollection = cms.InputTag("genParticles"),
    caloJetCollection = cms.InputTag("ak5CaloJets"),
    PtThrMu1 = cms.untracked.double(3.0)
)


process.IterTrackingLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepSeeds_iter0', 
        'initialStepTrackCandidates_iter0', 
        'initialStepTracks_iter0', 
        'lowPtTripletStepSeeds_iter1', 
        'lowPtTripletStepTrackCandidates_iter1', 
        'lowPtTripletStepTracks_iter1', 
        'pixelPairStepSeeds_iter2', 
        'pixelPairStepTrackCandidates_iter2', 
        'pixelPairStepTracks_iter2', 
        'detachedTripletStepSeeds_iter3', 
        'detachedTripletStepTrackCandidates_iter3', 
        'detachedTripletStepTracks_iter3', 
        'mixedTripletStepSeedsA_iter4', 
        'mixedTripletStepSeedsB_iter4', 
        'mixedTripletStepTrackCandidates_iter4', 
        'mixedTripletStepTracks_iter4', 
        'pixelLessStepSeeds_iter5', 
        'pixelLessStepTrackCandidates_iter5', 
        'pixelLessStepTracks_iter5', 
        'tobTecStepSeeds_iter6', 
        'tobTecStepTrackCandidates_iter6', 
        'tobTecStepTracks_iter6'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('IterTracking'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds')
)


process.LocalRecoLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('siPixelDigis', 
        'siStripDigis', 
        'siPixelClusters', 
        'siStripClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('LocalReco'),
    categories = cms.vstring('SiPixelRawToDigi', 
        'TooManyErrors', 
        'TooManyClusters')
)


process.LocalRecoLogMessageMonCommon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('siPixelDigis', 
        'siStripDigis', 
        'siPixelClusters', 
        'siStripClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('LocalReco'),
    categories = cms.vstring('SiPixelRawToDigi', 
        'TooManyErrors', 
        'TooManyClusters'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.LocalRecoLogMessageMonMB = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('siPixelDigis', 
        'siStripDigis', 
        'siPixelClusters', 
        'siStripClusters'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('LocalReco'),
    categories = cms.vstring('SiPixelRawToDigi', 
        'TooManyErrors', 
        'TooManyClusters'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.MEtoMEComparitor = cms.EDAnalyzer("MEtoMEComparitor",
    Diffgoodness = cms.double(0.1),
    processRef = cms.string('HLT'),
    dirDepth = cms.uint32(1),
    KSgoodness = cms.double(0.9),
    runInstance = cms.string('MEtoEDMConverterRun'),
    MEtoEDMLabel = cms.string('MEtoEDMConverter'),
    autoProcess = cms.bool(True),
    processNew = cms.string('RERECO'),
    OverAllgoodness = cms.double(0.9),
    lumiInstance = cms.string('MEtoEDMConverterLumi')
)


process.MonitorTrackGLBMuons = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(True),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(50),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(60.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Muons/globalCosmicMuons/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('glb'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.141592654),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.141592654),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(39.5),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(1999.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(200),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Muons/globalMuons'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(True),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(50),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(199.5),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    TrackPBin = cms.int32(100),
    pyErrMax = cms.double(1.0),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(26),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("globalMuons"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    RecLostBin = cms.int32(10)
)


process.MonitorTrackResiduals = cms.EDAnalyzer("MonitorTrackResiduals",
    OutputMEsInRootFile = cms.bool(False),
    Mod_On = cms.bool(False),
    TH1NormResModules = cms.PSet(
        xmin = cms.double(-5.0),
        Nbinx = cms.int32(100),
        xmax = cms.double(5.0)
    ),
    trajectoryInput = cms.string('generalTracks'),
    OutputFileName = cms.string('test_monitortracks.root'),
    TH1ResModules = cms.PSet(
        xmin = cms.double(-0.05),
        Nbinx = cms.int32(100),
        xmax = cms.double(0.05)
    ),
    Tracks = cms.InputTag("TrackRefitter"),
    ResetAfterRun = cms.bool(True),
    andOr = cms.bool(False),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.MonitorTrackSTAMuons = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(20),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-30.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(250),
    TrackPMax = cms.double(1000),
    doGeneralPropertiesPlots = cms.bool(True),
    doTrackPxPyPlots = cms.bool(False),
    TrackPzBin = cms.int32(1000),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(200),
    TIBHitBin = cms.int32(15),
    Z0Max = cms.double(30.0),
    pErrBin = cms.int32(100),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(120),
    VZMax = cms.double(100.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Muons/standAloneMuonsUpdatedAtVtx/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-100.0),
    pErrMax = cms.double(10.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('sta'),
    TrackPyMin = cms.double(-500.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(10.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(1000),
    TrackPyMax = cms.double(500.0),
    doGoodTrackPlots = cms.bool(False),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(10.0),
    PhiMax = cms.double(3.2),
    Y0Min = cms.double(-3.0),
    TCProducer = cms.InputTag("ckfTrackCandidatesP5"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.2),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-500.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(200),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(120.0),
    phiErrMin = cms.double(0.0),
    VYMin = cms.double(-20.0),
    TrackPxMax = cms.double(500.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(500.0),
    VYMax = cms.double(20.0),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(60),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(200),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    selPrimaryVertexInputTags = cms.VInputTag(),
    phiErrBin = cms.int32(100),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(100),
    RecLayMax = cms.double(120.0),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    NTrk2DMax = cms.double(199.5),
    TCDzBin = cms.int32(200),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-500.0),
    pzErrMax = cms.double(10.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(0.0),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.5),
    ThetaMax = cms.double(3.2),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(10.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(100),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(100),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(36),
    VZBin = cms.int32(50),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    NClusPxBin = cms.int32(50),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Muons/standAloneMuonsUpdatedAtVtx'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(100),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(1000),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('monitortrackparameters_stamuons.root'),
    TkSeedSizeMax = cms.double(19.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-3.0),
    doHitPropertiesPlots = cms.bool(True),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(3.0),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(1000),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(1999.5),
    TCDxyMin = cms.double(-100.0),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    NTrk2DBin = cms.int32(20),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(3.0),
    SeedDxyBin = cms.int32(100),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(11),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(),
    Chi2Max = cms.double(500.0),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-3.0),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(1.0),
    Y0Max = cms.double(3.0),
    GoodPVtxMax = cms.double(60.0),
    VXBin = cms.int32(20),
    RecHitBin = cms.int32(120),
    SeedProducer = cms.InputTag("combinedP5SeedsForCTF"),
    TrackPBin = cms.int32(1000),
    pyErrMax = cms.double(10.0),
    NClusStrBin = cms.int32(150),
    TOBHitMin = cms.double(-0.5),
    EtaBin = cms.int32(100),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    doTrackCandHistos = cms.bool(False),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    RecHitMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(0.0),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(100),
    TrackPyBin = cms.int32(1000),
    VXMin = cms.double(-20.0),
    doPlotsVsBXlumi = cms.bool(False),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(20),
    RecLostMax = cms.double(20),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    NClusStrMax = cms.double(14999.5),
    RecLostMin = cms.double(0.0),
    pzErrBin = cms.int32(100),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    VXMax = cms.double(20.0),
    RecLostBin = cms.int32(120),
    NClus2DPxBin = cms.int32(20),
    NClus2DPxMax = cms.double(1999.5),
    NClus2DPxMin = cms.double(-0.5),
    NClus2DStrBin = cms.int32(50),
    NClus2DStrMax = cms.double(14999.5),
    NClus2DStrMin = cms.double(-0.5),
    NClus2DTotBin = cms.int32(50),
    NClus2DTotMax = cms.double(14999.5),
    NClus2DTotMin = cms.double(-0.5)
)


process.MuIsoDQM_glb = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(False),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(True),
    requireSTAMuon = cms.untracked.bool(False),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/global'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoDQM_sta = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(False),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(False),
    requireSTAMuon = cms.untracked.bool(True),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/standalone'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoDQM_trk = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(True),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(False),
    requireSTAMuon = cms.untracked.bool(False),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/tracker'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.NoiseRatesDQMOffline = cms.EDAnalyzer("HcalNoiseRates",
    minRBXEnergy = cms.untracked.double(20.0),
    useAllHistos = cms.untracked.bool(False),
    outputFile = cms.untracked.string(''),
    rbxCollName = cms.untracked.InputTag("hcalnoise"),
    minHitEnergy = cms.untracked.double(1.5)
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealData = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    RefCollection = cms.InputTag("CleanedPFJets"),
    chainCuts = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLQCDDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtJet = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Jet30_L1FastJet_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForJetDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("CleanedPFJets")
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtMultiJet = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('OUR_HLT_FALLBACK_PATH'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForMultiJetDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("CleanedPFJets")
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtSingleMu = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForSingleMuDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("CleanedPFJets")
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsData = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg"),
    chainCuts = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC4_Mass50_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLEleDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealElectronsData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsDataAtDoubleElectron = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC4_Mass50_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForDoubleElectronDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealElectronsData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg")
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsDataTauPlusX = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoRhoT_TrkIdT_TrkIsoT_LooseIsoPFTau20_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForTauPlusXDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealElectronsData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg")
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealMuonsData = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    RefCollection = cms.InputTag("MuZLegs","theProbeLeg"),
    chainCuts = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLMuDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealMuonsData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.PFTausHighEfficiencyLeadingPionBothProngsRealMuonsDataAtSingleMu = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingTrackFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByLeadingPionPtCut'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstElectron'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('shrinkingConePFTauDiscriminationAgainstMuon'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        )),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    SaveOutputHistograms = cms.bool(False),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForSingleMuDataset')
    ),
    TauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('LeadingPionRealMuonsData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("MuZLegs","theProbeLeg")
)


process.RecHitsDQMOffline = cms.EDAnalyzer("HcalRecHitsAnalyzer",
    outputFile = cms.untracked.string(''),
    eventype = cms.untracked.string('multi'),
    useAllHistos = cms.untracked.bool(False),
    HORecHitCollectionLabel = cms.untracked.InputTag("horeco"),
    hcalselector = cms.untracked.string('all'),
    HFRecHitCollectionLabel = cms.untracked.InputTag("hfreco"),
    ecalselector = cms.untracked.string('yes'),
    HBHERecHitCollectionLabel = cms.untracked.InputTag("hbhereco")
)


process.RunHPSValidationRealData = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    chainCuts = cms.bool(False),
    SaveOutputHistograms = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLQCDDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("CleanedPFJets"),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.RunHPSValidationRealDataAtJet = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("CleanedPFJets"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Jet30_L1FastJet_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForJetDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.RunHPSValidationRealDataAtMultiJet = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("CleanedPFJets"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('OUR_HLT_FALLBACK_PATH'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForMultiJetDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.RunHPSValidationRealDataAtSingleMu = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("CleanedPFJets"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(250.0),
            nbins = cms.int32(25),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForSingleMuDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.RunHPSValidationRealElectronsData = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    chainCuts = cms.bool(False),
    SaveOutputHistograms = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC4_Mass50_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLEleDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealElectronsData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg"),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.RunHPSValidationRealElectronsDataAtDoubleElectron = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC4_Mass50_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForDoubleElectronDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealElectronsData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.RunHPSValidationRealElectronsDataTauPlusX = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("ElZLegs","theProbeLeg"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Ele20_CaloIdVT_CaloIsoRhoT_TrkIdT_TrkIsoT_LooseIsoPFTau20_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForTauPlusXDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealElectronsData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.RunHPSValidationRealMuonsData = cms.EDAnalyzer("TauTagValidation",
    TauPtCut = cms.double(0.0),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    chainCuts = cms.bool(False),
    SaveOutputHistograms = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Jets = cms.double(0.3),
    MatchDeltaR_Leptons = cms.double(0.15),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForALLMuDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealMuonsData'),
    recoCuts = cms.string(''),
    RefCollection = cms.InputTag("MuZLegs","theProbeLeg"),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    turnOnTrigger = cms.bool(True)
)


process.RunHPSValidationRealMuonsDataAtSingleMu = cms.EDAnalyzer("TauTagValidation",
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.string('hpsPFTauDiscriminationByDecayModeFinding'),
        selectionCut = cms.double(0.5),
        plotStep = cms.bool(True)
    ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightChargedIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseIsolation'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByLooseMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMediumMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(True)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByTightMuonRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        ), 
        cms.PSet(
            discriminator = cms.string('hpsPFTauDiscriminationByMVAElectronRejection'),
            selectionCut = cms.double(0.5),
            plotStep = cms.bool(False)
        )),
    RefCollection = cms.InputTag("MuZLegs","theProbeLeg"),
    chainCuts = cms.bool(False),
    turnOnTrigger = cms.bool(True),
    histoSettings = cms.PSet(
        pileup = cms.PSet(
            max = cms.double(72.0),
            nbins = cms.int32(18),
            min = cms.double(0.0)
        ),
        phi = cms.PSet(
            max = cms.double(180.0),
            nbins = cms.int32(4),
            min = cms.double(-180.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nbins = cms.int32(4),
            min = cms.double(-3.0)
        ),
        pt = cms.PSet(
            max = cms.double(100.0),
            nbins = cms.int32(10),
            min = cms.double(0.0)
        )
    ),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    GenericTriggerSelection = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_IsoMu24_eta2p1_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False),
        verbosityLevel = cms.uint32(0),
        dbLabel = cms.string('PFTauDQMTrigger'),
        hltDBKey = cms.string('TauTriggerForSingleMuDataset')
    ),
    TauProducer = cms.InputTag("hpsPFTauProducer"),
    genCuts = cms.string(''),
    ExtensionName = cms.string('RealMuonsData'),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)


process.SeedingLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepSeeds', 
        'lowPtTripletStepSeeds', 
        'pixelPairStepSeeds', 
        'detachedTripletStepSeeds', 
        'mixedTripletStepSeedsA', 
        'mixedTripletStepSeedsB', 
        'mixedTripletStepSeeds', 
        'pixelLessStepSeeds', 
        'tobTecStepSeeds', 
        'photonConvTrajSeedFromSingleLeg'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('Seeding'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds')
)


process.SeedingLogMessageMonCommon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepSeeds', 
        'lowPtTripletStepSeeds', 
        'pixelPairStepSeeds', 
        'detachedTripletStepSeeds', 
        'mixedTripletStepSeedsA', 
        'mixedTripletStepSeedsB', 
        'mixedTripletStepSeeds', 
        'pixelLessStepSeeds', 
        'tobTecStepSeeds', 
        'photonConvTrajSeedFromSingleLeg'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('Seeding'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.SeedingLogMessageMonMB = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepSeeds', 
        'lowPtTripletStepSeeds', 
        'pixelPairStepSeeds', 
        'detachedTripletStepSeeds', 
        'mixedTripletStepSeedsA', 
        'mixedTripletStepSeedsB', 
        'mixedTripletStepSeeds', 
        'pixelLessStepSeeds', 
        'tobTecStepSeeds', 
        'photonConvTrajSeedFromSingleLeg'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('Seeding'),
    categories = cms.vstring('TooManyClusters', 
        'TooManyPairs', 
        'TooManyTriplets', 
        'TooManySeeds'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.SiPixelClusterSource = cms.EDAnalyzer("SiPixelClusterSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Cluster.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    layOn = cms.untracked.bool(True),
    twoDimOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelClusters"),
    isPIB = cms.untracked.bool(False),
    smileyOn = cms.untracked.bool(True),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    bigEventSize = cms.untracked.int32(180),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelDigiSource = cms.EDAnalyzer("SiPixelDigiSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Digi.root'),
    hiRes = cms.untracked.bool(False),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    twoDimOnlyLayDisk = cms.untracked.bool(False),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    twoDimModOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelDigis"),
    isPIB = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    twoDimOn = cms.untracked.bool(False),
    bigEventSize = cms.untracked.int32(2600),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelHLTSource = cms.EDAnalyzer("SiPixelHLTSource",
    saveFile = cms.untracked.bool(False),
    outputFile = cms.string('Pixel_DQM_HLT.root'),
    slowDown = cms.untracked.bool(False),
    ErrorInput = cms.InputTag("siPixelDigis"),
    RawInput = cms.InputTag("rawDataCollector"),
    DirName = cms.untracked.string('Pixel/FEDIntegrity/')
)


process.SiPixelHitEfficiencySource = cms.EDAnalyzer("SiPixelHitEfficiencySource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_HitEfficiency.root'),
    nSigma_EdgeCut = cms.untracked.double(2.0),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    updateEfficiencies = cms.untracked.bool(False),
    layOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    applyEdgeCut = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelHitEfficiency"),
    trajectoryInput = cms.InputTag("generalTracks"),
    diskOn = cms.untracked.bool(False)
)


process.SiPixelHitEfficiencySource_HeavyIons = cms.EDAnalyzer("SiPixelHitEfficiencySource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_HitEfficiency.root'),
    nSigma_EdgeCut = cms.untracked.double(2.0),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    updateEfficiencies = cms.untracked.bool(False),
    layOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    applyEdgeCut = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelHitEfficiency"),
    trajectoryInput = cms.InputTag("hiGlobalPrimTracks"),
    diskOn = cms.untracked.bool(False)
)


process.SiPixelRawDataErrorSource = cms.EDAnalyzer("SiPixelRawDataErrorSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Error.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    isPIB = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelDigis")
)


process.SiPixelRecHitSource = cms.EDAnalyzer("SiPixelRecHitSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_RecHits.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    layOn = cms.untracked.bool(True),
    twoDimOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelRecHits"),
    isPIB = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("generalTracks"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('initialStepTrackCandidates'),
    TrackCandidateLabel = cms.string(''),
    PtMinRes = cms.untracked.double(4.0),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource_Cosmics = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("ctfWithMaterialTracksP5"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('ckfTrackCandidatesP5'),
    TrackCandidateLabel = cms.string(''),
    PtMinRes = cms.untracked.double(4.0),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource_HeavyIons = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("hiGlobalPrimTracks"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('hiPrimTrackCandidates'),
    TrackCandidateLabel = cms.string(''),
    PtMinRes = cms.untracked.double(4.0),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiStripCalZeroBiasMonitorCluster = cms.EDAnalyzer("SiStripMonitorCluster",
    TProf2ApvCycleVsDBx = cms.PSet(
        zmax = cms.double(0.0),
        ymax = cms.double(800.5),
        zmin = cms.double(0.0),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        subdetswitchon = cms.bool(False),
        ymin = cms.double(0.5)
    ),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(True),
    TH2ClustersApvCycle = cms.PSet(
        yfactor = cms.double(0.01),
        subdetswitchon = cms.bool(True),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(400),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ClusterDigiPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterStoNVsPos = cms.PSet(
        ymax = cms.double(299.5),
        Nbinx = cms.int32(768),
        Nbiny = cms.int32(100),
        moduleswitchon = cms.bool(False),
        xmax = cms.double(767.5),
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(False),
        ymin = cms.double(-0.5)
    ),
    ClusterProducerPix = cms.InputTag("siPixelClusters"),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(600),
        ymin = cms.double(0.0),
        ymax = cms.double(100000.0),
        xmax = cms.double(3600.0)
    ),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    TH1StripNoise2ApvCycle = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    TProfNumberOfCluster = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    ClusterHisto = cms.bool(False),
    BPTXfilter = cms.PSet(

    ),
    TH1NClusStrip = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(500),
        xmax = cms.double(99999.5)
    ),
    TH1MultiplicityRegions = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(0.5),
        Nbinx = cms.int32(5),
        xmax = cms.double(5.5)
    ),
    ClusterProducerStrip = cms.InputTag("calZeroBiasClusters"),
    OutputFileName = cms.string('SiStripMonitorCluster.root'),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(200),
        xmax = cms.double(799.5),
        layerswitchon = cms.bool(False)
    ),
    SelectAllDetectors = cms.bool(True),
    ShowMechanicalStructureView = cms.bool(True),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(True),
        maxStoN = cms.double(10000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(10000.0)
    ),
    TH1ModuleLocalOccupancy = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(20),
        xmax = cms.double(0.95),
        layerswitchon = cms.bool(False)
    ),
    TH1NrOfClusterizedStrips = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(20),
        xmax = cms.double(99.5),
        layerswitchon = cms.bool(False)
    ),
    TH1nClusters = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(11),
        xmax = cms.double(10.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TProfTotalNumberOfClusters = cms.PSet(
        Nbins = cms.int32(600),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    ClusterLabel = cms.string(''),
    TH2ApvCycleVsDBxGlobal = cms.PSet(
        ymax = cms.double(800.5),
        globalswitchon = cms.bool(False),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.5)
    ),
    StripQualityLabel = cms.string('unbiased'),
    TH1MainDiagonalPosition = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(0.0),
        Nbinsx = cms.int32(100),
        xmax = cms.double(2.0)
    ),
    TProfClustersApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1TotalNumberOfClusters = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(500),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(19999.5)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1NClusPx = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(200),
        xmax = cms.double(19999.5)
    ),
    StripDCSfilter = cms.PSet(

    ),
    PixelDCSfilter = cms.PSet(

    ),
    TProfClustersVsDBxCycle = cms.PSet(
        Nbins = cms.int32(800),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(0.0),
        xmax = cms.double(800.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.0)
    ),
    TopFolderName = cms.string('AlCaReco/SiStrip'),
    MultiplicityRegions = cms.PSet(
        MaxClus = cms.double(20000),
        MinPix = cms.double(50),
        k0 = cms.double(0.13),
        dk0 = cms.double(40),
        q0 = cms.double(300)
    ),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5),
        layerswitchon = cms.bool(False)
    ),
    OutputMEsInRootFile = cms.bool(False),
    ShowReadoutView = cms.bool(False),
    ResetMEsEachRun = cms.bool(False),
    ShowControlView = cms.bool(False),
    TH2CStripVsCpixel = cms.PSet(
        ymax = cms.double(14999.5),
        globalswitchon = cms.bool(False),
        Nbinsx = cms.int32(150),
        Nbinsy = cms.int32(50),
        xmax = cms.double(74999.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(-0.5)
    ),
    TH1StripNoise3ApvCycle = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    TkHistoMap_On = cms.bool(False)
)


process.SiStripMonitorCluster = cms.EDAnalyzer("SiStripMonitorCluster",
    TProf2ApvCycleVsDBx = cms.PSet(
        zmax = cms.double(0.0),
        ymax = cms.double(800.5),
        zmin = cms.double(0.0),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        subdetswitchon = cms.bool(False),
        ymin = cms.double(0.5)
    ),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(True),
    TH2ClustersApvCycle = cms.PSet(
        yfactor = cms.double(0.2),
        subdetswitchon = cms.bool(False),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ClusterDigiPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterStoNVsPos = cms.PSet(
        ymax = cms.double(299.5),
        Nbinx = cms.int32(768),
        Nbiny = cms.int32(100),
        moduleswitchon = cms.bool(False),
        xmax = cms.double(767.5),
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(False),
        ymin = cms.double(-0.5)
    ),
    ClusterProducerPix = cms.InputTag("siPixelClusters"),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(360),
        ymin = cms.double(0.0),
        ymax = cms.double(100000.0),
        xmax = cms.double(3600.0)
    ),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    TH1StripNoise2ApvCycle = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    TProfNumberOfCluster = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    ClusterHisto = cms.bool(False),
    BPTXfilter = cms.PSet(

    ),
    TH1NClusStrip = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(500),
        xmax = cms.double(99999.5)
    ),
    TH1MultiplicityRegions = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(0.5),
        Nbinx = cms.int32(5),
        xmax = cms.double(5.5)
    ),
    ClusterProducerStrip = cms.InputTag("siStripClusters"),
    OutputFileName = cms.string('SiStripMonitorCluster.root'),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(200),
        xmax = cms.double(799.5),
        layerswitchon = cms.bool(False)
    ),
    SelectAllDetectors = cms.bool(False),
    ShowMechanicalStructureView = cms.bool(True),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(True),
        maxStoN = cms.double(10000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(10000.0)
    ),
    TH1ModuleLocalOccupancy = cms.PSet(
        xmin = cms.double(-0.01),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(51),
        xmax = cms.double(1.01),
        layerswitchon = cms.bool(True)
    ),
    TH1NrOfClusterizedStrips = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(99.5),
        layerswitchon = cms.bool(True)
    ),
    TH1nClusters = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(11),
        xmax = cms.double(10.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TProfTotalNumberOfClusters = cms.PSet(
        Nbins = cms.int32(600),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    ClusterLabel = cms.string(''),
    TH2ApvCycleVsDBxGlobal = cms.PSet(
        ymax = cms.double(800.5),
        globalswitchon = cms.bool(True),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.5)
    ),
    StripQualityLabel = cms.string(''),
    TH1MainDiagonalPosition = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(0.0),
        Nbinsx = cms.int32(100),
        xmax = cms.double(2.0)
    ),
    TProfClustersApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1TotalNumberOfClusters = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(80),
        subdetswitchon = cms.bool(False),
        xmax = cms.double(15999.5)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1NClusPx = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(200),
        xmax = cms.double(19999.5)
    ),
    StripDCSfilter = cms.PSet(

    ),
    PixelDCSfilter = cms.PSet(

    ),
    TProfClustersVsDBxCycle = cms.PSet(
        Nbins = cms.int32(800),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(800.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.0)
    ),
    TopFolderName = cms.string('SiStrip'),
    MultiplicityRegions = cms.PSet(
        MaxClus = cms.double(20000),
        MinPix = cms.double(50),
        k0 = cms.double(0.13),
        dk0 = cms.double(40),
        q0 = cms.double(300)
    ),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5),
        layerswitchon = cms.bool(False)
    ),
    OutputMEsInRootFile = cms.bool(False),
    ShowReadoutView = cms.bool(False),
    ResetMEsEachRun = cms.bool(False),
    ShowControlView = cms.bool(False),
    TH2CStripVsCpixel = cms.PSet(
        ymax = cms.double(14999.5),
        globalswitchon = cms.bool(True),
        Nbinsx = cms.int32(150),
        Nbinsy = cms.int32(50),
        xmax = cms.double(74999.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(-0.5)
    ),
    TH1StripNoise3ApvCycle = cms.PSet(
        globalswitchon = cms.bool(False),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    TkHistoMap_On = cms.bool(True)
)


process.SiStripMonitorClusterBPTX = cms.EDAnalyzer("SiStripMonitorCluster",
    TProf2ApvCycleVsDBx = cms.PSet(
        zmax = cms.double(0.0),
        ymax = cms.double(800.5),
        zmin = cms.double(0.0),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        subdetswitchon = cms.bool(False),
        ymin = cms.double(0.5)
    ),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(False),
    TH2ClustersApvCycle = cms.PSet(
        yfactor = cms.double(0.2),
        subdetswitchon = cms.bool(False),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ClusterDigiPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5),
        layerswitchon = cms.bool(False)
    ),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(360),
        ymin = cms.double(0.0),
        ymax = cms.double(100000.0),
        xmax = cms.double(3600.0)
    ),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    TH2ApvCycleVsDBxGlobal = cms.PSet(
        ymax = cms.double(800.5),
        globalswitchon = cms.bool(True),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.5)
    ),
    TH1StripNoise2ApvCycle = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    TProfNumberOfCluster = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    ClusterHisto = cms.bool(True),
    BPTXfilter = cms.PSet(
        l1Algorithms = cms.vstring('L1Tech_BPTX_plus_AND_minus.v0', 
            'L1_ZeroBias'),
        andOr = cms.bool(False),
        andOrL1 = cms.bool(True),
        dbLabel = cms.string('SiStripDQMTrigger'),
        l1BeforeMask = cms.bool(True),
        errorReplyL1 = cms.bool(True)
    ),
    TH1NClusStrip = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(500),
        xmax = cms.double(99999.5)
    ),
    TH1MultiplicityRegions = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(0.5),
        Nbinx = cms.int32(5),
        xmax = cms.double(5.5)
    ),
    ClusterProducerStrip = cms.InputTag("siStripClusters"),
    OutputFileName = cms.string('SiStripMonitorCluster.root'),
    SelectAllDetectors = cms.bool(False),
    ShowMechanicalStructureView = cms.bool(True),
    TH1ModuleLocalOccupancy = cms.PSet(
        xmin = cms.double(-0.01),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(51),
        xmax = cms.double(1.01),
        layerswitchon = cms.bool(True)
    ),
    TH1NrOfClusterizedStrips = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(99.5),
        layerswitchon = cms.bool(True)
    ),
    TH1nClusters = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(11),
        xmax = cms.double(10.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TkHistoMap_On = cms.bool(True),
    TProfTotalNumberOfClusters = cms.PSet(
        Nbins = cms.int32(600),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    ClusterLabel = cms.string(''),
    ClusterProducerPix = cms.InputTag("siPixelClusters"),
    StripQualityLabel = cms.string(''),
    PixelDCSfilter = cms.PSet(
        dcsPartitions = cms.vint32(28, 29),
        dcsInputTag = cms.InputTag("scalersRawToDigi"),
        errorReplyDcs = cms.bool(True),
        andOrDcs = cms.bool(False),
        andOr = cms.bool(False)
    ),
    TH1MainDiagonalPosition = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(0.0),
        Nbinsx = cms.int32(100),
        xmax = cms.double(2.0)
    ),
    TProfClustersApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1TotalNumberOfClusters = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(80),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(15999.5)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1NClusPx = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(200),
        xmax = cms.double(19999.5)
    ),
    StripDCSfilter = cms.PSet(
        dcsPartitions = cms.vint32(24, 25, 26, 27),
        dcsInputTag = cms.InputTag("scalersRawToDigi"),
        errorReplyDcs = cms.bool(True),
        andOrDcs = cms.bool(False),
        andOr = cms.bool(False)
    ),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(200),
        xmax = cms.double(799.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClustersVsDBxCycle = cms.PSet(
        Nbins = cms.int32(800),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(800.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.0)
    ),
    MultiplicityRegions = cms.PSet(
        MaxClus = cms.double(20000),
        MinPix = cms.double(50),
        k0 = cms.double(0.13),
        dk0 = cms.double(40),
        q0 = cms.double(300)
    ),
    TopFolderName = cms.string('SiStrip'),
    TH1ClusterStoNVsPos = cms.PSet(
        ymax = cms.double(299.5),
        Nbinx = cms.int32(768),
        Nbiny = cms.int32(100),
        moduleswitchon = cms.bool(False),
        xmax = cms.double(767.5),
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(False),
        ymin = cms.double(-0.5)
    ),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5),
        layerswitchon = cms.bool(False)
    ),
    OutputMEsInRootFile = cms.bool(False),
    TH1StripNoise3ApvCycle = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(-0.5),
        Nbinsx = cms.int32(70),
        xmax = cms.double(69.5)
    ),
    ResetMEsEachRun = cms.bool(False),
    ShowControlView = cms.bool(False),
    TH2CStripVsCpixel = cms.PSet(
        ymax = cms.double(14999.5),
        globalswitchon = cms.bool(True),
        Nbinsx = cms.int32(150),
        Nbinsy = cms.int32(50),
        xmax = cms.double(74999.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(-0.5)
    ),
    ShowReadoutView = cms.bool(False),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(True),
        maxStoN = cms.double(10000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(10000.0)
    )
)


process.SiStripMonitorDigi = cms.EDAnalyzer("SiStripMonitorDigi",
    OutputMEsInRootFile = cms.bool(False),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(False),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(600),
        ymin = cms.double(0.0),
        ymax = cms.double(10000.0),
        xmax = cms.double(3600.0)
    ),
    topDir = cms.string('SiStrip'),
    TProfNumberOfDigi = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    ResetMEsEachRun = cms.bool(False),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    TH1StripOccupancy = cms.PSet(
        xmin = cms.double(-0.01),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(51),
        xmax = cms.double(1.01),
        layerswitchon = cms.bool(True)
    ),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    TProfTotalNumberOfDigisVsLS = cms.PSet(
        subdetswitchon = cms.bool(False)
    ),
    TProfNShotsVsTime = cms.PSet(
        Nbins = cms.int32(600),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        globalswitchon = cms.bool(True),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    TotalNumberOfDigisFailure = cms.PSet(
        Nbins = cms.int32(6),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(1.5),
        Nbinsy = cms.int32(1),
        xmax = cms.double(6.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.5)
    ),
    TH1ChargeMedianApvShots = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(0.5),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(255.5),
        Nbins = cms.int32(255)
    ),
    OutputFileName = cms.string('test_digi.root'),
    SelectAllDetectors = cms.bool(False),
    TProfGlobalNShots = cms.PSet(
        globalswitchon = cms.bool(True)
    ),
    ShowMechanicalStructureView = cms.bool(True),
    TH1NumberOfDigisPerStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5)
    ),
    TH1NApvShots = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(-0.5),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(200.5),
        Nbins = cms.int32(201)
    ),
    TH1NStripsApvShots = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(64.5),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(128.5),
        Nbins = cms.int32(64)
    ),
    TH1ApvNumApvShots = cms.PSet(
        globalswitchon = cms.bool(True),
        xmin = cms.double(0.5),
        subdetswitchon = cms.bool(True),
        xmax = cms.double(6.5),
        Nbins = cms.int32(6)
    ),
    TH2DigiApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        yfactor = cms.double(0.2),
        subdetswitchon = cms.bool(False),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TkHistoMapMedianChargeApvShots_On = cms.bool(True),
    TProfDigiADC = cms.PSet(
        xmin = cms.double(0.0),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ADCsCoolestStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(60),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    UseDCSFiltering = cms.bool(True),
    TkHistoMapNApvShots_On = cms.bool(True),
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode")),
    TProfTotalNumberOfDigis = cms.PSet(
        Nbins = cms.int32(360),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    TH1DigiADCs = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(64),
        xmax = cms.double(255.5),
        layerswitchon = cms.bool(True)
    ),
    TkHistoMapNStripApvShots_On = cms.bool(True),
    xLumiProf = cms.int32(5),
    TProfDigiApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ADCsHottestStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(60),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    CalculateStripOccupancy = cms.bool(False),
    ShowControlView = cms.bool(False),
    TH1NumberOfDigis = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(50),
        xmax = cms.double(999.5),
        layerswitchon = cms.bool(True)
    ),
    ShowReadoutView = cms.bool(False),
    TkHistoMap_On = cms.bool(True)
)


process.SiStripMonitorTrackCommon = cms.EDAnalyzer("SiStripMonitorTrack",
    OutputMEsInRootFile = cms.bool(False),
    Mod_On = cms.bool(False),
    Trending = cms.PSet(
        UpdateMode = cms.int32(1),
        Nbins = cms.int32(10),
        Steps = cms.int32(5)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5)
    ),
    TH1ClusterSymmEtaCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    Cluster_src = cms.InputTag("siStripClusters"),
    TkHistoMap_On = cms.bool(True),
    TH1nClustersOff = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(200),
        xmax = cms.double(8999.5)
    ),
    TH1ClusterStoNCorr = cms.PSet(
        globalswitchon = cms.bool(True),
        layerswitchon = cms.bool(True),
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(200),
        xmax = cms.double(199.5)
    ),
    TProfileClusterPGV = cms.PSet(
        ymax = cms.double(1.2),
        Nbinx = cms.int32(20),
        Nbiny = cms.int32(20),
        xmax = cms.double(10.0),
        xmin = cms.double(-10.0),
        ymin = cms.double(-0.1)
    ),
    RawDigis_On = cms.bool(False),
    TH1ClusterWidthCC = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(10),
        xmax = cms.double(9.5)
    ),
    OutputFileName = cms.string('test_monitortrackparameters_rs.root'),
    RawDigiLabel = cms.string('VirginRaw'),
    TH1ClusterStoNCorrMod = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(50),
        xmax = cms.double(199.5)
    ),
    RingFlag_On = cms.bool(False),
    Trend_On = cms.bool(False),
    TH1nClustersOn = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(1999.5)
    ),
    HistoFlag_On = cms.bool(False),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5)
    ),
    OffHisto_On = cms.bool(True),
    TH1ClusterEstimatorCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1ClusterChargeCorr = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(399.5)
    ),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(999.5)
    ),
    AlgoName = cms.string('GenTk'),
    RawDigiProducer = cms.string('simSiStripDigis'),
    TrackProducer = cms.string('generalTracks'),
    ModulesToBeExcluded = cms.vuint32(),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5)
    ),
    TrackLabel = cms.string(''),
    TrajectoryInEvent = cms.bool(True),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(False),
        maxStoN = cms.double(2000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(200.0)
    )
)


process.SiStripMonitorTrackMB = cms.EDAnalyzer("SiStripMonitorTrack",
    OutputMEsInRootFile = cms.bool(False),
    Mod_On = cms.bool(False),
    Trending = cms.PSet(
        UpdateMode = cms.int32(1),
        Nbins = cms.int32(10),
        Steps = cms.int32(5)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5)
    ),
    TH1ClusterSymmEtaCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    Cluster_src = cms.InputTag("siStripClusters"),
    TkHistoMap_On = cms.bool(True),
    TH1nClustersOff = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(200),
        xmax = cms.double(8999.5)
    ),
    TH1ClusterStoNCorr = cms.PSet(
        globalswitchon = cms.bool(True),
        layerswitchon = cms.bool(True),
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(200),
        xmax = cms.double(199.5)
    ),
    TProfileClusterPGV = cms.PSet(
        ymax = cms.double(1.2),
        Nbinx = cms.int32(20),
        Nbiny = cms.int32(20),
        xmax = cms.double(10.0),
        xmin = cms.double(-10.0),
        ymin = cms.double(-0.1)
    ),
    RawDigis_On = cms.bool(False),
    TH1ClusterWidthCC = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(10),
        xmax = cms.double(9.5)
    ),
    OutputFileName = cms.string('test_monitortrackparameters_rs.root'),
    RawDigiLabel = cms.string('VirginRaw'),
    TH1ClusterStoNCorrMod = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(50),
        xmax = cms.double(199.5)
    ),
    RingFlag_On = cms.bool(False),
    Trend_On = cms.bool(False),
    TH1nClustersOn = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(1999.5)
    ),
    HistoFlag_On = cms.bool(False),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5)
    ),
    OffHisto_On = cms.bool(True),
    TH1ClusterEstimatorCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1ClusterChargeCorr = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(399.5)
    ),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(999.5)
    ),
    AlgoName = cms.string('GenTk'),
    RawDigiProducer = cms.string('simSiStripDigis'),
    TrackProducer = cms.string('generalTracks'),
    ModulesToBeExcluded = cms.vuint32(),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5)
    ),
    TrackLabel = cms.string(''),
    TrajectoryInEvent = cms.bool(True),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(False),
        maxStoN = cms.double(2000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(200.0)
    ),
    andOr = cms.bool(False),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.TrackCandidateLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepTrackCandidates', 
        'lowPtTripletStepTrackCandidates', 
        'pixelPairStepTrackCandidates', 
        'detachedTripletStepTrackCandidates', 
        'mixedTripletStepTrackCandidates', 
        'pixelLessStepTrackCandidates', 
        'tobTecStepTrackCandidates', 
        'convTrackCandidates'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackCandidate'),
    categories = cms.vstring('TooManySeeds')
)


process.TrackCandidateLogMessageMonCommon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepTrackCandidates', 
        'lowPtTripletStepTrackCandidates', 
        'pixelPairStepTrackCandidates', 
        'detachedTripletStepTrackCandidates', 
        'mixedTripletStepTrackCandidates', 
        'pixelLessStepTrackCandidates', 
        'tobTecStepTrackCandidates', 
        'convTrackCandidates'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackCandidate'),
    categories = cms.vstring('TooManySeeds'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.TrackCandidateLogMessageMonMB = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('initialStepTrackCandidates', 
        'lowPtTripletStepTrackCandidates', 
        'pixelPairStepTrackCandidates', 
        'detachedTripletStepTrackCandidates', 
        'mixedTripletStepTrackCandidates', 
        'pixelLessStepTrackCandidates', 
        'tobTecStepTrackCandidates', 
        'convTrackCandidates'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackCandidate'),
    categories = cms.vstring('TooManySeeds'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.TrackEffClient = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(True),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Track/Efficiencies'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    AlgoName = cms.string('CTF'),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    effD0Bin = cms.int32(50),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.TrackFinderLogMessageMon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('pixelTracks', 
        'initialStepTracks', 
        'lowPtTripletStepTracks', 
        'pixelPairStepTracks', 
        'detachedTripletStepTracks', 
        'mixedTripletStepTracks', 
        'pixelLessStepTracks', 
        'tobTecStepTracks', 
        'generalTracks'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackFinder'),
    categories = cms.vstring('FailedPropagation')
)


process.TrackFinderLogMessageMonCommon = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('pixelTracks', 
        'initialStepTracks', 
        'lowPtTripletStepTracks', 
        'pixelPairStepTracks', 
        'detachedTripletStepTracks', 
        'mixedTripletStepTracks', 
        'pixelLessStepTracks', 
        'tobTecStepTracks', 
        'generalTracks'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackFinder'),
    categories = cms.vstring('FailedPropagation'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.TrackFinderLogMessageMonMB = cms.EDAnalyzer("LogMessageMonitor",
    OutputMEsInRootFile = cms.bool(False),
    doPUmonitoring = cms.bool(False),
    modules = cms.vstring('pixelTracks', 
        'initialStepTracks', 
        'lowPtTripletStepTracks', 
        'pixelPairStepTracks', 
        'detachedTripletStepTracks', 
        'mixedTripletStepTracks', 
        'pixelLessStepTracks', 
        'tobTecStepTracks', 
        'generalTracks'),
    OutputFileName = cms.string('MonitorTrack.root'),
    LogFolderName = cms.string('Tracking/MessageLog'),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    doWarningsPlots = cms.bool(False),
    pluginsMonName = cms.string('TrackFinder'),
    categories = cms.vstring('FailedPropagation'),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.TrackMonStep0 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter0'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(100),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(5000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(20000),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep1 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter1'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("lowPtTripletStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(100),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(30000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(20000),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("lowPtTripletStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep2 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(400),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter2'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("pixelPairStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(100),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(100000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(20000),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("pixelPairStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep3 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter3'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("detachedTripletStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(100),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(30000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(20000),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("detachedTripletStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep4 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(400),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter4'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("mixedTripletStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(200000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("mixedTripletStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(100000),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep5 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(400),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter5'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("pixelLessStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(200000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("pixelLessStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Strip'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(100000),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackMonStep6 = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(400),
    doSeedNumberHisto = cms.bool(True),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(False),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(False),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('iter6'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("tobTecStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('TrackingMonitorSeedMultiplicity.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(False),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(0),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(False),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(True),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(True),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(100000),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(False),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(False),
    TkSizeBin = cms.int32(100),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(True),
    primaryVertexInputTags = cms.VInputTag(),
    SeedProducer = cms.InputTag("tobTecStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(False),
    doSeedPHIHisto = cms.bool(True),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring(),
    doSeedVsClusterHisto = cms.bool(True),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Strip'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(100000),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackerCollisionTrackMonCommon = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(True),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(True),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(100),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(cms.InputTag("goodOfflinePrimaryVertices"), cms.InputTag("")),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/ParametersVsBeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('GenTk'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(999.5),
    Chi2NDFMax = cms.double(49.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(True),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(True),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(True),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(True),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(499.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(True),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(200),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(cms.InputTag("offlinePrimaryVertices"), cms.InputTag("pixelVertices")),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(True),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring('offline', 
        'pixel'),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(499.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot', 
        'Strip', 
        'Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True)
)


process.TrackerCollisionTrackMonHLT = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(True),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(True),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(100),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(cms.InputTag("goodOfflinePrimaryVertices"), cms.InputTag("")),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/ParametersVsBeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('GenTk'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(999.5),
    Chi2NDFMax = cms.double(49.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(True),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(True),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(True),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('HLT/Tracking'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(True),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(499.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(True),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(200),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(cms.InputTag("offlinePrimaryVertices"), cms.InputTag("pixelVertices")),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(True),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring('offline', 
        'pixel'),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(499.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot', 
        'Strip', 
        'Pix'),
    TrackProducer = cms.InputTag("hltPixelTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26)
)


process.TrackerCollisionTrackMonMB = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    doSeedNumberHisto = cms.bool(False),
    TIDLayBin = cms.int32(6),
    Z0Min = cms.double(-60.0),
    doGoodTrackLayersVsPhiVsEtaPerTrack = cms.bool(True),
    TECLayBin = cms.int32(15),
    TOBLayMax = cms.double(9.5),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    doGeneralPropertiesPlots = cms.bool(True),
    doTrackPxPyPlots = cms.bool(False),
    TrackQMax = cms.double(2.5),
    TCSizeBin = cms.int32(100),
    SeedDzBin = cms.int32(120),
    selPrimaryVertexInputTags = cms.VInputTag(cms.InputTag("goodOfflinePrimaryVertices"), cms.InputTag("")),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(-0.5),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/ParametersVsBeamSpot'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    Chi2ProbBin = cms.int32(100),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('GenTk'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(999.5),
    Chi2NDFMax = cms.double(49.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    RecHitBin = cms.int32(40),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("initialStepTrackCandidates"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    doSeedNRecHitsHisto = cms.bool(False),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    Chi2NDFBin = cms.int32(50),
    OutputFileName = cms.string('MonitorTrack.root'),
    TCHitMax = cms.double(39.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(1999.5),
    doGoodTrackPlots = cms.bool(True),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    NTrk2DMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(True),
    X0Bin = cms.int32(100),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    doLayersVsPhiVsEtaPerTrack = cms.bool(True),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    TrackPxMin = cms.double(-50.0),
    pzErrMax = cms.double(1.0),
    doSeedNVsEtaProf = cms.bool(False),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    doPlotsVsBXlumi = cms.bool(False),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(32),
    MeanLayMax = cms.double(19.5),
    GoodPVtxBin = cms.int32(60),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    doSeedETAHisto = cms.bool(False),
    PhiBin = cms.int32(32),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    GoodPVtxMin = cms.double(0.0),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    doTestPlots = cms.bool(False),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(True),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    doSeedPTHisto = cms.bool(False),
    doGoodTrackRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    TrackPxBin = cms.int32(50),
    doDCAwrt000Plots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(200),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(499.5),
    doSeedDzHisto = cms.bool(False),
    EtaMin = cms.double(-2.5),
    doHitPropertiesPlots = cms.bool(True),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(2.5),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    doPlotsVsGoodPVtx = cms.bool(False),
    NClusPxMax = cms.double(19999.5),
    TCHitMin = cms.double(-0.5),
    VXBin = cms.int32(100),
    doPUmonitoring = cms.bool(False),
    PVFolderName = cms.string('Tracking/PrimaryVertices'),
    TECLayMax = cms.double(14.5),
    RecLostBin = cms.int32(10),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(50),
    doMeasurementStatePlots = cms.bool(True),
    TkSizeBin = cms.int32(200),
    doSeedThetaHisto = cms.bool(False),
    doSeedPHIVsETAHisto = cms.bool(False),
    primaryVertexInputTags = cms.VInputTag(cms.InputTag("offlinePrimaryVertices"), cms.InputTag("pixelVertices")),
    SeedProducer = cms.InputTag("initialStepSeeds"),
    doSeedDxyHisto = cms.bool(False),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    BXlumiSetup = cms.PSet(
        BXlumiMax = cms.double(6000),
        BXlumiBin = cms.int32(400),
        BXlumiMin = cms.double(2000),
        lumiScale = cms.double(6.37),
        lumi = cms.InputTag("lumiProducer")
    ),
    X0Min = cms.double(-0.5),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    GoodPVtxMax = cms.double(60.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(50),
    Chi2Max = cms.double(199.5),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    NClusStrBin = cms.int32(500),
    TOBHitMin = cms.double(-0.5),
    TCDxyMax = cms.double(100.0),
    doRecHitVsPhiVsEtaPerTrack = cms.bool(True),
    doSeedPHIHisto = cms.bool(False),
    doLumiAnalysis = cms.bool(True),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    doThetaPlots = cms.bool(False),
    pvLabels = cms.vstring('offline', 
        'pixel'),
    doSeedVsClusterHisto = cms.bool(False),
    pyErrMin = cms.double(0.0),
    TIDHitBin = cms.int32(15),
    doSeedNVsPhiProf = cms.bool(False),
    Y0Bin = cms.int32(100),
    PhiMax = cms.double(3.141592654),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.141592654),
    TECHitMax = cms.double(24.5),
    doAllPlots = cms.bool(False),
    pxErrBin = cms.int32(50),
    doTrackCandHistos = cms.bool(False),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(499.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    doDCAPlots = cms.bool(False),
    NClusStrMin = cms.double(-0.5),
    ClusterLabels = cms.vstring('Tot', 
        'Strip', 
        'Pix'),
    TrackProducer = cms.InputTag("generalTracks"),
    NClusStrMax = cms.double(99999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    doGoodTrack2DChi2Plots = cms.bool(False),
    doSeedQHisto = cms.bool(False),
    Quality = cms.string(''),
    RecHitMin = cms.double(-0.5),
    VXMax = cms.double(0.5),
    EtaBin = cms.int32(26),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    dbLabel = cms.string('SiStripDQMTrigger'),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    hltPaths = cms.vstring('HLT_ZeroBias_*'),
    hltDBKey = cms.string('Tracker_MB'),
    errorReplyHlt = cms.bool(False),
    andOrHlt = cms.bool(True)
)


process.bTagAnalysis = cms.EDAnalyzer("BTagPerformanceAnalyzerOnData",
    ptRecJetMin = cms.double(30.0),
    allHistograms = cms.bool(False),
    epsBaseName = cms.string(''),
    produceEps = cms.bool(False),
    ptRecJetMax = cms.double(40000.0),
    psBaseName = cms.string(''),
    update = cms.bool(False),
    ratioMin = cms.double(-1.0),
    ratioMax = cms.double(0.8),
    etaMin = cms.double(0.0),
    ptPartonMin = cms.double(0.0),
    producePs = cms.bool(False),
    softLeptonInfo = cms.InputTag("softElectronTagInfos"),
    jetMCSrc = cms.InputTag("mcJetFlavour"),
    jetIdParameters = cms.PSet(
        vetoFlavour = cms.vstring(),
        rejectBCSplitting = cms.bool(False),
        physicsDefinition = cms.bool(False),
        coneSizeToAssociate = cms.double(0.3),
        fillLeptons = cms.bool(False),
        fillHeavyHadrons = cms.bool(False),
        fillPartons = cms.bool(True),
        mcSource = cms.string('source')
    ),
    ptRanges = cms.vdouble(50.0, 80.0, 120.0),
    etaRanges = cms.vdouble(0.0, 1.4, 2.4),
    etaMax = cms.double(2.4),
    ptPartonMax = cms.double(99999.0),
    partonKinematics = cms.bool(True),
    inputfile = cms.string(''),
    finalizeOnly = cms.bool(False),
    finalizePlots = cms.bool(False),
    tagConfig = cms.VPSet(cms.PSet(
        parameters = cms.PSet(
            NBinsIPE = cms.int32(100),
            NBinsIPS = cms.int32(100),
            LowerIPEBound = cms.double(0.0),
            LowerIPBound = cms.double(-0.1),
            QualityPlots = cms.bool(False),
            MinJetDistance = cms.double(-9999.0),
            startEffPur = cms.double(0.005),
            UpperIPBound = cms.double(0.1),
            MaxJetDistance = cms.double(9999.0),
            nBinEffPur = cms.int32(200),
            UpperIPSBound = cms.double(35.0),
            MinDecayLength = cms.double(-9999.0),
            MaxDecayLength = cms.double(9999.0),
            endEffPur = cms.double(1.005),
            NBinsIP = cms.int32(100),
            LowerIPSBound = cms.double(-35.0),
            UpperIPEBound = cms.double(0.04)
        ),
        folder = cms.string('IPTag'),
        type = cms.string('TrackIP'),
        label = cms.InputTag("impactParameterTagInfos")
    ), 
        cms.PSet(
            parameters = cms.PSet(
                categoryVariable = cms.string('vertexCategory'),
                categories = cms.VPSet(cms.PSet(
                    trackPPar = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(250.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackSumJetEtRatio = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(4.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    trackMomentum = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(250.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackEtaRel = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(9.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(1.3)
                    ),
                    trackSip2dSig = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-50.0)
                    ),
                    trackSip3dSig = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-50.0)
                    ),
                    trackPParRatio = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(1.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.86)
                    ),
                    trackSip3dVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(3.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-3.0)
                    ),
                    trackDecayLenVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(50.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackJetDist = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-10.0)
                    ),
                    trackSip2dVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.2),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-0.2)
                    ),
                    trackPtRel = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(20.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackPtRatio = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.5),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackDeltaR = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.3),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackSip2dSigAboveCharm = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(-50.0)
                    ),
                    trackSip3dSigAboveCharm = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(-50.0)
                    ),
                    vertexCategory = cms.PSet(
                        logScale = cms.bool(False),
                        max = cms.double(2.5),
                        nBins = cms.uint32(3),
                        min = cms.double(-0.5)
                    ),
                    trackSumJetDeltaR = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(0.3),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexMass = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexNTracks = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(20.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexJetDeltaR = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(0.5),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexEnergyRatio = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(1.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance3dVal = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.01)
                    ),
                    flightDistance3dSig = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance2dSig = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(3.0)
                    ),
                    jetNSecondaryVertices = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance2dVal = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(2.5),
                        nBins = cms.uint32(50),
                        min = cms.double(0.01)
                    )
                ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexMass = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexNTracks = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexEnergyRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance3dVal = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.01)
                        ),
                        flightDistance3dSig = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance2dSig = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(3.0)
                        ),
                        jetNSecondaryVertices = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance2dVal = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(2.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.01)
                        )
                    ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexMass = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexNTracks = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexEnergyRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        )
                    ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        )
                    ))
            ),
            folder = cms.string('CSVTag'),
            type = cms.string('GenericMVA'),
            ipTagInfos = cms.InputTag("impactParameterTagInfos"),
            svTagInfos = cms.InputTag("secondaryVertexTagInfos"),
            label = cms.InputTag("combinedSecondaryVertex")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-5.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(15.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('TCHE'),
            label = cms.InputTag("trackCountingHighEffBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-5.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(15.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('TCHP'),
            label = cms.InputTag("trackCountingHighPurBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(2.6),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('JP'),
            label = cms.InputTag("jetProbabilityBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('JBP'),
            label = cms.InputTag("jetBProbabilityBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(0.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SSVHE'),
            label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(0.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SSVHP'),
            label = cms.InputTag("simpleSecondaryVertexHighPurBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('CSV'),
            label = cms.InputTag("combinedSecondaryVertexBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('CSVMVA'),
            label = cms.InputTag("combinedSecondaryVertexMVABJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('GhTrk'),
            label = cms.InputTag("ghostTrackBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMT'),
            label = cms.InputTag("softMuonBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-10.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(30.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMTIP3d'),
            label = cms.InputTag("softMuonByIP3dBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.01),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(8.01),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMTPt'),
            label = cms.InputTag("softMuonByPtBJetTags")
        )),
    mcPlots = cms.bool(False)
)


process.bphysicsOniaDQM = cms.EDAnalyzer("BPhysicsOniaDQM",
    MuonCollection = cms.InputTag("muons"),
    vertex = cms.InputTag("offlinePrimaryVertices")
)


process.bphysicsOniaDQMHI = cms.EDAnalyzer("BPhysicsOniaDQM",
    MuonCollection = cms.InputTag("muons"),
    vertex = cms.InputTag("hiSelectedVertex")
)


process.bxTiming = cms.EDAnalyzer("BxTiming",
    HistFolder = cms.untracked.string('L1T/BXSynch'),
    VerboseFlag = cms.untracked.int32(0),
    HistFile = cms.untracked.string(''),
    RunInFilterFarm = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    GtBitList = cms.untracked.vint32(0, 1),
    ReferenceFedId = cms.untracked.int32(813),
    GtSource = cms.untracked.InputTag("gtDigis"),
    FedSource = cms.untracked.InputTag("rawDataCollector")
)


process.calotowersAnalyzer = cms.EDAnalyzer("CaloTowersAnalyzer",
    CaloTowerCollectionLabel = cms.untracked.InputTag("towerMaker"),
    outputFile = cms.untracked.string(''),
    useAllHistos = cms.untracked.bool(False),
    hcalselector = cms.untracked.string('all')
)


process.castorOfflineMonitor = cms.EDAnalyzer("CastorMonitorModule",
    numberSigma = cms.untracked.double(1.5),
    ChannelQualityMonitor = cms.untracked.bool(True),
    pedestalsInFC = cms.untracked.bool(False),
    showTiming = cms.untracked.bool(False),
    PSMonitor = cms.untracked.bool(True),
    RecHitMonitor = cms.untracked.bool(True),
    CastorTowerLabel = cms.InputTag("CastorTowerReco"),
    DigiMonitor = cms.untracked.bool(True),
    DataIntMonitor = cms.untracked.bool(True),
    dThreshold = cms.untracked.double(1.0),
    digiLabel = cms.InputTag("castorDigis"),
    LastSignalBin = cms.untracked.int32(9),
    CastorRecHitLabel = cms.InputTag("castorreco"),
    HIMonitor = cms.untracked.bool(True),
    DigiInFC = cms.untracked.bool(False),
    OfflineMode = cms.untracked.bool(False),
    averageEnergyMethod = cms.untracked.bool(True),
    RecHitsPerChannel = cms.untracked.bool(True),
    dump2database = cms.untracked.bool(False),
    EDMonitor = cms.untracked.bool(False),
    LED_ADC_Thresh = cms.untracked.double(-1000.0),
    diagnosticPrescaleLS = cms.untracked.int32(-1),
    CastorBasicJetsLabel = cms.InputTag("ak7BasicJets"),
    diagnosticPrescaleUpdate = cms.untracked.int32(-1),
    CastorJetIDLabel = cms.InputTag("ak7CastorJetID"),
    FirstSignalBin = cms.untracked.int32(0),
    TowerJetMonitor = cms.untracked.bool(True),
    unpackerReportLabel = cms.InputTag("castorDigis"),
    thirdRegionThreshold = cms.untracked.double(100),
    LEDMonitor = cms.untracked.bool(True),
    diagnosticPrescaleTime = cms.untracked.int32(-1),
    LEDPerChannel = cms.untracked.bool(True),
    debug = cms.untracked.int32(0),
    DigiPerChannel = cms.untracked.bool(True),
    rawLabel = cms.InputTag("source"),
    nThreshold = cms.untracked.double(60)
)


process.cscMonitor = cms.EDAnalyzer("CSCOfflineMonitor",
    clctDigiTag = cms.InputTag("muonCSCDigis","MuonCSCCLCTDigi"),
    FEDRawDataCollectionTag = cms.InputTag("rawDataCollector"),
    stripDigiTag = cms.InputTag("muonCSCDigis","MuonCSCStripDigi"),
    outputFileName = cms.string('test.root'),
    cscRecHitTag = cms.InputTag("csc2DRecHits"),
    saveHistos = cms.bool(False),
    wireDigiTag = cms.InputTag("muonCSCDigis","MuonCSCWireDigi"),
    cscSegTag = cms.InputTag("cscSegments"),
    alctDigiTag = cms.InputTag("muonCSCDigis","MuonCSCALCTDigi")
)


process.dEdxAnalyzer = cms.EDAnalyzer("dEdxAnalyzer",
    dEdxParameters = cms.PSet(
        HIPdEdxMin = cms.double(3.5),
        dEdxMIPmassMin = cms.double(-0.5),
        dEdxMin = cms.double(0),
        doDeDxPlots = cms.bool(True),
        FolderName = cms.string('Tracking/dEdx'),
        dEdxNHitMin = cms.double(0),
        dEdxK = cms.double(2.529),
        dEdxMIPmassBin = cms.int32(100),
        deDxProducers = cms.vstring('dedxDQMHarm2SP', 
            'dedxDQMHarm2SO', 
            'dedxDQMHarm2PO'),
        dEdxC = cms.double(2.772),
        dEdxMax = cms.double(10.0),
        OutputFileName = cms.string('MonitorTrack.root'),
        dEdxHIPmassBin = cms.int32(51),
        TrackHitMin = cms.double(8),
        dEdxHIPmassMax = cms.double(5.05),
        TracksForDeDx = cms.string('generalTracks'),
        dEdxMIPmassMax = cms.double(24.5),
        dEdxHIPmassMin = cms.double(-0.05),
        dEdxBin = cms.int32(100),
        doAllPlots = cms.bool(False),
        OutputMEsInRootFile = cms.bool(False),
        dEdxNHitBin = cms.int32(30),
        dEdxNHitMax = cms.double(30.0)
    )
)


process.dEdxMonCommon = cms.EDAnalyzer("dEdxAnalyzer",
    dEdxParameters = cms.PSet(
        HIPdEdxMin = cms.double(3.5),
        dEdxMIPmassMin = cms.double(-0.5),
        dEdxMin = cms.double(0),
        doDeDxPlots = cms.bool(True),
        FolderName = cms.string('Tracking/dEdx'),
        dEdxNHitMin = cms.double(0),
        dEdxK = cms.double(2.529),
        dEdxMIPmassBin = cms.int32(100),
        deDxProducers = cms.vstring('dedxDQMHarm2SP', 
            'dedxDQMHarm2SO', 
            'dedxDQMHarm2PO'),
        dEdxC = cms.double(2.772),
        dEdxMax = cms.double(10.0),
        OutputFileName = cms.string('MonitorTrack.root'),
        dEdxHIPmassBin = cms.int32(51),
        TrackHitMin = cms.double(8),
        dEdxHIPmassMax = cms.double(5.05),
        TracksForDeDx = cms.string('generalTracks'),
        dEdxMIPmassMax = cms.double(24.5),
        dEdxHIPmassMin = cms.double(-0.05),
        dEdxBin = cms.int32(100),
        doAllPlots = cms.bool(False),
        OutputMEsInRootFile = cms.bool(False),
        dEdxNHitBin = cms.int32(30),
        dEdxNHitMax = cms.double(30.0)
    )
)


process.dEdxMonMB = cms.EDAnalyzer("dEdxAnalyzer",
    dEdxParameters = cms.PSet(
        HIPdEdxMin = cms.double(3.5),
        dEdxMIPmassMin = cms.double(-0.5),
        dEdxMin = cms.double(0),
        doDeDxPlots = cms.bool(True),
        FolderName = cms.string('Tracking/dEdx'),
        dEdxNHitMin = cms.double(0),
        dEdxK = cms.double(2.529),
        dEdxMIPmassBin = cms.int32(100),
        deDxProducers = cms.vstring('dedxDQMHarm2SP', 
            'dedxDQMHarm2SO', 
            'dedxDQMHarm2PO'),
        dEdxC = cms.double(2.772),
        dEdxMax = cms.double(10.0),
        OutputFileName = cms.string('MonitorTrack.root'),
        dEdxHIPmassBin = cms.int32(51),
        TrackHitMin = cms.double(8),
        dEdxHIPmassMax = cms.double(5.05),
        TracksForDeDx = cms.string('generalTracks'),
        dEdxMIPmassMax = cms.double(24.5),
        dEdxHIPmassMin = cms.double(-0.05),
        dEdxBin = cms.int32(100),
        doAllPlots = cms.bool(False),
        OutputMEsInRootFile = cms.bool(False),
        dEdxNHitBin = cms.int32(30),
        dEdxNHitMax = cms.double(30.0),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltPaths = cms.vstring('HLT_ZeroBias_*'),
        hltDBKey = cms.string('Tracker_MB'),
        errorReplyHlt = cms.bool(False),
        andOrHlt = cms.bool(True)
    )
)


process.dEdxMonMU = cms.EDAnalyzer("dEdxAnalyzer",
    dEdxParameters = cms.PSet(
        HIPdEdxMin = cms.double(3.5),
        dEdxMIPmassMin = cms.double(-0.5),
        dEdxMin = cms.double(0),
        doDeDxPlots = cms.bool(True),
        FolderName = cms.string('Tracking/dEdx'),
        dEdxNHitMin = cms.double(0),
        dEdxK = cms.double(2.529),
        dEdxMIPmassBin = cms.int32(100),
        deDxProducers = cms.vstring('dedxDQMHarm2SP', 
            'dedxDQMHarm2SO', 
            'dedxDQMHarm2PO'),
        dEdxC = cms.double(2.772),
        dEdxMax = cms.double(10.0),
        OutputFileName = cms.string('MonitorTrack.root'),
        dEdxHIPmassBin = cms.int32(51),
        TrackHitMin = cms.double(8),
        dEdxHIPmassMax = cms.double(5.05),
        TracksForDeDx = cms.string('generalTracks'),
        dEdxMIPmassMax = cms.double(24.5),
        dEdxHIPmassMin = cms.double(-0.05),
        dEdxBin = cms.int32(100),
        doAllPlots = cms.bool(False),
        OutputMEsInRootFile = cms.bool(False),
        dEdxNHitBin = cms.int32(30),
        dEdxNHitMax = cms.double(30.0),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltPaths = cms.vstring('HLT_SingleMu40_Eta2p1_*'),
        errorReplyHlt = cms.bool(False),
        andOrHlt = cms.bool(True)
    )
)


process.dqmCSCClient = cms.EDAnalyzer("CSCMonitorModule",
    BOOKING_XML_FILE = cms.FileInPath('DQM/CSCMonitorModule/data/emuDQMBooking.xml'),
    EventProcessor = cms.untracked.PSet(
        EFF_ERR_SIGFAIL = cms.untracked.double(5.0),
        FRAEFF_AUTO_UPDATE = cms.untracked.bool(False),
        EFF_NODATA_THRESHOLD = cms.untracked.double(0.99),
        FRAEFF_AUTO_UPDATE_START = cms.untracked.uint32(5),
        BINCHECK_MASK = cms.untracked.uint32(384563190),
        BINCHECKER_CRC_CLCT = cms.untracked.bool(True),
        EFF_COLD_SIGFAIL = cms.untracked.double(2.0),
        PROCESS_DDU = cms.untracked.bool(True),
        EFF_NODATA_SIGFAIL = cms.untracked.double(5.0),
        BINCHECKER_MODE_DDU = cms.untracked.bool(False),
        BINCHECKER_CRC_ALCT = cms.untracked.bool(True),
        EFF_HOT_THRESHOLD = cms.untracked.double(2.0),
        FOLDER_DDU = cms.untracked.string('CSC/DDU/'),
        BINCHECKER_CRC_CFEB = cms.untracked.bool(True),
        EVENTS_ECHO = cms.untracked.uint32(1000),
        DDU_CHECK_MASK = cms.untracked.uint32(4294959103),
        FRAEFF_SEPARATE_THREAD = cms.untracked.bool(False),
        PROCESS_EFF_PARAMETERS = cms.untracked.bool(False),
        EFF_HOT_SIGFAIL = cms.untracked.double(5.0),
        FOLDER_PAR = cms.untracked.string('CSC/EventInfo/reportSummaryContents/'),
        FRAEFF_AUTO_UPDATE_FREQ = cms.untracked.uint32(200),
        EFF_COLD_THRESHOLD = cms.untracked.double(0.1),
        FOLDER_EMU = cms.untracked.string('CSC/Summary/'),
        DDU_BINCHECK_MASK = cms.untracked.uint32(384563190),
        PROCESS_CSC = cms.untracked.bool(True),
        PROCESS_EFF_HISTOS = cms.untracked.bool(False),
        MO_FILTER = cms.untracked.vstring('+/^.*$/', 
            '-/All_Readout_Errors/', 
            '-/^DMB_.*$/', 
            '-/DDU_[0-9]+/', 
            '-/CSC_[0-9]+_[0-9]+/'),
        FOLDER_CSC = cms.untracked.string('CSC/CSC/'),
        EFF_ERR_THRESHOLD = cms.untracked.double(0.1),
        BINCHECKER_OUTPUT = cms.untracked.bool(False),
        FOLDER_FED = cms.untracked.string('CSC/FED/')
    ),
    PREBOOK_EFF_PARAMS = cms.untracked.bool(False),
    InputObjects = cms.untracked.InputTag("rawDataCollector")
)


process.dqmDcsInfo = cms.EDAnalyzer("DQMDcsInfo",
    subSystemFolder = cms.untracked.string('Info'),
    dcsInfoFolder = cms.untracked.string('DcsInfo')
)


process.dqmElectronAnalysis = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    LhitsMax = cms.double(10.0),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    NbinPhi2D = cms.int32(32),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    MeeMax = cms.double(150.0),
    Selection = cms.int32(1),
    NbinDphiMatch = cms.int32(100),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    PopTrueMin = cms.double(0.0),
    MinEopEndcaps = cms.double(0.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    NbinFhits = cms.int32(30),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    MinPt = cms.double(0.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    MaxDphiBarrel = cms.double(10000.0),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    DphiMatchMin = cms.double(-0.2),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisAllElectrons = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(0),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele2_All'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisSelectionEt = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(1),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele3_Et10'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisSelectionEtIso = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(2),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele4_Et10TkIso1'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronGeneralAnalysis = cms.EDAnalyzer("ElectronGeneralAnalyzer",
    ElectronCollection = cms.InputTag("gsfElectrons"),
    OutputFile = cms.string(''),
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    FinalStep = cms.string('AtRunEnd'),
    Verbosity = cms.untracked.int32(0),
    OutputFolderName = cms.string('Egamma/Electrons/Ele1_General'),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    InputFile = cms.string(''),
    InputFolderName = cms.string('Egamma/Electrons/General'),
    TrackCollection = cms.InputTag("generalTracks")
)


process.dqmElectronTagProbeAnalysis = cms.EDAnalyzer("ElectronTagProbeAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    LhitsMax = cms.double(10.0),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MassHigh = cms.double(120),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    NbinPhi2D = cms.int32(32),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MeeMax = cms.double(150.0),
    Selection = cms.int32(3),
    NbinDphiMatch = cms.int32(100),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    PopTrueMin = cms.double(0.0),
    MinEopEndcaps = cms.double(0.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    ProbeEtCut = cms.bool(False),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    VertexCollection = cms.InputTag(""),
    MaxAbsEta = cms.double(2.5),
    NbinFhits = cms.int32(30),
    DetaMatchMin = cms.double(-0.05),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    MinPt = cms.double(0.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    SelectNotEbEeGap = cms.bool(False),
    ProbeCheckClass = cms.bool(False),
    TpCheckSign = cms.bool(True),
    MaxTipBarrel = cms.double(10000.0),
    MaxDphiBarrel = cms.double(10000.0),
    SelectTrackerDriven = cms.bool(False),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MassLow = cms.double(60),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    DphiMatchMin = cms.double(-0.2),
    InputFolderName = cms.string('Egamma/Electrons/TagAndProbe'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele5_TagAndProbe'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    NbinDphiMatch2D = cms.int32(50),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    TagCheckClass = cms.bool(False),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmEnvHLT = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('HLT'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvL1T = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('L1T'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvL1TEMU = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('L1TEMU'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvL1TriggerReco = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('L1T/L1TriggerVsReco'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmInfo = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Pixel')
)


process.dqmInfoDT = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('DT')
)


process.dqmInfoEcal = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Ecal')
)


process.dqmInfoHcal = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Hcal')
)


process.dqmInfoMuons = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Muons')
)


process.dqmInfoSiStrip = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('SiStrip')
)


process.dqmInfoTauV = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('RecoTauV')
)


process.dtAlcaResolutionMonitor = cms.EDAnalyzer("DTResolutionAnalysisTask",
    recHits4DLabel = cms.string('dt4DSegments'),
    topHistoFolder = cms.untracked.string('AlCaReco/DtCalibSynch/01-Calibration'),
    phiHitsCut = cms.untracked.uint32(6),
    zHitsCut = cms.untracked.uint32(3),
    ResetCycle = cms.untracked.int32(10000)
)


process.dtAlcaResolutionMonitorCosmics = cms.EDAnalyzer("DTResolutionAnalysisTask",
    recHits4DLabel = cms.string('dt4DSegments'),
    topHistoFolder = cms.untracked.string('AlCaReco/DtCalibSynchCosmics/01-Calibration'),
    phiHitsCut = cms.untracked.uint32(6),
    zHitsCut = cms.untracked.uint32(3),
    ResetCycle = cms.untracked.int32(10000)
)


process.dtDCSByLumiMonitor = cms.EDAnalyzer("DTDCSByLumiTask")


process.dtEfficiencyMonitor = cms.EDAnalyzer("DTChamberEfficiency",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    cscSegments = cms.InputTag("dummy"),
    theMinNrec = cms.double(20.0),
    RPCLayers = cms.bool(False),
    NavigationType = cms.string('Standard'),
    theMaxChi2 = cms.double(1000.0),
    TrackCollection = cms.InputTag("standAloneSETMuons"),
    theRPCRecHits = cms.InputTag("dummy"),
    debug = cms.untracked.bool(True),
    dt4DSegments = cms.InputTag("dt4DSegments"),
    theNSigma = cms.double(3.0)
)


process.dtPreCalibTask = cms.EDAnalyzer("DTPreCalibrationTask",
    SaveFile = cms.untracked.bool(True),
    minTriggerWidth = cms.untracked.int32(0),
    outputFileName = cms.untracked.string('DigiHistos.root'),
    folderName = cms.untracked.string(''),
    digiLabel = cms.untracked.string('muonDTDigis'),
    maxTriggerWidth = cms.untracked.int32(1600)
)


process.dtPreCalibrationTaskAlca = cms.EDAnalyzer("DTPreCalibrationTask",
    SaveFile = cms.untracked.bool(False),
    minTriggerWidth = cms.untracked.int32(0),
    outputFileName = cms.untracked.string('DigiHistos.root'),
    folderName = cms.untracked.string('AlCaReco/DtCalibSynch/01-Calibration'),
    digiLabel = cms.untracked.string('muonDTDigis'),
    maxTriggerWidth = cms.untracked.int32(1600)
)


process.dtPreCalibrationTaskAlcaCosmics = cms.EDAnalyzer("DTPreCalibrationTask",
    SaveFile = cms.untracked.bool(False),
    minTriggerWidth = cms.untracked.int32(0),
    outputFileName = cms.untracked.string('DigiHistos.root'),
    folderName = cms.untracked.string('AlCaReco/DtCalibSynchCosmics/01-Calibration'),
    digiLabel = cms.untracked.string('muonDTDigis'),
    maxTriggerWidth = cms.untracked.int32(1600)
)


process.dtResolutionAnalysisMonitor = cms.EDAnalyzer("DTResolutionAnalysisTask",
    recHits4DLabel = cms.string('dt4DSegments'),
    topHistoFolder = cms.untracked.string('DT/02-Segments'),
    phiHitsCut = cms.untracked.uint32(6),
    zHitsCut = cms.untracked.uint32(3),
    ResetCycle = cms.untracked.int32(10000)
)


process.dtRunConditionVar = cms.EDAnalyzer("DTRunConditionVar",
    debug = cms.untracked.bool(False),
    recoSegments = cms.InputTag("dt4DSegments"),
    nMinHitsPhi = cms.untracked.int32(5),
    maxAnglePhiSegm = cms.untracked.double(30.0)
)


process.dtSegmentAnalysisMonitor = cms.EDAnalyzer("DTSegmentAnalysisTask",
    nhitsCut = cms.untracked.int32(11),
    checkNoisyChannels = cms.untracked.bool(True),
    slideTimeBins = cms.untracked.bool(False),
    hltDQMMode = cms.untracked.bool(False),
    nLSTimeBin = cms.untracked.int32(5),
    phiSegmCut = cms.untracked.double(30.0),
    recHits4DLabel = cms.string('dt4DSegments'),
    nTimeBins = cms.untracked.int32(100),
    debug = cms.untracked.bool(False),
    topHistoFolder = cms.untracked.string('DT/02-Segments'),
    detailedAnalysis = cms.untracked.bool(True)
)


process.dtSegmentsMonitor = cms.EDAnalyzer("DTSegmentsTask",
    OutputMEsInRootFile = cms.bool(False),
    checkNoisyChannels = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    recHits4DLabel = cms.string('dt4DSegments'),
    OutputFileName = cms.string('SegmentsMonitoring.root')
)


process.dtTriggerEfficiencyMonitor = cms.EDAnalyzer("DTTriggerEfficiencyTask",
    processDCC = cms.untracked.bool(True),
    processDDU = cms.untracked.bool(True),
    inputTagSEG = cms.untracked.InputTag("dt4DSegments"),
    inputTagMuons = cms.untracked.InputTag("muons"),
    inputTagDDU = cms.untracked.InputTag("muonDTDigis"),
    minBXDDU = cms.untracked.int32(7),
    nMinHitsPhi = cms.untracked.int32(5),
    maxBXDDU = cms.untracked.int32(15),
    phiAccRange = cms.untracked.double(30.0),
    inputTagDCC = cms.untracked.InputTag("dttfDigis"),
    SegmArbitration = cms.untracked.string('SegmentAndTrackArbitration'),
    inputTagGMT = cms.untracked.InputTag("gtDigis"),
    detailedAnalysis = cms.untracked.bool(False)
)


process.dtTriggerSynchMonitor = cms.EDAnalyzer("DTLocalTriggerSynchTask",
    DCCInputTag = cms.InputTag("dttfDigis"),
    angleRange = cms.double(30.0),
    tTrigMode = cms.string('DTTTrigSyncFromDB'),
    baseDir = cms.string('AlCaReco/DtCalibSynch/02-Synchronization'),
    SEGInputTag = cms.InputTag("dt4DSegmentsNoWire"),
    staticBooking = cms.untracked.bool(True),
    rangeWithinBX = cms.bool(False),
    nBXLow = cms.int32(-2),
    nBXHigh = cms.int32(3),
    DDUInputTag = cms.InputTag("muonDTDigis"),
    bxTimeInterval = cms.double(25),
    tTrigModeConfig = cms.PSet(
        vPropWire = cms.double(24.4),
        doTOFCorrection = cms.bool(False),
        tofCorrType = cms.int32(0),
        wirePropCorrType = cms.int32(0),
        tTrigLabel = cms.string(''),
        doWirePropCorrection = cms.bool(False),
        doT0Correction = cms.bool(False),
        debug = cms.untracked.bool(False)
    ),
    minHitsPhi = cms.int32(7)
)


process.ecalBarrelClusterTask = cms.EDAnalyzer("EBClusterTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    BasicClusterCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalBarrel'),
    SuperClusterCollection = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalBarrelClusterTaskExtras = cms.EDAnalyzer("EBClusterTaskExtras",
    l1GlobalMuonReadoutRecord = cms.InputTag("gtDigis"),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    l1GlobalReadoutRecord = cms.InputTag("gtDigis"),
    BasicClusterCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    SuperClusterCollection = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalBarrelCosmicTask = cms.EDAnalyzer("EBCosmicTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelDaqInfoTask = cms.EDAnalyzer("EBDaqInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelDataCertificationTask = cms.EDAnalyzer("EBDataCertificationTask",
    cloneME = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelDcsInfoTask = cms.EDAnalyzer("EBDcsInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelHltTask = cms.EDAnalyzer("EBHltTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    EBDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    EBDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EBDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EBDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    enableCleanup = cms.untracked.bool(False),
    folderName = cms.untracked.string('FEDIntegrity'),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalBarrelIntegrityTask = cms.EDAnalyzer("EBIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    subfolder = cms.untracked.string(''),
    EBDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    EBDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EBDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EBDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalBarrelLaserTask = cms.EDAnalyzer("EBLaserTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    laserWavelengths = cms.untracked.vint32(1, 2, 3, 4),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelMonitorModule = cms.EDAnalyzer("EcalBarrelMonitorModule",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    runNumber = cms.untracked.int32(0),
    enableEventDisplay = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    runType = cms.untracked.int32(-1),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    debug = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelOccupancyTask = cms.EDAnalyzer("EBOccupancyTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    subfolder = cms.untracked.string(''),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalDigis"),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalBarrelPedestalOnlineTask = cms.EDAnalyzer("EBPedestalOnlineTask",
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False),
    subfolder = cms.untracked.string('')
)


process.ecalBarrelPedestalTask = cms.EDAnalyzer("EBPedestalTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelRawDataTask = cms.EDAnalyzer("EBRawDataTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    subfolder = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelRecoSummary = cms.EDAnalyzer("EBRecoSummary",
    superClusterCollection_EB = cms.InputTag("correctedHybridSuperClusters"),
    redRecHitCollection_EB = cms.InputTag("reducedEcalRecHitsEB"),
    ethrEB = cms.double(0.8),
    scEtThrEB = cms.double(0.0),
    prefixME = cms.untracked.string('EcalBarrel'),
    recHitCollection_EB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    basicClusterCollection_EB = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters")
)


process.ecalBarrelSelectiveReadoutTask = cms.EDAnalyzer("EBSelectiveReadoutTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    dccWeights = cms.vdouble(-0.374, -0.374, -0.3629, 0.2721, 0.4681, 
        0.3707),
    enableCleanup = cms.untracked.bool(False),
    EBUsuppressedDigiCollection = cms.InputTag("ecalUnsuppressedDigis"),
    configFromCondDB = cms.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    ecalDccZs1stSample = cms.int32(2),
    EBSRFlagCollection = cms.InputTag("ecalDigis"),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalBarrelStatusFlagsTask = cms.EDAnalyzer("EBStatusFlagsTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    subfolder = cms.untracked.string('')
)


process.ecalBarrelTestPulseTask = cms.EDAnalyzer("EBTestPulseTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelTimingTask = cms.EDAnalyzer("EBTimingTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    L1GtEvmReadoutRecord = cms.InputTag("l1GtEvmUnpack"),
    prefixME = cms.untracked.string('EcalBarrel'),
    useBeamStatus = cms.untracked.bool(False)
)


process.ecalBarrelTriggerTowerTask = cms.EDAnalyzer("EBTriggerTowerTask",
    mergeRuns = cms.untracked.bool(False),
    EcalTrigPrimDigiCollectionReal = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    HLTCaloHLTBit = cms.untracked.string('HLT_EgammaSuperClusterOnly_L1R'),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    OutputRootFile = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalTrigPrimDigiCollectionEmul = cms.InputTag("valEcalTriggerPrimitiveDigis"),
    HLTMuonHLTBit = cms.untracked.string('HLT_L1MuOpen'),
    HLTResultsCollection = cms.InputTag("TriggerResults")
)


process.ecalEndcapClusterTask = cms.EDAnalyzer("EEClusterTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    BasicClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalEndcap'),
    SuperClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters")
)


process.ecalEndcapClusterTaskExtras = cms.EDAnalyzer("EEClusterTaskExtras",
    l1GlobalMuonReadoutRecord = cms.InputTag("gtDigis"),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    l1GlobalReadoutRecord = cms.InputTag("gtDigis"),
    BasicClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    SuperClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters")
)


process.ecalEndcapCosmicTask = cms.EDAnalyzer("EECosmicTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapDaqInfoTask = cms.EDAnalyzer("EEDaqInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapDataCertificationTask = cms.EDAnalyzer("EEDataCertificationTask",
    cloneME = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapDcsInfoTask = cms.EDAnalyzer("EEDcsInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapHltTask = cms.EDAnalyzer("EEHltTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    enableCleanup = cms.untracked.bool(False),
    folderName = cms.untracked.string('FEDIntegrity'),
    EEDetIdCollection0 = cms.InputTag("ecalEBunpacker","EcalIntegrityDCCSizeErrors"),
    EEDetIdCollection1 = cms.InputTag("ecalEBunpacker","EcalIntegrityGainErrors"),
    EEDetIdCollection2 = cms.InputTag("ecalEBunpacker","EcalIntegrityChIdErrors"),
    EEDetIdCollection3 = cms.InputTag("ecalEBunpacker","EcalIntegrityGainSwitchErrors"),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalEBunpacker","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalEBunpacker","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalEBunpacker","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalEBunpacker","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalEBunpacker","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalEBunpacker","EcalIntegrityBlockSizeErrors")
)


process.ecalEndcapIntegrityTask = cms.EDAnalyzer("EEIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    subfolder = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    EEDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    EEDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EEDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EEDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalEndcapLaserTask = cms.EDAnalyzer("EELaserTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    laserWavelengths = cms.untracked.vint32(1, 2, 3, 4),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapLedTask = cms.EDAnalyzer("EELedTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker"),
    ledWavelengths = cms.untracked.vint32(1, 2)
)


process.ecalEndcapMonitorModule = cms.EDAnalyzer("EcalEndcapMonitorModule",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False),
    runNumber = cms.untracked.int32(0),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    enableEventDisplay = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    runType = cms.untracked.int32(-1),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    debug = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapOccupancyTask = cms.EDAnalyzer("EEOccupancyTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    subfolder = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    mergeRuns = cms.untracked.bool(False),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalDigis")
)


process.ecalEndcapPedestalOnlineTask = cms.EDAnalyzer("EEPedestalOnlineTask",
    mergeRuns = cms.untracked.bool(False),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False),
    subfolder = cms.untracked.string('')
)


process.ecalEndcapPedestalTask = cms.EDAnalyzer("EEPedestalTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    enableCleanup = cms.untracked.bool(False),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    mergeRuns = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapRawDataTask = cms.EDAnalyzer("EERawDataTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    subfolder = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapRecoSummary = cms.EDAnalyzer("EERecoSummary",
    superClusterCollection_EE = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    ethrEE = cms.double(1.2),
    redRecHitCollection_EE = cms.InputTag("reducedEcalRecHitsEE"),
    scEtThrEE = cms.double(0.0),
    basicClusterCollection_EE = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    recHitCollection_EE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapSelectiveReadoutTask = cms.EDAnalyzer("EESelectiveReadoutTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    dccWeights = cms.vdouble(-0.374, -0.374, -0.3629, 0.2721, 0.4681, 
        0.3707),
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    configFromCondDB = cms.bool(False),
    EESRFlagCollection = cms.InputTag("ecalDigis"),
    ecalDccZs1stSample = cms.int32(2),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EEUsuppressedDigiCollection = cms.InputTag("ecalUnsuppressedDigis")
)


process.ecalEndcapStatusFlagsTask = cms.EDAnalyzer("EEStatusFlagsTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    subfolder = cms.untracked.string('')
)


process.ecalEndcapTestPulseTask = cms.EDAnalyzer("EETestPulseTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapTimingTask = cms.EDAnalyzer("EETimingTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    L1GtEvmReadoutRecord = cms.InputTag("l1GtEvmUnpack"),
    prefixME = cms.untracked.string('EcalEndcap'),
    useBeamStatus = cms.untracked.bool(False)
)


process.ecalEndcapTriggerTowerTask = cms.EDAnalyzer("EETriggerTowerTask",
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EcalTrigPrimDigiCollectionReal = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    HLTCaloHLTBit = cms.untracked.string('HLT_EgammaSuperClusterOnly_L1R'),
    OutputRootFile = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalTrigPrimDigiCollectionEmul = cms.InputTag("valEcalTriggerPrimitiveDigis"),
    HLTMuonHLTBit = cms.untracked.string('HLT_L1MuOpen'),
    HLTResultsCollection = cms.InputTag("TriggerResults")
)


process.ecalPreshowerFEDIntegrityTask = cms.EDAnalyzer("ESFEDIntegrityTask",
    OutputFile = cms.untracked.string(''),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    ESKChipCollections = cms.InputTag("ecalPreshowerDigis"),
    FEDDirName = cms.untracked.string('FEDIntegrity'),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalPreshowerIntegrityTask = cms.EDAnalyzer("ESIntegrityTask",
    OutputFile = cms.untracked.string(''),
    DoLumiAnalysis = cms.bool(True),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    ESKChipCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower'),
    LookupTable = cms.untracked.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat')
)


process.ecalPreshowerOccupancyTask = cms.EDAnalyzer("ESOccupancyTask",
    DigiLabel = cms.InputTag("ecalPreshowerDigis"),
    RecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalPreshowerRawDataTask = cms.EDAnalyzer("ESRawDataTask",
    OutputFile = cms.untracked.string(''),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower'),
    FEDRawDataCollection = cms.InputTag("rawDataCollector")
)


process.ecalPreshowerRecoSummary = cms.EDAnalyzer("ESRecoSummary",
    superClusterCollection_EE = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    ClusterCollectionY_ES = cms.InputTag("multi5x5SuperClustersWithPreshower","preshowerYClusters"),
    ClusterCollectionX_ES = cms.InputTag("multi5x5SuperClustersWithPreshower","preshowerXClusters"),
    prefixME = cms.untracked.string('EcalPreshower'),
    recHitCollection_ES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
)


process.ecalPreshowerTrendTask = cms.EDAnalyzer("ESTrendTask",
    RecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalzmasstask = cms.EDAnalyzer("EcalZmassTask",
    electronCollection = cms.InputTag("gsfElectrons"),
    prefixME = cms.untracked.string('EcalCalibration'),
    gsftracks_h = cms.InputTag("electronGsfTracks")
)


process.effPlotter = cms.EDAnalyzer("EfficiencyPlotter",
    phiMin = cms.double(-3.2),
    ptBin = cms.int32(10),
    vtxMax = cms.double(40.5),
    vtxMin = cms.double(0.5),
    vtxBin = cms.int32(10),
    ptMin = cms.double(10),
    etaMin = cms.double(-2.5),
    etaBin = cms.int32(8),
    phiBin = cms.int32(8),
    ptMax = cms.double(100),
    etaMax = cms.double(2.5),
    phiMax = cms.double(3.2)
)


process.efficienciesRealData = cms.EDAnalyzer("TauDQMHistEffProducer",
    plots = cms.PSet(
        shrinkingConePFTauProducerLeadingPionRealDataIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_Matched/shrinkingConePFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_Matched/PFJetMatchingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDLeadingTrackFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/shrinkingConePFTauDiscriminationByLeadingTrackFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/LeadingTrackFindingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDLeadingPionPtCutEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/shrinkingConePFTauDiscriminationByLeadingPionPtCut_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/LeadingPionPtCutEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDTrackIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/TrackIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDECALIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/ECALIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationAgainstElectron/shrinkingConePFTauDiscriminationAgainstElectron_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationAgainstElectron/AgainstElectronEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealDataIDMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationAgainstMuon/shrinkingConePFTauDiscriminationAgainstMuon_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealData_shrinkingConePFTauDiscriminationAgainstMuon/AgainstMuonEff#PAR#')
        ),
        HPSIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_Matched/hpsPFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_Matched/PFJetMatchingEff#PAR#')
        ),
        HPSIDDecayModeFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByDecayModeFinding/hpsPFTauDiscriminationByDecayModeFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByDecayModeFinding/DecayModeFindingEff#PAR#')
        ),
        HPSIDVLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByVLooseChargedIsolation/hpsPFTauDiscriminationByVLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByVLooseChargedIsolation/VLooseChargedIsolationEff#PAR#')
        ),
        HPSIDLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseChargedIsolation/hpsPFTauDiscriminationByLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseChargedIsolation/LooseChargedIsolationEff#PAR#')
        ),
        HPSIDTightChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightChargedIsolation/hpsPFTauDiscriminationByTightChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightChargedIsolation/TightChargedIsolationEff#PAR#')
        ),
        HPSIDLooseIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseIsolation/hpsPFTauDiscriminationByLooseIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseIsolation/LooseIsolationEff#PAR#')
        ),
        HPSIDVLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/VLooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/LooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDMediumCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/MediumCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDTightCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/TightCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseElectronRejection/hpsPFTauDiscriminationByLooseElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseElectronRejection/LooseElectronRejectionEff#PAR#')
        ),
        HPSIDMediumElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumElectronRejection/hpsPFTauDiscriminationByMediumElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumElectronRejection/MediumElectronRejectionEff#PAR#')
        ),
        HPSIDTightElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightElectronRejection/hpsPFTauDiscriminationByTightElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightElectronRejection/TightElectronRejectionEff#PAR#')
        ),
        HPSIDLooseMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseMuonRejection/hpsPFTauDiscriminationByLooseMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByLooseMuonRejection/LooseMuonRejectionEff#PAR#')
        ),
        HPSIDMediumMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumMuonRejection/hpsPFTauDiscriminationByMediumMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMediumMuonRejection/MediumMuonRejectionEff#PAR#')
        ),
        HPSIDTightMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightMuonRejection/hpsPFTauDiscriminationByTightMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByTightMuonRejection/TightMuonRejectionEff#PAR#')
        ),
        HPSIDMVAElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMVAElectronRejection/hpsPFTauDiscriminationByMVAElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealData_hpsPFTauDiscriminationByMVAElectronRejection/MVAElectronRejectionEff#PAR#')
        )
    )
)


process.efficienciesRealElectronsData = cms.EDAnalyzer("TauDQMHistEffProducer",
    plots = cms.PSet(
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_Matched/shrinkingConePFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_Matched/PFJetMatchingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDLeadingTrackFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/shrinkingConePFTauDiscriminationByLeadingTrackFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/LeadingTrackFindingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDLeadingPionPtCutEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/shrinkingConePFTauDiscriminationByLeadingPionPtCut_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/LeadingPionPtCutEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDTrackIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/TrackIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDECALIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/ECALIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationAgainstElectron/shrinkingConePFTauDiscriminationAgainstElectron_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationAgainstElectron/AgainstElectronEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealElectronsDataIDMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationAgainstMuon/shrinkingConePFTauDiscriminationAgainstMuon_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealElectronsData_shrinkingConePFTauDiscriminationAgainstMuon/AgainstMuonEff#PAR#')
        ),
        HPSIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_Matched/hpsPFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_Matched/PFJetMatchingEff#PAR#')
        ),
        HPSIDDecayModeFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByDecayModeFinding/hpsPFTauDiscriminationByDecayModeFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByDecayModeFinding/DecayModeFindingEff#PAR#')
        ),
        HPSIDVLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByVLooseChargedIsolation/hpsPFTauDiscriminationByVLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByVLooseChargedIsolation/VLooseChargedIsolationEff#PAR#')
        ),
        HPSIDLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseChargedIsolation/hpsPFTauDiscriminationByLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseChargedIsolation/LooseChargedIsolationEff#PAR#')
        ),
        HPSIDTightChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightChargedIsolation/hpsPFTauDiscriminationByTightChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightChargedIsolation/TightChargedIsolationEff#PAR#')
        ),
        HPSIDLooseIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseIsolation/hpsPFTauDiscriminationByLooseIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseIsolation/LooseIsolationEff#PAR#')
        ),
        HPSIDVLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/VLooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/LooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDMediumCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/MediumCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDTightCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/TightCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseElectronRejection/hpsPFTauDiscriminationByLooseElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseElectronRejection/LooseElectronRejectionEff#PAR#')
        ),
        HPSIDMediumElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumElectronRejection/hpsPFTauDiscriminationByMediumElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumElectronRejection/MediumElectronRejectionEff#PAR#')
        ),
        HPSIDTightElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightElectronRejection/hpsPFTauDiscriminationByTightElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightElectronRejection/TightElectronRejectionEff#PAR#')
        ),
        HPSIDLooseMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseMuonRejection/hpsPFTauDiscriminationByLooseMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByLooseMuonRejection/LooseMuonRejectionEff#PAR#')
        ),
        HPSIDMediumMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumMuonRejection/hpsPFTauDiscriminationByMediumMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMediumMuonRejection/MediumMuonRejectionEff#PAR#')
        ),
        HPSIDTightMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightMuonRejection/hpsPFTauDiscriminationByTightMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByTightMuonRejection/TightMuonRejectionEff#PAR#')
        ),
        HPSIDMVAElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMVAElectronRejection/hpsPFTauDiscriminationByMVAElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealElectronsData_hpsPFTauDiscriminationByMVAElectronRejection/MVAElectronRejectionEff#PAR#')
        )
    )
)


process.efficienciesRealMuonsData = cms.EDAnalyzer("TauDQMHistEffProducer",
    plots = cms.PSet(
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_Matched/shrinkingConePFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_Matched/PFJetMatchingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDLeadingTrackFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/shrinkingConePFTauDiscriminationByLeadingTrackFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByLeadingTrackFinding/LeadingTrackFindingEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDLeadingPionPtCutEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/shrinkingConePFTauDiscriminationByLeadingPionPtCut_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByLeadingPionPtCut/LeadingPionPtCutEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDTrackIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/TrackIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDECALIsolationUsingLeadingPionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/ECALIsolationUsingLeadingPionEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationAgainstElectron/shrinkingConePFTauDiscriminationAgainstElectron_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationAgainstElectron/AgainstElectronEff#PAR#')
        ),
        shrinkingConePFTauProducerLeadingPionRealMuonsDataIDMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationAgainstMuon/shrinkingConePFTauDiscriminationAgainstMuon_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPionRealMuonsData_shrinkingConePFTauDiscriminationAgainstMuon/AgainstMuonEff#PAR#')
        ),
        HPSIDMatchingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_Matched/hpsPFTauProducerMatched_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_Matched/PFJetMatchingEff#PAR#')
        ),
        HPSIDDecayModeFindingEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByDecayModeFinding/hpsPFTauDiscriminationByDecayModeFinding_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByDecayModeFinding/DecayModeFindingEff#PAR#')
        ),
        HPSIDVLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByVLooseChargedIsolation/hpsPFTauDiscriminationByVLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByVLooseChargedIsolation/VLooseChargedIsolationEff#PAR#')
        ),
        HPSIDLooseChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseChargedIsolation/hpsPFTauDiscriminationByLooseChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseChargedIsolation/LooseChargedIsolationEff#PAR#')
        ),
        HPSIDTightChargedIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightChargedIsolation/hpsPFTauDiscriminationByTightChargedIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightChargedIsolation/TightChargedIsolationEff#PAR#')
        ),
        HPSIDLooseIsolationEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseIsolation/hpsPFTauDiscriminationByLooseIsolation_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseIsolation/LooseIsolationEff#PAR#')
        ),
        HPSIDVLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/VLooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/LooseCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDMediumCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/MediumCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDTightCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/TightCombinedIsolationDBSumPtCorrEff#PAR#')
        ),
        HPSIDLooseElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseElectronRejection/hpsPFTauDiscriminationByLooseElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseElectronRejection/LooseElectronRejectionEff#PAR#')
        ),
        HPSIDMediumElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumElectronRejection/hpsPFTauDiscriminationByMediumElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumElectronRejection/MediumElectronRejectionEff#PAR#')
        ),
        HPSIDTightElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightElectronRejection/hpsPFTauDiscriminationByTightElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightElectronRejection/TightElectronRejectionEff#PAR#')
        ),
        HPSIDLooseMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseMuonRejection/hpsPFTauDiscriminationByLooseMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByLooseMuonRejection/LooseMuonRejectionEff#PAR#')
        ),
        HPSIDMediumMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(True),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumMuonRejection/hpsPFTauDiscriminationByMediumMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMediumMuonRejection/MediumMuonRejectionEff#PAR#')
        ),
        HPSIDTightMuonRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightMuonRejection/hpsPFTauDiscriminationByTightMuonRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByTightMuonRejection/TightMuonRejectionEff#PAR#')
        ),
        HPSIDMVAElectronRejectionEfficiencies = cms.PSet(
            stepByStep = cms.bool(False),
            denominator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
            parameter = cms.vstring('pt', 
                'eta', 
                'phi', 
                'pileup'),
            numerator = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMVAElectronRejection/hpsPFTauDiscriminationByMVAElectronRejection_vs_#PAR#TauVisible'),
            efficiency = cms.string('RecoTauV/hpsPFTauProducerRealMuonsData_hpsPFTauDiscriminationByMVAElectronRejection/MVAElectronRejectionEff#PAR#')
        )
    )
)


process.egHLTOffDQMSource = cms.EDAnalyzer("EgHLTOfflineSource",
    eleTightLooseTrigNames = cms.vstring(),
    phoTightLooseTrigNames = cms.vstring(),
    diEleTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames = cms.vstring(),
    eleHLTFilterNames2Leg = cms.vstring(),
    eleHLTFilterNames = cms.vstring('hltEle65CaloIdVTTrkIdTDphiFilter'),
    diPhoTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames2Leg = cms.vstring(),
    hltEleTrkIsolRSpan = cms.double(999999.0),
    cutMasks = cms.PSet(
        stdPho = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:isolEm:isolHad:isolPtTrks'),
        trigTPPho = cms.string('hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks'),
        stdEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm'),
        fakeEle = cms.string('et:detEta:hadem'),
        probeEle = cms.string('et:detEta'),
        tagEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm'),
        trigTPEle = cms.string('detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:hltIsolTrksEle:hltIsolHad:hltIsolEm')
    ),
    hltHadIsolOuterCone = cms.double(0.3),
    CaloTowers = cms.InputTag("towerMaker"),
    eleCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.01),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.09),
            maxHLTIsolEmOverEt = cms.double(0.07),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.004),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.04),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.06),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.1),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.01),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.04),
            maxHLTIsolEmOverEt = cms.double(0.05),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.007),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.025),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.03),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.025),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    hltHadIsolDepth = cms.int32(-1),
    hltHadIsolInnerCone = cms.double(0.0),
    binData = cms.PSet(
        energy = cms.PSet(
            max = cms.double(300.0),
            nr = cms.int32(60),
            min = cms.double(0.0)
        ),
        e1x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        et = cms.PSet(
            max = cms.double(155.0),
            nr = cms.int32(80),
            min = cms.double(-5.0)
        ),
        dEtaIn = cms.PSet(
            max = cms.double(0.02),
            nr = cms.int32(10),
            min = cms.double(-0.02)
        ),
        nVertex = cms.PSet(
            max = cms.double(21.0),
            nr = cms.int32(22),
            min = cms.double(-1.0)
        ),
        isolEm = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        massHigh = cms.PSet(
            max = cms.double(5000),
            nr = cms.int32(20),
            min = cms.double(0.0)
        ),
        etHigh = cms.PSet(
            max = cms.double(2025),
            nr = cms.int32(30),
            min = cms.double(25)
        ),
        sigEtaEta = cms.PSet(
            max = cms.double(0.05),
            nr = cms.int32(30),
            min = cms.double(-0.01)
        ),
        isolPtTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        charge = cms.PSet(
            max = cms.double(1.5),
            nr = cms.int32(2),
            min = cms.double(-1.5)
        ),
        deltaE = cms.PSet(
            max = cms.double(50.0),
            nr = cms.int32(50),
            min = cms.double(-50.0)
        ),
        maxr9 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        invEInvP = cms.PSet(
            max = cms.double(0.2),
            nr = cms.int32(10),
            min = cms.double(-0.2)
        ),
        phi = cms.PSet(
            max = cms.double(3.14),
            nr = cms.int32(16),
            min = cms.double(-3.14)
        ),
        eOverP = cms.PSet(
            max = cms.double(5),
            nr = cms.int32(12),
            min = cms.double(-1.0)
        ),
        isolNrTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        HLTeta = cms.PSet(
            max = cms.double(3.0),
            nr = cms.int32(30),
            min = cms.double(-3.0)
        ),
        dPhiIn = cms.PSet(
            max = cms.double(0.15),
            nr = cms.int32(10),
            min = cms.double(-0.15)
        ),
        err = cms.PSet(
            max = cms.double(100.5),
            nr = cms.int32(101),
            min = cms.double(-0.5)
        ),
        minr9 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        isolHad = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        etaVsPhi = cms.PSet(
            yMax = cms.double(3.14),
            nrY = cms.int32(8),
            nrX = cms.int32(15),
            xMax = cms.double(3.0),
            xMin = cms.double(-3.0),
            yMin = cms.double(-3.14)
        ),
        hOverE = cms.PSet(
            max = cms.double(0.1),
            nr = cms.int32(30),
            min = cms.double(0.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nr = cms.int32(30),
            min = cms.double(-3.0)
        ),
        mass = cms.PSet(
            max = cms.double(120),
            nr = cms.int32(26),
            min = cms.double(-10.0)
        ),
        e2x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        HLTenergy = cms.PSet(
            max = cms.double(300.0),
            nr = cms.int32(60),
            min = cms.double(0.0)
        ),
        HLTphi = cms.PSet(
            max = cms.double(3.14),
            nr = cms.int32(16),
            min = cms.double(-3.14)
        )
    ),
    EndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    calHLTEleTrkIsol = cms.bool(True),
    BeamSpotProducer = cms.InputTag("offlineBeamSpot"),
    IsolTrackCollection = cms.InputTag("generalTracks"),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    hltEMIsolOuterCone = cms.double(0.4),
    hltEMIsolEtMinEB = cms.double(-9999.0),
    DQMDirName = cms.string('HLT/EgOffline'),
    hltPhoTrkIsolRSpan = cms.double(999999.0),
    hltEMIsolInnerConeEE = cms.double(0.07),
    hltTag = cms.string('HLT'),
    BarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    hltPhoTrkIsolPtMin = cms.double(1.5),
    hltEleTrkIsolOuterCone = cms.double(0.2),
    hltEMIsolInnerConeEB = cms.double(0.045),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    calHLTPhoTrkIsol = cms.bool(False),
    hltHadIsolEtMin = cms.double(0.0),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    phoCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.011),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.011),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.031),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.031),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    hltEleTrkIsolZSpan = cms.double(0.1),
    calHLTEmIsol = cms.bool(True),
    calHLTHcalIsol = cms.bool(True),
    eleLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.01),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.09),
            maxHLTIsolEmOverEt = cms.double(0.07),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.004),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.04),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.06),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.1),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.01),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0.04),
            maxHLTIsolEmOverEt = cms.double(0.05),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.007),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.025),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.03),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0.025),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    phoLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.011),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(0.98),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.011),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.031),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.0),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.005),
            isolHadConstTerm = cms.double(3.0),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
            maxR9 = cms.double(999.0),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999.0),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5.0),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(3.0),
            isolPtTrksGradTerm = cms.double(0.002),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.031),
            isolEmGradTerm = cms.double(0.012),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    triggerCuts = cms.VPSet(),
    hltPhoTrkIsolZSpan = cms.double(999999.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    hltEMIsolEMinEB = cms.double(0.08),
    hltEMIsolEtaSliceEB = cms.double(0.02),
    hltEMIsolEtaSliceEE = cms.double(0.02),
    hltEMIsolEMinEE = cms.double(0.3),
    hltPhoTrkIsolInnerCone = cms.double(0.06),
    TrigResults = cms.InputTag("TriggerResults","","HLT"),
    filterInactiveTriggers = cms.bool(True),
    PhotonCollection = cms.InputTag("photons"),
    hltEleTrkIsolInnerCone = cms.double(0.02),
    hltPhoTrkIsolOuterCone = cms.double(0.3),
    CaloJetCollection = cms.InputTag("ak5CaloJets"),
    hltEMIsolEtMinEE = cms.double(-9999.0),
    hltEleTrkIsolPtMin = cms.double(1.5),
    hltPhoTrkIsolCountTrks = cms.bool(False)
)


process.ewkElecDQM = cms.EDAnalyzer("EwkElecDQM",
    ElecTrig = cms.untracked.vstring('HLT_Ele', 
        'HLT_DoubleEle', 
        'HLT_DoublePhoton', 
        'HLT_Photon', 
        'HLT_L1SingleEG'),
    MtMax = cms.untracked.double(999999.0),
    SieieBarrel = cms.untracked.double(0.01),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    METTag = cms.untracked.InputTag("met"),
    EcalIsoCutBarrel = cms.untracked.double(5.7),
    EcalIsoCutEndcap = cms.untracked.double(5.0),
    SieieEndcap = cms.untracked.double(0.028),
    TrkIsoCutEndcap = cms.untracked.double(5.1),
    JetTag = cms.untracked.InputTag("ak5PFJets"),
    MtMin = cms.untracked.double(-999999),
    NJetMax = cms.untracked.int32(999999),
    MetMin = cms.untracked.double(-999999.0),
    ElecTag = cms.untracked.InputTag("gsfElectrons"),
    METIncludesMuons = cms.untracked.bool(False),
    DetainBarrel = cms.untracked.double(0.0071),
    EJetMin = cms.untracked.double(30.0),
    HcalIsoCutEndcap = cms.untracked.double(3.4),
    PUMax = cms.untracked.uint32(60),
    TrkIsoCutBarrel = cms.untracked.double(7.2),
    MetMax = cms.untracked.double(999999.0),
    VertexTag = cms.untracked.InputTag("offlinePrimaryVertices"),
    EtaCut = cms.untracked.double(2.4),
    PtCut = cms.untracked.double(10.0),
    PUBinCount = cms.untracked.uint32(12),
    DetainEndcap = cms.untracked.double(0.0066),
    HcalIsoCutBarrel = cms.untracked.double(8.1)
)


process.ewkMuDQM = cms.EDAnalyzer("EwkMuDQM",
    MetMin = cms.untracked.double(-999999.0),
    PixelHitsCut = cms.untracked.int32(1),
    MtMax = cms.untracked.double(9999999),
    IsAlsoTrackerMuon = cms.untracked.bool(True),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    METTag = cms.untracked.InputTag("pfMet"),
    MetMax = cms.untracked.double(999999.0),
    TrigPathNames = cms.untracked.vstring('HLT_Mu', 
        'HLT_DoubleMu', 
        'HLT_IsoMu'),
    PtThrForZ2 = cms.untracked.double(10.0),
    PtThrForZ1 = cms.untracked.double(20.0),
    IsoCut03 = cms.untracked.double(0.1),
    TrackerHitsCut = cms.untracked.int32(11),
    JetTag = cms.untracked.InputTag("ak5PFJets"),
    MtMin = cms.untracked.double(50.0),
    NormalizedChi2Cut = cms.untracked.double(10.0),
    IsRelativeIso = cms.untracked.bool(True),
    NJetMax = cms.untracked.int32(999999),
    IsCombinedIso = cms.untracked.bool(True),
    MuonTag = cms.untracked.InputTag("muons"),
    NMatchesCut = cms.untracked.int32(2),
    EJetMin = cms.untracked.double(40.0),
    DxyCut = cms.untracked.double(0.2),
    AcopCut = cms.untracked.double(999.0),
    MuonHitsCut = cms.untracked.int32(1),
    VertexTag = cms.untracked.InputTag("offlinePrimaryVertices"),
    EtaCut = cms.untracked.double(2.1),
    PtCut = cms.untracked.double(25.0)
)


process.ewkMuLumiMonitorDQM = cms.EDAnalyzer("EwkMuLumiMonitorDQM",
    IsCombinedIso = cms.untracked.bool(False),
    IsoCut03 = cms.untracked.double(3.0),
    IsRelativeIso = cms.untracked.bool(False),
    ptThreshold = cms.untracked.double(0.0),
    DxyCut = cms.untracked.double(0.2),
    maxDPtRel = cms.untracked.double(1.0),
    calotower = cms.untracked.InputTag("towerMaker"),
    METIncludesMuons = cms.untracked.bool(True),
    acopCut = cms.untracked.double(999.0),
    mtMax = cms.untracked.double(999.0),
    tracks = cms.untracked.InputTag("generalTracks"),
    triggerEvent = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    etaMuCut = cms.untracked.double(2.1),
    maxDeltaR = cms.untracked.double(0.2),
    mtMin = cms.untracked.double(50.0),
    muons = cms.untracked.InputTag("muons"),
    metTag = cms.untracked.InputTag("pfMet"),
    ptMuCut = cms.untracked.double(20.0)
)


process.globalAnalyzer = cms.EDAnalyzer("HLTMuonOfflineAnalyzer",
    requiredTriggers = cms.untracked.vstring(),
    hltPathsToCheck = cms.vstring('HLT_PADimuon0_NoVertexing_v', 
        'HLT_PAL1DoubleMu0_HighQ_v', 
        'HLT_PAL1DoubleMuOpen_v', 
        'HLT_PAL2DoubleMu3_v', 
        'HLT_PAMu3_v', 
        'HLT_PAMu7_v', 
        'HLT_PAMu12_v', 
        'HLT_PABTagMu_Jet20_Mu4_v', 
        'HLT_PAMu3PFJet20_v', 
        'HLT_PAMu3PFJet40_v', 
        'HLT_PAMu7PFJet20_v', 
        'HLT_IsoMu20_eta2p1_v', 
        'HLT_IsoMu24_eta2p1_v', 
        'HLT_IsoMu24_v', 
        'HLT_IsoMu30_eta2p1_v', 
        'HLT_IsoMu30_v', 
        'HLT_IsoMu34_eta2p1_v', 
        'HLT_IsoMu40_eta2p1_v', 
        'HLT_L1SingleMu12_v', 
        'HLT_Mu12_v', 
        'HLT_Mu15_eta2p1_v', 
        'HLT_Mu17_v', 
        'HLT_Mu24_eta2p1_v', 
        'HLT_Mu30_eta2p1_v', 
        'HLT_Mu40_v', 
        'HLT_Mu40_eta2p1_v', 
        'HLT_Mu50_eta2p1_v', 
        'HLT_Mu5_v', 
        'HLT_Mu8_v', 
        'HLT_RelIso1p0Mu17_v', 
        'HLT_RelIso1p0Mu5_v', 
        'HLT_DoubleMu5_IsoMu5_v', 
        'HLT_Mu13_Mu8_v', 
        'HLT_Mu17_Mu8_v', 
        'HLT_Mu17_TkMu8_v', 
        'HLT_Mu22_TkMu22_v', 
        'HLT_Mu22_TkMu8_v', 
        'HLT_TripleMu5_v', 
        'HLT_DoubleMu11_Acoplanarity03_v', 
        'HLT_Mu40_eta2p1_Track50_dEdx3p6_v', 
        'HLT_Mu40_eta2p1_Track60_dEdx3p7_v'),
    destination = cms.untracked.string('HLT/Muon/DistributionsGlobal'),
    hltProcessName = cms.string('HLT'),
    plotCuts = cms.PSet(
        maxEta = cms.untracked.double(2.1),
        minPtFactor = cms.untracked.double(1.2),
        L3DeltaR = cms.untracked.double(0.05),
        L1DeltaR = cms.untracked.double(0.3),
        L2DeltaR = cms.untracked.double(0.3)
    ),
    probeParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.0'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.0')
    ),
    inputTags = cms.PSet(
        triggerResults = cms.InputTag("TriggerResults"),
        recoMuon = cms.InputTag("muons"),
        triggerSummary = cms.InputTag("hltTriggerSummaryAOD"),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    targetParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.4'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.4')
    ),
    binParams = cms.untracked.PSet(
        jpsiMass = cms.untracked.vdouble(60, 0.0, 6.0),
        resolutionRel = cms.untracked.vdouble(20, -0.15, 0.15),
        pt = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
            10.0, 20.0, 30.0, 40.0, 100.0, 
            200.0, 400.0),
        etaCoarse = cms.untracked.vdouble(-2.4, -2.1, -1.6, -1.2, -0.8, 
            0.0, 0.8, 1.2, 1.6, 2.1, 
            2.4),
        deltaR = cms.untracked.vdouble(20, 0.0, 0.05),
        resolutionEta = cms.untracked.vdouble(20, -0.01, 0.01),
        phi = cms.untracked.vdouble(20, -3.14, 3.14),
        ptCoarse = cms.untracked.vdouble(10.0, 20.0, 40.0, 60.0, 80.0, 
            100.0, 200.0),
        charge = cms.untracked.vdouble(2, -2.0, 2.0),
        eta = cms.untracked.vdouble(20, -2.4, 2.4),
        d0 = cms.untracked.vdouble(10, -0.5, 0.5),
        zMass = cms.untracked.vdouble(50, 65.0, 115.0),
        phiCoarse = cms.untracked.vdouble(10, -3.14, 3.14),
        z0 = cms.untracked.vdouble(10, -15.0, 15.0),
        resolutionPhi = cms.untracked.vdouble(20, -0.01, 0.01),
        NVertex = cms.untracked.vdouble(20, 1, 50)
    )
)


process.hcalBeamMonitor = cms.EDAnalyzer("HcalBeamMonitor",
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    mergeRuns = cms.untracked.bool(False),
    lumiqualitydir = cms.untracked.string(''),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    occupancyThresh = cms.untracked.double(0.0625),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    hotrate = cms.untracked.double(0.25),
    minEvents = cms.untracked.int32(500),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    minBadCells = cms.untracked.int32(10),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    Overwrite = cms.untracked.bool(False),
    TaskFolder = cms.untracked.string('BeamMonitor_Hcal/')
)


process.hcalCoarsePedestalMonitor = cms.EDAnalyzer("HcalCoarsePedestalMonitor",
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    ADCDiffThresh = cms.untracked.double(1.0),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('CoarsePedestalMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1),
    minEvents = cms.untracked.int32(25)
)


process.hcalDataIntegrityMonitor = cms.EDAnalyzer("HcalDataIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    UnpackerReportLabel = cms.untracked.InputTag("hcalDigis"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('FEDIntegrity/'),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalDeadCellMonitor = cms.EDAnalyzer("HcalDeadCellMonitor",
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    excludeHO1P02 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    test_rechits = cms.untracked.bool(True),
    excludeHORing2 = cms.untracked.bool(True),
    BadChannelStatusMask = cms.untracked.int32(34),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    MissingRechitEnergyThreshold = cms.untracked.double(-99.0),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    NLumiBlocks = cms.untracked.int32(4000),
    enableCleanup = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(True),
    test_digis = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    minDeadEventCount = cms.untracked.int32(1000),
    TaskFolder = cms.untracked.string('DeadCellMonitor_Hcal/')
)


process.hcalDetDiagLEDMonitor = cms.EDAnalyzer("HcalDetDiagLEDMonitor",
    triggerLabel = cms.untracked.InputTag("l1GtUnpack"),
    XmlFilePath = cms.untracked.string(''),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    enableCleanup = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1, 2, 3, 4, 5),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagLEDMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    calibDigiLabel = cms.untracked.InputTag("hcalDigis"),
    makeDiagnostics = cms.untracked.bool(False),
    OutputFilePath = cms.untracked.string(''),
    LEDMeanThreshold = cms.untracked.double(0.1),
    LEDReferenceData = cms.untracked.string(''),
    LEDRmsThreshold = cms.untracked.double(0.1)
)


process.hcalDetDiagLaserMonitor = cms.EDAnalyzer("HcalDetDiagLaserMonitor",
    LaserReferenceData = cms.untracked.string(''),
    XmlFilePath = cms.untracked.string(''),
    debug = cms.untracked.int32(0),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    enableCleanup = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1, 2, 3, 4, 5),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    calibDigiLabel = cms.untracked.InputTag("hcalDigis"),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagLaserMonitor_Hcal/'),
    LaserDatasetName = cms.untracked.string(''),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("source"),
    makeDiagnostics = cms.untracked.bool(False),
    LaserEnergyThreshold = cms.untracked.double(0.1),
    LaserTimingThreshold = cms.untracked.double(0.2),
    OutputFilePath = cms.untracked.string(''),
    Overwrite = cms.untracked.bool(True),
    htmlOutputPath = cms.untracked.string('')
)


process.hcalDetDiagNoiseMonitor = cms.EDAnalyzer("HcalDetDiagNoiseMonitor",
    UseMonitoringTrigger = cms.untracked.bool(False),
    PhysDeclaredRequirement = cms.untracked.string('HLT_PhysicsDeclared'),
    subSystemFolder = cms.untracked.string('Hcal/'),
    gtLabel = cms.untracked.InputTag("l1GtUnpack"),
    UseDB = cms.untracked.bool(False),
    MonitoringTriggerRequirement = cms.untracked.string('HLT_MET100'),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5),
    MaxJetHadronicEnergyFraction = cms.untracked.double(0.98),
    HLTriggerResults = cms.untracked.InputTag("TriggerResults","","HLT"),
    ConstituentsToJetMatchingDeltaR = cms.untracked.double(0.5),
    MetSource = cms.untracked.InputTag("met"),
    XmlFilePath = cms.untracked.string(''),
    TrackMaxIp = cms.untracked.double(0.1),
    skipOutOfOrderLS = cms.untracked.bool(True),
    rbxCollName = cms.untracked.string('hcalnoise'),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    SpikeThreshold = cms.untracked.double(0.5),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(False),
    UseVertexCuts = cms.untracked.bool(True),
    MinJetChargeFraction = cms.untracked.double(0.05),
    TrackSource = cms.untracked.InputTag("generalTracks"),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    RawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    OutputFilePath = cms.untracked.string(''),
    TrackMinThreshold = cms.untracked.double(1.0),
    JetMaxEta = cms.untracked.double(2.0),
    HPDthresholdLo = cms.untracked.double(10.0),
    JetSource = cms.untracked.InputTag("iterativeCone5CaloJets"),
    HPDthresholdHi = cms.untracked.double(49.0),
    VertexSource = cms.untracked.InputTag("offlinePrimaryVertices"),
    caloTowerCollName = cms.InputTag("towerMaker"),
    TaskFolder = cms.untracked.string('DetDiagNoiseMonitor_Hcal/'),
    JetMinEt = cms.untracked.double(10.0),
    Overwrite = cms.untracked.bool(True)
)


process.hcalDetDiagPedestalMonitor = cms.EDAnalyzer("HcalDetDiagPedestalMonitor",
    HEMeanTreshold = cms.untracked.double(0.2),
    subSystemFolder = cms.untracked.string('Hcal/'),
    HERmsTreshold = cms.untracked.double(0.3),
    HFMeanTreshold = cms.untracked.double(0.2),
    HFRmsTreshold = cms.untracked.double(0.3),
    HORmsTreshold = cms.untracked.double(0.3),
    XmlFilePath = cms.untracked.string(''),
    skipOutOfOrderLS = cms.untracked.bool(True),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1),
    PedestalDatasetName = cms.untracked.string(''),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    OutputFilePath = cms.untracked.string(''),
    HOMeanTreshold = cms.untracked.double(0.2),
    PedestalReferenceData = cms.untracked.string(''),
    htmlOutputPath = cms.untracked.string(''),
    HBMeanTreshold = cms.untracked.double(0.2),
    TaskFolder = cms.untracked.string('DetDiagPedestalMonitor_Hcal/'),
    rawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    HBRmsTreshold = cms.untracked.double(0.3),
    Overwrite = cms.untracked.bool(True)
)


process.hcalDetDiagTimingMonitor = cms.EDAnalyzer("HcalDetDiagTimingMonitor",
    GCTTriggerBit3 = cms.untracked.int32(17),
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    CosmicsCorr = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    gtLabel = cms.untracked.InputTag("l1GtUnpack"),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    GCTTriggerBit2 = cms.untracked.int32(16),
    GCTTriggerBit1 = cms.untracked.int32(15),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagTimingMonitor_Hcal/'),
    GCTTriggerBit5 = cms.untracked.int32(19),
    GCTTriggerBit4 = cms.untracked.int32(18),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(0),
    enableCleanup = cms.untracked.bool(False)
)


process.hcalDigiMonitor = cms.EDAnalyzer("HcalDigiMonitor",
    excludeHO1P02 = cms.untracked.bool(True),
    subSystemFolder = cms.untracked.string('Hcal/'),
    MinBiasHLTBits = cms.untracked.vstring('HLT_MinBiasPixel_SingleTrack', 
        'HLT_L1Tech_BSC_minBias', 
        'HLT_L1Tech_BSC_minBias_OR', 
        'HLT_L1Tech_BSC_minBias_threshold1_v2', 
        'HLT_ZeroBias'),
    shapeThresh = cms.untracked.int32(20),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    excludeHORing2 = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    minDigiSizeHF = cms.untracked.int32(4),
    maxDigiSizeHO = cms.untracked.int32(10),
    online = cms.untracked.bool(False),
    minDigiSizeHO = cms.untracked.int32(10),
    checkDVerr = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    maxDigiSizeHF = cms.untracked.int32(6),
    checkForMissingDigis = cms.untracked.bool(False),
    ExpectedOrbitMessageTime = cms.untracked.int32(3559),
    checkCapID = cms.untracked.bool(True),
    checkADCsum = cms.untracked.bool(True),
    NLumiBlocks = cms.untracked.int32(4000),
    makeDiagnostics = cms.untracked.bool(True),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    shapeThreshHB = cms.untracked.int32(20),
    shutOffOrbitTest = cms.untracked.bool(False),
    shapeThreshHE = cms.untracked.int32(20),
    shapeThreshHF = cms.untracked.int32(20),
    BadChannelStatusMask = cms.untracked.int32(34),
    minDigiSizeHBHE = cms.untracked.int32(10),
    shapeThreshHO = cms.untracked.int32(20),
    excludeBadQPLL = cms.untracked.bool(True),
    checkDigiSize = cms.untracked.bool(True),
    maxDigiSizeHBHE = cms.untracked.int32(10),
    TaskFolder = cms.untracked.string('DigiMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalHotCellMonitor = cms.EDAnalyzer("HcalHotCellMonitor",
    test_persistent = cms.untracked.bool(True),
    subSystemFolder = cms.untracked.string('Hcal/'),
    ETThreshold = cms.untracked.double(5.0),
    minErrorFlag = cms.untracked.double(0.1),
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    energyThreshold_HF = cms.untracked.double(20.0),
    persistentThreshold_HF = cms.untracked.double(10.0),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    ETThreshold_HF = cms.untracked.double(5.0),
    minEvents = cms.untracked.int32(200),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    persistentETThreshold = cms.untracked.double(3.0),
    energyThreshold = cms.untracked.double(10.0),
    NLumiBlocks = cms.untracked.int32(4000),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    test_et = cms.untracked.bool(True),
    test_neighbor = cms.untracked.bool(False),
    test_energy = cms.untracked.bool(False),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    TaskFolder = cms.untracked.string('HotCellMonitor_Hcal/'),
    persistentETThreshold_HF = cms.untracked.double(3.0),
    debug = cms.untracked.int32(0),
    persistentThreshold = cms.untracked.double(6.0)
)


process.hcalLSbyLSMonitor = cms.EDAnalyzer("HcalLSbyLSMonitor",
    mergeRuns = cms.untracked.bool(False),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('LSbyLS_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    TaskDirectories = cms.untracked.vstring('DeadCellMonitor_Hcal/', 
        'DigiMonitor_Hcal/', 
        'HotCellMonitor_Hcal/', 
        'BeamMonitor_Hcal/'),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    minEvents = cms.untracked.int32(1000)
)


process.hcalMonitor = cms.EDAnalyzer("HcalMonitorModule",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    enableCleanup = cms.untracked.bool(False),
    UnpackerReport = cms.untracked.InputTag("hcalDigis"),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0)
)


process.hcalNZSMonitor = cms.EDAnalyzer("HcalNZSMonitor",
    NZSeventPeriod = cms.untracked.int32(4096),
    mergeRuns = cms.untracked.bool(False),
    nzsHLTnames = cms.untracked.vstring('HLT_HcalPhiSym', 
        'HLT_HcalNZS_8E29'),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('NZSMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalNoiseMonitor = cms.EDAnalyzer("HcalNoiseMonitor",
    MaxE2E10 = cms.untracked.double(0.96),
    TotalZeroMinEnergy = cms.untracked.double(10),
    MinE2E10 = cms.untracked.double(0.7),
    E2E10MinEnergy = cms.untracked.double(50),
    NZSeventPeriod = cms.untracked.int32(4096),
    MaxADCZeros = cms.untracked.int32(10),
    mergeRuns = cms.untracked.bool(False),
    hbheDigiLabel = cms.untracked.InputTag("hcalDigis"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    noiseLabel = cms.untracked.InputTag("hcalnoise"),
    online = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(0),
    MaxHPDNoOtherHitCount = cms.untracked.int32(10),
    NLumiBlocks = cms.untracked.int32(4000),
    RawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    nzsHLTnames = cms.untracked.vstring('HLT_HcalPhiSym', 
        'HLT_HcalNZS_8E29'),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    MaxHPDHitCount = cms.untracked.int32(17),
    TaskFolder = cms.untracked.string('NoiseMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalNoiseRates = cms.EDAnalyzer("HcalNoiseRates",
    minRBXEnergy = cms.untracked.double(20.0),
    rbxCollName = cms.untracked.InputTag("hcalnoise"),
    outputFile = cms.untracked.string(''),
    useAllHistos = cms.untracked.bool(False),
    minHitEnergy = cms.untracked.double(1.5)
)


process.hcalRawDataMonitor = cms.EDAnalyzer("HcalRawDataMonitor",
    excludeHORing2 = cms.untracked.bool(False),
    mergeRuns = cms.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('RawDataMonitor_Hcal/'),
    online = cms.bool(False),
    debug = cms.untracked.int32(0),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalRecHitMonitor = cms.EDAnalyzer("HcalRecHitMonitor",
    collisiontimediffThresh = cms.untracked.double(10.0),
    subSystemFolder = cms.untracked.string('Hcal/'),
    MinBiasHLTBits = cms.untracked.vstring('HLT_Physics', 
        'HLT_MinBias', 
        'HLT_ZeroBias'),
    ETThreshold = cms.untracked.double(0.0),
    mergeRuns = cms.untracked.bool(False),
    HO_energyThreshold = cms.untracked.double(5.0),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    HF_ETThreshold = cms.untracked.double(0.0),
    L1GTLabel = cms.untracked.InputTag("l1GtUnpack"),
    energyThreshold = cms.untracked.double(2.0),
    NLumiBlocks = cms.untracked.int32(4000),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    HF_energyThreshold = cms.untracked.double(3.0),
    HcalHLTBits = cms.untracked.vstring('HLT_ExclDiJet60_HF'),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    TaskFolder = cms.untracked.string('RecHitMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalRecHitsAnalyzer = cms.EDAnalyzer("HcalRecHitsAnalyzer",
    outputFile = cms.untracked.string(''),
    eventype = cms.untracked.string('multi'),
    useAllHistos = cms.untracked.bool(False),
    HORecHitCollectionLabel = cms.untracked.InputTag("horeco"),
    hcalselector = cms.untracked.string('all'),
    HFRecHitCollectionLabel = cms.untracked.InputTag("hfreco"),
    ecalselector = cms.untracked.string('yes'),
    HBHERecHitCollectionLabel = cms.untracked.InputTag("hbhereco")
)


process.hcalTrigPrimMonitor = cms.EDAnalyzer("HcalTrigPrimMonitor",
    mergeRuns = cms.untracked.bool(False),
    ZSAlarmThreshold = cms.vint32(0, 10, 10, 10, 10, 
        10, 10, 10, 10, 10, 
        10, 10, 10, 10, 10, 
        40, 50, 10, 30, 30, 
        30, 20, 15, 15, 15, 
        15, 15, 10, 10, 5, 
        5, 5, 5),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    ZSBadTPThreshold = cms.vint32(0, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 
        2, 2, 2),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('TrigPrimMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    emulLabel = cms.InputTag("valHcalTriggerPrimitiveDigis"),
    dataLabel = cms.InputTag("hcalDigis"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalZDCMonitor = cms.EDAnalyzer("HcalZDCMonitor",
    ZDC_ColdADCThreshold = cms.untracked.int32(20),
    mergeRuns = cms.untracked.bool(False),
    rechitLabel = cms.InputTag("zdcreco"),
    ZDC_ChannelWeighting = cms.untracked.vdouble(0.1, 0.1, 0.1, 0.1, 0.1, 
        0.125, 0.125, 0.125, 0.125, 0.1, 
        0.1, 0.1, 0.1, 0.1, 0.125, 
        0.125, 0.125, 0.125),
    ZDC_OfflineDeadThreshold = cms.untracked.int32(250),
    subSystemFolder = cms.untracked.string('Hcal/'),
    ZDC_OnlineDeadThreshold = cms.untracked.int32(250),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(0),
    digiLabel = cms.InputTag("hcalDigis"),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('ZDCMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    ZDC_OnlineColdThreshold = cms.untracked.int32(250),
    ZDC_OfflineColdThreshold = cms.untracked.int32(250),
    ZDC_AcceptableChannelErrorRates = cms.untracked.vdouble(0.1, 0.1, 0.1, 0.1, 0.1, 
        0.1, 0.1, 0.1, 0.1, 0.1, 
        0.1, 0.1, 0.1, 0.1, 0.1, 
        0.1, 0.1, 0.1)
)


process.hltInclusiveVBFSource = cms.EDAnalyzer("HLTInclusiveVBFSource",
    minDeltaEta = cms.untracked.double(3.5),
    PFJetCollectionLabel = cms.InputTag("ak5PFJets"),
    dirname = cms.untracked.string('HLT/InclusiveVBF'),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    CaloJetCollectionLabel = cms.InputTag("ak5CaloJets"),
    CaloMETCollectionLabel = cms.InputTag("met"),
    processname = cms.string('HLT'),
    etaOpposite = cms.untracked.bool(True),
    PFMETCollectionLabel = cms.InputTag("pfMet"),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    debug = cms.untracked.bool(False),
    minInvMass = cms.untracked.double(1000.0),
    deltaRMatch = cms.untracked.double(0.1),
    minPtHigh = cms.untracked.double(40.0),
    minPtLow = cms.untracked.double(40.0)
)


process.hltMonBitSummary = cms.EDAnalyzer("HLTMonBitSummary",
    eventSetupPathsKey = cms.untracked.string(''),
    HLTPaths = cms.vstring('HLT_.*'),
    histLabel = cms.untracked.string('myHistLabel'),
    denominator = cms.untracked.string(''),
    denominatorWild = cms.untracked.string(''),
    directory = cms.untracked.string('myDirectory'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.hltMuonOfflineAnalyzer = cms.EDAnalyzer("HLTMuonOfflineAnalyzer",
    binParams = cms.untracked.PSet(
        jpsiMass = cms.untracked.vdouble(60, 0.0, 6.0),
        resolutionRel = cms.untracked.vdouble(20, -0.15, 0.15),
        pt = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
            10.0, 20.0, 30.0, 40.0, 100.0, 
            200.0, 400.0),
        etaCoarse = cms.untracked.vdouble(-2.4, -2.1, -1.6, -1.2, -0.8, 
            0.0, 0.8, 1.2, 1.6, 2.1, 
            2.4),
        deltaR = cms.untracked.vdouble(20, 0.0, 0.05),
        resolutionEta = cms.untracked.vdouble(20, -0.01, 0.01),
        phi = cms.untracked.vdouble(20, -3.14, 3.14),
        ptCoarse = cms.untracked.vdouble(10.0, 20.0, 40.0, 60.0, 80.0, 
            100.0, 200.0),
        charge = cms.untracked.vdouble(2, -2.0, 2.0),
        eta = cms.untracked.vdouble(20, -2.4, 2.4),
        d0 = cms.untracked.vdouble(10, -0.5, 0.5),
        zMass = cms.untracked.vdouble(50, 65.0, 115.0),
        phiCoarse = cms.untracked.vdouble(10, -3.14, 3.14),
        z0 = cms.untracked.vdouble(10, -15.0, 15.0),
        resolutionPhi = cms.untracked.vdouble(20, -0.01, 0.01),
        NVertex = cms.untracked.vdouble(20, 1, 50)
    ),
    hltPathsToCheck = cms.vstring('HLT_PADimuon0_NoVertexing_v', 
        'HLT_PAL1DoubleMu0_HighQ_v', 
        'HLT_PAL1DoubleMuOpen_v', 
        'HLT_PAL2DoubleMu3_v', 
        'HLT_PAMu3_v', 
        'HLT_PAMu7_v', 
        'HLT_PAMu12_v', 
        'HLT_PABTagMu_Jet20_Mu4_v', 
        'HLT_PAMu3PFJet20_v', 
        'HLT_PAMu3PFJet40_v', 
        'HLT_PAMu7PFJet20_v', 
        'HLT_IsoMu20_eta2p1_v', 
        'HLT_IsoMu24_eta2p1_v', 
        'HLT_IsoMu24_v', 
        'HLT_IsoMu30_eta2p1_v', 
        'HLT_IsoMu30_v', 
        'HLT_IsoMu34_eta2p1_v', 
        'HLT_IsoMu40_eta2p1_v', 
        'HLT_L1SingleMu12_v', 
        'HLT_Mu12_v', 
        'HLT_Mu15_eta2p1_v', 
        'HLT_Mu17_v', 
        'HLT_Mu24_eta2p1_v', 
        'HLT_Mu30_eta2p1_v', 
        'HLT_Mu40_v', 
        'HLT_Mu40_eta2p1_v', 
        'HLT_Mu50_eta2p1_v', 
        'HLT_Mu5_v', 
        'HLT_Mu8_v', 
        'HLT_RelIso1p0Mu17_v', 
        'HLT_RelIso1p0Mu5_v', 
        'HLT_DoubleMu5_IsoMu5_v', 
        'HLT_Mu13_Mu8_v', 
        'HLT_Mu17_Mu8_v', 
        'HLT_Mu17_TkMu8_v', 
        'HLT_Mu22_TkMu22_v', 
        'HLT_Mu22_TkMu8_v', 
        'HLT_TripleMu5_v', 
        'HLT_DoubleMu11_Acoplanarity03_v', 
        'HLT_Mu40_eta2p1_Track50_dEdx3p6_v', 
        'HLT_Mu40_eta2p1_Track60_dEdx3p7_v'),
    destination = cms.untracked.string('HLT/Muon/Distributions/globalMuons'),
    hltProcessName = cms.string('HLT'),
    plotCuts = cms.PSet(
        maxEta = cms.untracked.double(2.1),
        minPtFactor = cms.untracked.double(1.2),
        L3DeltaR = cms.untracked.double(0.05),
        L1DeltaR = cms.untracked.double(0.3),
        L2DeltaR = cms.untracked.double(0.3)
    ),
    probeParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.0'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.0')
    ),
    inputTags = cms.PSet(
        triggerResults = cms.InputTag("TriggerResults"),
        recoMuon = cms.InputTag("muons"),
        triggerSummary = cms.InputTag("hltTriggerSummaryAOD"),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    targetParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.4'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.4')
    ),
    requiredTriggers = cms.untracked.vstring()
)


process.hltResults = cms.EDAnalyzer("GeneralHLTOffline",
    muonEtaMax = cms.untracked.double(2.1),
    jetEtaMax = cms.untracked.double(3.0),
    dirname = cms.untracked.string('HLT/General/paths'),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    Nbins = cms.untracked.uint32(50),
    photonEtMin = cms.untracked.double(5.0),
    muonRecoCollectionName = cms.untracked.string('muons'),
    HltProcessName = cms.string('HLT'),
    NbinsOneOverEt = cms.untracked.uint32(1000),
    processname = cms.string('HLT'),
    tauEtMin = cms.untracked.double(10.0),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    referenceBX = cms.untracked.uint32(1),
    jetEtMin = cms.untracked.double(5.0),
    NLuminositySegments = cms.untracked.uint32(2000),
    plotAll = cms.untracked.bool(False),
    ptMax = cms.untracked.double(100.0),
    LuminositySegmentSize = cms.untracked.double(23),
    Nbins2D = cms.untracked.uint32(40),
    electronEtMin = cms.untracked.double(5.0),
    ptMin = cms.untracked.double(0.0)
)


process.hltTauOfflineCertification = cms.EDAnalyzer("HLTTauCertifier",
    targetME = cms.string('HLT_Tau'),
    setBadRunOnErrors = cms.bool(True),
    setBadRunOnWarnings = cms.bool(False),
    inputMEs = cms.vstring('HLT/TauOffline/Inclusive/DoubleTau/TriggerBits'),
    targetDir = cms.string('HLT/EventInfo/reportSummaryContents')
)


process.hltTauOfflineMonitor_Inclusive = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    DQMBaseFolder = cms.untracked.string('HLT/TauOffline/Inclusive/'),
    ModuleName = cms.untracked.string('hltTauOfflineMonitor_Inclusive'),
    HLTProcessName = cms.untracked.string('HLT'),
    Matching = cms.PSet(
        doMatching = cms.untracked.bool(False),
        matchFilters = cms.untracked.VPSet()
    ),
    MonitorSetup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        DQMFolder = cms.untracked.string('DoubleTau'),
        TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('EleTau'),
            DQMFolder = cms.untracked.string('Ele.+?Tau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuLooseTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuMediumTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuTightTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('SingleTau'),
            DQMFolder = cms.untracked.string('Single.+?Tau_MET'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            DQMFolder = cms.untracked.string('Summary'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT")
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.untracked.string('L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        ))
)


process.hltTauOfflineMonitor_PFTaus = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    DQMBaseFolder = cms.untracked.string('HLT/TauOffline/PFTaus/'),
    ModuleName = cms.untracked.string('hltTauOfflineMonitor_PFTaus'),
    HLTProcessName = cms.untracked.string('HLT'),
    Matching = cms.PSet(
        doMatching = cms.untracked.bool(True),
        matchFilters = cms.untracked.VPSet(cms.untracked.PSet(
            FilterName = cms.untracked.InputTag("TauRefProducer","PFTaus"),
            matchObjectID = cms.untracked.int32(15)
        ), 
            cms.untracked.PSet(
                FilterName = cms.untracked.InputTag("TauRefProducer","Electrons"),
                matchObjectID = cms.untracked.int32(11)
            ), 
            cms.untracked.PSet(
                FilterName = cms.untracked.InputTag("TauRefProducer","Muons"),
                matchObjectID = cms.untracked.int32(13)
            ))
    ),
    MonitorSetup = cms.VPSet(cms.PSet(
        ConfigType = cms.untracked.string('Path'),
        DQMFolder = cms.untracked.string('DoubleTau'),
        TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
    ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('EleTau'),
            DQMFolder = cms.untracked.string('Ele.+?Tau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuLooseTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuMediumTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            DQMFolder = cms.untracked.string('MuTightTau'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('Path'),
            Alias = cms.untracked.string('SingleTau'),
            DQMFolder = cms.untracked.string('Single.+?Tau_MET'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT")
        ), 
        cms.PSet(
            ConfigType = cms.untracked.string('LitePath'),
            DQMFolder = cms.untracked.string('Summary'),
            TriggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT")
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            ConfigType = cms.untracked.string('L1'),
            DQMFolder = cms.untracked.string('L1'),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central")
        ))
)


process.hltTauOfflineQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(True),
    reportThreshold = cms.untracked.string('black'),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQMOffline/Trigger/data/HLT_Tau_QualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.jetMETAnalyzer = cms.EDAnalyzer("JetMETAnalyzer",
    CleanedJPTJetAnalysis = cms.PSet(
        OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        Pt1HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        PrintDebugMessages = cms.untracked.bool(False),
        InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        deltaEtaHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        TrackSiStripHitStoNHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(500),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        EtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        HistogramPath = cms.string('JetMET/Jet/JPT'),
        PyHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        DQMStoreFileName = cms.untracked.string('DQMStore.root'),
        PhiVsEtaHistogramConfig = cms.PSet(
            NBins = cms.uint32(64),
            MaxY = cms.double(2.5),
            Min = cms.double(-3.2),
            Max = cms.double(3.2),
            Enabled = cms.bool(True),
            MinY = cms.double(-2.5),
            NBinsY = cms.uint32(50)
        ),
        OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            rpcRecHits = cms.InputTag("rpcRecHits"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        n90HitsMin = cms.int32(2),
        nAllPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        correctedPtThreshold = cms.double(3.0),
        MassHistogramConfig = cms.PSet(
            Max = cms.double(25),
            NBins = cms.uint32(25),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PzHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fRBXHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        AllPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        deltaPhiHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        CorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        EHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        Pt2HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        WriteDQMStore = cms.untracked.bool(False),
        InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        JPTCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nTracksVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        resEMFMin = cms.double(0.01),
        AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        CorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        PHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        ResEMFHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        Pt3HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        N90HitsHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtFractionInConeHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PxHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        fHPDHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        ZSPCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDMax = cms.double(0.98),
        CorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        EtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        )
    ),
    DoJetCleaning = cms.untracked.bool(True),
    highPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Jet300_v', 
            'HLT_Jet300_v6', 
            'HLT_Jet300_v7', 
            'HLT_Jet300_v8'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highptjet'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    caloMETNoHFAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETNoHF'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metNoHF"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    processname = cms.string('HLT'),
    OutputMEsInRootFile = cms.bool(False),
    DoJPTJetCleaning = cms.untracked.bool(True),
    DoCaloMETAnalysis = cms.untracked.bool(True),
    DoJPTJetAnalysis = cms.untracked.bool(False),
    CleanedPtAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    lowPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_Jet60_v', 
            'HLT_Jet60_v6', 
            'HLT_Jet60_v7', 
            'HLT_Jet60_v8'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowptjet'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    jetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    caloMETHOAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETHO'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:ho'),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        Filter = cms.untracked.bool(True),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metHO"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    LSBegin = cms.int32(0),
    OutputFileName = cms.string('jetMETMonitoring.root'),
    PtAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoDiJetSelection = cms.untracked.bool(True),
    CleaningParameters = cms.PSet(
        tightJetIDFiltering = cms.int32(-1),
        techTrigsOR = cms.vuint32(),
        vtxchi2_max = cms.double(9999),
        tightBHFiltering = cms.bool(False),
        doPrimaryVertexCheck = cms.bool(True),
        vtxz_max = cms.double(24.0),
        vtxndof_min = cms.int32(4),
        gtLabel = cms.InputTag("gtDigis"),
        doHLTPhysicsOn = cms.bool(False),
        nvtxtrks_min = cms.int32(0),
        nvtx_min = cms.int32(1),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        trigSelection = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring(''),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_hltsel'),
            errorReplyHlt = cms.bool(False)
        ),
        HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
        techTrigsNOT = cms.vuint32(),
        techTrigsAND = cms.vuint32()
    ),
    DijetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(1),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoIterativeCone = cms.untracked.bool(False),
    DoJetAnalysis = cms.untracked.bool(True),
    SCJetsCollectionLabel = cms.InputTag("sisCone5CaloJets"),
    PFDijetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(1),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    LSEnd = cms.int32(-1),
    DoJetPtCleaning = cms.untracked.bool(False),
    HTMHTAnalysis = cms.PSet(
        verbose = cms.int32(0),
        printOut = cms.int32(0),
        JetCollectionForHTMHTLabel = cms.InputTag("iterativeCone5CaloJets"),
        ptThreshold = cms.double(20.0),
        FolderName = cms.untracked.string('JetMET/MET/'),
        Source = cms.string('HTMHT'),
        HLTPathsJetMB = cms.vstring()
    ),
    DoTcMETAnalysis = cms.untracked.bool(True),
    mucorrMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('MuCorrMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("corMetGlobalMuons"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DCSFilterCalo = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
    ),
    DCSFilterJPT = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
    ),
    CleanedpfJetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    CleanedjetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    AKJetsCollectionLabel = cms.InputTag("ak5CaloJets"),
    DoPFJetAnalysis = cms.untracked.bool(False),
    PFJetsCollectionLabel = cms.InputTag("ak5PFJets"),
    DoSisCone = cms.untracked.bool(False),
    DoJetPtAnalysis = cms.untracked.bool(False),
    caloMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(True),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("met"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DCSFilterPF = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
    ),
    tcMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('TcMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag("gsfElectrons"),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag("generalTracks"),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("tcMet"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        InputMuonLabel = cms.InputTag("muons"),
        HighMETThreshold = cms.double(110.0)
    ),
    DCSFilterAll = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:ho:pixel:sistrip:es:muon')
    ),
    JPTJetsCollectionLabel = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    JPTJetAnalysis = cms.PSet(
        OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        Pt1HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PrintDebugMessages = cms.untracked.bool(False),
        InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        deltaEtaHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        TrackSiStripHitStoNHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(500),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        EtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        HistogramPath = cms.string('JetMET/Jet/uncJPT'),
        InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        DQMStoreFileName = cms.untracked.string('DQMStore.root'),
        PhiVsEtaHistogramConfig = cms.PSet(
            NBins = cms.uint32(64),
            MaxY = cms.double(2.5),
            Min = cms.double(-3.2),
            Max = cms.double(3.2),
            Enabled = cms.bool(True),
            MinY = cms.double(-2.5),
            NBinsY = cms.uint32(50)
        ),
        OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            rpcRecHits = cms.InputTag("rpcRecHits"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        n90HitsMin = cms.int32(0),
        nAllPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        correctedPtThreshold = cms.double(3.0),
        MassHistogramConfig = cms.PSet(
            Max = cms.double(25),
            NBins = cms.uint32(25),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PzHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        deltaPhiHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        CorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        EHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        Pt2HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        WriteDQMStore = cms.untracked.bool(False),
        InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        JPTCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        nTracksVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        resEMFMin = cms.double(0.0),
        AllElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        CorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nTracksHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PyHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ResEMFHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        Pt3HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        N90HitsHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        fRBXHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        CorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtFractionInConeHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PxHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        ZSPCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDMax = cms.double(1.0),
        InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        EtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(10),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        )
    ),
    caloMETNoHFHOAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETNoHFHO'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:ho')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metNoHFHO"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DoMuCorrMETAnalysis = cms.untracked.bool(False),
    pfJetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(90),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(10.0),
        balanceThirdJetCut = cms.double(0.2),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        asymmetryThirdJetCut = cms.double(30),
        ptMax = cms.double(100.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(20.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoPFJetCleaning = cms.untracked.bool(True),
    DoPfMETAnalysis = cms.untracked.bool(True),
    DoHTMHTAnalysis = cms.untracked.bool(False),
    TriggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    pfMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('PfMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet80_v*', 
                'HLT_PAJet40_v*', 
                'HLT_PAForJet40Eta3_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        CleaningParameters = cms.PSet(
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(24.0),
            vtxndof_min = cms.int32(4),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_MET400_v*', 
                'HLT_PAJet40ETM30_v*', 
                'HLT_PAJet60ETM30_v*'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_muon'),
            hltPaths = cms.vstring('HLT_IsoMu20_v', 
                'HLT_IsoMu20_v8', 
                'HLT_IsoMu20_v9', 
                'HLT_IsoMu20_v10'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag("iterativeCone5PFJets"),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag("particleFlow"),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_PFJet400_v', 
                'HLT_PAJet120_v', 
                'HLT_PAForJet100Eta3_v'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            dbLabel = cms.string('JetMETDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("pfMet"),
        eleTrigger = cms.PSet(
            dbLabel = cms.string('JetMETDQMTrigger'),
            hltDBKey = cms.string('jetmet_ele'),
            hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
                'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    ICJetsCollectionLabel = cms.InputTag("iterativeCone5CaloJets")
)


process.jetMETHLTOfflineSource = cms.EDAnalyzer("JetMETHLTOfflineSource",
    dirname = cms.untracked.string('HLT/JetMET'),
    verbose = cms.untracked.bool(False),
    maxNHEF = cms.untracked.double(1.0),
    maxCHEF = cms.untracked.double(1.0),
    DQMStore = cms.untracked.bool(True),
    CaloJetCorService = cms.string('ak5CaloL1FastL2L3'),
    processname = cms.string('HLT'),
    n90Hits = cms.untracked.double(1),
    plotAll = cms.untracked.bool(True),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    PFJetCollectionLabel = cms.InputTag("ak5PFJets"),
    plotEffwrtMB = cms.untracked.bool(False),
    PFJetCorService = cms.string('ak5PFL1FastL2L3'),
    plotAllwrtMu = cms.untracked.bool(False),
    maxCEMF = cms.untracked.double(1.0),
    nameForEff = cms.untracked.bool(True),
    pathRejectKeyword = cms.untracked.vstring('dEdx', 
        'NoBPTX'),
    feta = cms.untracked.double(2.6),
    maxNEMF = cms.untracked.double(1.0),
    pathnameMuon = cms.untracked.vstring('HLT_IsoMu24_eta2p1_v'),
    runStandalone = cms.untracked.bool(False),
    pathFilter = cms.untracked.vstring('HLT_Jet', 
        'HLT_PFJet', 
        'HLT_DiPFJetAve', 
        'HLT_PFMET', 
        'HLT_MET'),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    plotEffwrtMu = cms.untracked.bool(False),
    pathnameMB = cms.untracked.vstring('HLT_Physics_v'),
    PFMETCollectionLabel = cms.InputTag("pfMet"),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    CaloMETCollectionLabel = cms.InputTag("met"),
    nameForMon = cms.untracked.bool(True),
    minCHEF = cms.untracked.double(0.0),
    CaloJetCollectionLabel = cms.InputTag("ak5CaloJets"),
    plotEff = cms.untracked.bool(True),
    minNHEF = cms.untracked.double(0.0),
    minNEMF = cms.untracked.double(0.0),
    fHPD = cms.untracked.double(0.98),
    fEMF = cms.untracked.double(0.01),
    pathPairs = cms.VPSet(cms.PSet(
        pathname = cms.string('HLT_PFJet80_v'),
        denompathname = cms.string('HLT_PFJet40_v')
    ), 
        cms.PSet(
            pathname = cms.string('HLT_PFJet140_v'),
            denompathname = cms.string('HLT_PFJet80_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_PFJet200_v'),
            denompathname = cms.string('HLT_PFJet140_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_PFJet260_v'),
            denompathname = cms.string('HLT_PFJet200_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_PFJet320_v'),
            denompathname = cms.string('HLT_PFJet260_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_PFJet400_v'),
            denompathname = cms.string('HLT_PFJet320_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET120_v'),
            denompathname = cms.string('HLT_MET80_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET200_v'),
            denompathname = cms.string('HLT_MET120_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET300_v'),
            denompathname = cms.string('HLT_MET200_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET400_v'),
            denompathname = cms.string('HLT_MET300_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_PFMET180_v'),
            denompathname = cms.string('HLT_PFMET150_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET200_HBHENoiseCleaned_v'),
            denompathname = cms.string('HLT_MET120_HBHENoiseCleaned_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET300_HBHENoiseCleaned_v'),
            denompathname = cms.string('HLT_MET200_HBHENoiseCleaned_v')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET400_HBHENoiseCleaned_v'),
            denompathname = cms.string('HLT_MET300_HBHENoiseCleaned_v')
        )),
    minCEMF = cms.untracked.double(0.0)
)


process.l1EmulatorCsctfQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorCsctfQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorCsctpgQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorCsctpgQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorDttfQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorDttfQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorDttpgQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorDttpgQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorEcalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorEcalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorErrorFlagClient = cms.EDAnalyzer("L1EmulatorErrorFlagClient",
    L1Systems = cms.VPSet(cms.PSet(
        SystemLabel = cms.string('ECAL'),
        HwValLabel = cms.string('ETP'),
        SystemMask = cms.uint32(1),
        SystemFolder = cms.string('')
    ), 
        cms.PSet(
            SystemLabel = cms.string('HCAL'),
            HwValLabel = cms.string('HTP'),
            SystemMask = cms.uint32(1),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('RCT'),
            HwValLabel = cms.string('RCT'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('GCT'),
            HwValLabel = cms.string('GCT'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('DTTF'),
            HwValLabel = cms.string('DTF'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('DTTPG'),
            HwValLabel = cms.string('DTP'),
            SystemMask = cms.uint32(1),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('CSCTF'),
            HwValLabel = cms.string('CTF'),
            SystemMask = cms.uint32(1),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('CSCTPG'),
            HwValLabel = cms.string('CTP'),
            SystemMask = cms.uint32(1),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('RPC'),
            HwValLabel = cms.string('RPC'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('GMT'),
            HwValLabel = cms.string('GMT'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('')
        ), 
        cms.PSet(
            SystemLabel = cms.string('GT'),
            HwValLabel = cms.string('GT'),
            SystemMask = cms.uint32(1),
            SystemFolder = cms.string('L1TEMU/GTexpert')
        ))
)


process.l1EmulatorGctQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorGctQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorGmtQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorGmtQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorGtQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorGtQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorHcalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorHcalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjCenJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjCenJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjETMQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjETMQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjETTQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjETTQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjForJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjForJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjGtExternalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjGtExternalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjHTMQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjHTMQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjHTTQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjHTTQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjHfBitCountsQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjHfBitCountsQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjHfRingEtSumsQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjHfRingEtSumsQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjIsoEGQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjIsoEGQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjMuQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjMuQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjNoIsoEGQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjNoIsoEGQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjTauJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjTauJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorObjTechTrigQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorObjTechTrigQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorRctQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorRctQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1EmulatorRpcQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1EmulatorRpcQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1ExtraDQM = cms.EDAnalyzer("L1ExtraDQM",
    L1ExtraInputTags = cms.PSet(
        TagL1ExtraMuon = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraEtMissMET = cms.InputTag("dqmL1ExtraParticles","MET"),
        TagL1ExtraNoIsoEG = cms.InputTag("dqmL1ExtraParticles","NonIsolated"),
        TagL1ExtraTauJet = cms.InputTag("dqmL1ExtraParticles","Tau"),
        TagL1ExtraForJet = cms.InputTag("dqmL1ExtraParticles","Forward"),
        TagL1ExtraEtMissHTM = cms.InputTag("dqmL1ExtraParticles","MHT"),
        TagL1ExtraHFRings = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraCenJet = cms.InputTag("dqmL1ExtraParticles","Central"),
        TagL1ExtraIsoEG = cms.InputTag("dqmL1ExtraParticles","Isolated")
    ),
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    NrBxInEventGct = cms.int32(5),
    disableROOToutput = cms.untracked.bool(True),
    DirName = cms.untracked.string('L1T/L1Extra'),
    NrBxInEventGmt = cms.int32(5)
)


process.l1ExtraRecoDQM = cms.EDAnalyzer("L1ExtraRecoDQM",
    L1ExtraInputTags = cms.PSet(
        TagL1ExtraMuon = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraEtMissMET = cms.InputTag("dqmL1ExtraParticles","MET"),
        TagL1ExtraNoIsoEG = cms.InputTag("dqmL1ExtraParticles","NonIsolated"),
        TagL1ExtraTauJet = cms.InputTag("dqmL1ExtraParticles","Tau"),
        TagL1ExtraForJet = cms.InputTag("dqmL1ExtraParticles","Forward"),
        TagL1ExtraEtMissHTM = cms.InputTag("dqmL1ExtraParticles","MHT"),
        TagL1ExtraHFRings = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraCenJet = cms.InputTag("dqmL1ExtraParticles","Central"),
        TagL1ExtraIsoEG = cms.InputTag("dqmL1ExtraParticles","Isolated")
    ),
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    NrBxInEventGct = cms.int32(5),
    disableROOToutput = cms.untracked.bool(True),
    DirName = cms.untracked.string('L1T/L1ExtraReco'),
    NrBxInEventGmt = cms.int32(5)
)


process.l1GtHwValidation = cms.EDAnalyzer("L1GtHwValidation",
    L1GctDataInputTag = cms.InputTag("gctDigis"),
    L1GtEmulDaqInputTag = cms.InputTag("valGtDigis"),
    ExcludeCondCategTypeObject = cms.VPSet(cms.PSet(
        ExcludedL1GtObject = cms.string('GtExternal'),
        ExcludedCondType = cms.string(''),
        ExcludedCondCategory = cms.string('')
    )),
    ExcludeAlgoTrigByName = cms.vstring(),
    DQMStore = cms.untracked.bool(False),
    L1GtEmulEvmInputTag = cms.InputTag("valGtDigis"),
    L1GtDataDaqInputTag = cms.InputTag("gtDigis"),
    ExcludeAlgoTrigByBit = cms.vint32(),
    DirName = cms.untracked.string('L1TEMU/GTexpert'),
    L1GtDataEvmInputTag = cms.InputTag("gtEvmDigis")
)


process.l1TdeCSCTF = cms.EDAnalyzer("L1TdeCSCTF",
    emulTrackProducer = cms.InputTag("valCsctfTrackDigis"),
    dataTrackProducer = cms.InputTag("csctfDigis"),
    lctProducer = cms.InputTag("csctfDigis"),
    dataStubProducer = cms.InputTag("csctfDigis","DT"),
    DQMStore = cms.untracked.bool(True),
    PTLUT = cms.PSet(
        LowQualityFlag = cms.untracked.uint32(4),
        ReadPtLUT = cms.bool(False),
        PtMethod = cms.untracked.uint32(1)
    ),
    outFile = cms.untracked.string(''),
    DQMFolder = cms.untracked.string('L1TEMU/CSCTFexpert'),
    disableROOToutput = cms.untracked.bool(True),
    emulStubProducer = cms.InputTag("dttfDigis")
)


process.l1TdeGCT = cms.EDAnalyzer("L1TdeGCT",
    HistFolder = cms.untracked.string('L1TEMU/GCTexpert'),
    VerboseFlag = cms.untracked.int32(0),
    HistFile = cms.untracked.string(''),
    DataEmulCompareSource = cms.InputTag("l1compare"),
    DQMStore = cms.untracked.bool(True),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1TdeRCT = cms.EDAnalyzer("L1TdeRCT",
    rctSourceData = cms.InputTag("gctDigis"),
    HistFolder = cms.untracked.string('L1TEMU/L1TdeRCT'),
    outputFile = cms.untracked.string(''),
    verbose = cms.untracked.bool(False),
    filterTriggerType = cms.int32(1),
    DQMStore = cms.untracked.bool(True),
    gtEGAlgoName = cms.string('L1_SingleEG1'),
    singlechannelhistos = cms.untracked.bool(False),
    rctSourceEmul = cms.InputTag("valRctDigis"),
    gtDigisLabel = cms.InputTag("gtDigis"),
    ecalTPGData = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    disableROOToutput = cms.untracked.bool(True),
    doubleThreshold = cms.int32(3),
    hcalTPGData = cms.InputTag("hcalDigis")
)


process.l1TriggerCsctfQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerCsctfQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerCsctpgQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerCsctpgQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerDttfQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerDttfQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerDttpgQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerDttpgQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerEcalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerEcalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerGctQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerGctQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerGmtQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerGmtQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerGtQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerGtQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerHcalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerHcalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjCenJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjCenJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjETMQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjETMQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjETTQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjETTQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjForJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjForJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjGtExternalQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjGtExternalQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjHTMQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjHTMQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjHTTQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjHTTQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjHfBitCountsQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjHfBitCountsQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjHfRingEtSumsQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjHfRingEtSumsQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjIsoEGQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjIsoEGQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjMuQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjMuQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjNoIsoEGQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjNoIsoEGQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjTauJetQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjTauJetQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerObjTechTrigQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerObjTechTrigQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerOccupancyQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerOccupancyQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerRateQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerRateQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerRctQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerRctQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerRpcQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerRpcQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1TriggerSyncQualityTests = cms.EDAnalyzer("QualityTester",
    qtestOnEndRun = cms.untracked.bool(True),
    QualityTestPrescaler = cms.untracked.int32(1),
    reportThreshold = cms.untracked.string(''),
    qtestOnEndLumi = cms.untracked.bool(True),
    qtList = cms.untracked.FileInPath('DQM/L1TMonitorClient/data/L1TriggerSyncQualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(True),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.l1demon = cms.EDAnalyzer("L1TDEMON",
    HistFolder = cms.untracked.string('L1TEMU'),
    VerboseFlag = cms.untracked.int32(0),
    HistFile = cms.untracked.string('l1demon.root'),
    COMPARE_COLLS = cms.untracked.vuint32(0, 0, 1, 1, 0, 
        1, 0, 0, 1, 0, 
        1, 0),
    RunInFilterFarm = cms.untracked.bool(False),
    DataEmulCompareSource = cms.InputTag("l1compare"),
    DQMStore = cms.untracked.bool(True),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1s = cms.EDAnalyzer("L1Scalers",
    HFRecHitCollection = cms.InputTag("hfreco"),
    lastFED = cms.untracked.uint32(39),
    algoMonitorBits = cms.untracked.vuint32(8, 9, 15, 46, 54, 
        55, 100, 124),
    maskedChannels = cms.untracked.vint32(),
    tfIsTech = cms.untracked.bool(True),
    dqmFolder = cms.untracked.string('L1T/L1Scalers_SM'),
    tfBit = cms.untracked.uint32(41),
    denomIsTech = cms.untracked.bool(True),
    fedRawData = cms.InputTag("source"),
    firstFED = cms.untracked.uint32(0),
    l1GtData = cms.InputTag("gtDigis"),
    techMonitorBits = cms.untracked.vuint32(0, 9),
    denomBit = cms.untracked.uint32(0),
    verbose = cms.untracked.bool(False)
)


process.l1tCsctf = cms.EDAnalyzer("L1TCSCTF",
    gmtProducer = cms.InputTag("gtDigis"),
    statusProducer = cms.InputTag("csctfDigis"),
    outputFile = cms.untracked.string(''),
    lctProducer = cms.InputTag("csctfDigis"),
    verbose = cms.untracked.bool(False),
    trackProducer = cms.InputTag("csctfDigis"),
    DQMStore = cms.untracked.bool(True),
    mbProducer = cms.InputTag("csctfDigis","DT"),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1tCsctfClient = cms.EDAnalyzer("L1TCSCTFClient",
    prescaleEvt = cms.untracked.int32(500),
    runInEventLoop = cms.untracked.bool(False),
    input_dir = cms.untracked.string('L1T/L1TCSCTF'),
    prescaleLS = cms.untracked.int32(-1),
    runInEndRun = cms.untracked.bool(True),
    runInEndLumi = cms.untracked.bool(False),
    output_dir = cms.untracked.string('L1T/L1TCSCTF/Client'),
    runInEndJob = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False)
)


process.l1tDttf = cms.EDAnalyzer("L1TDTTF",
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    gmtSource = cms.InputTag("gtDigis"),
    l1tSystemFolder = cms.untracked.string('L1T/L1TDTTF'),
    online = cms.untracked.bool(False),
    disableROOToutput = cms.untracked.bool(True),
    MuonCollection = cms.InputTag("muons"),
    l1tInfoFolder = cms.untracked.string('L1T/EventInfo'),
    dttpgSource = cms.InputTag("dttfDigis")
)


process.l1tDttfClient = cms.EDAnalyzer("L1TDTTFClient",
    dttfSource = cms.InputTag("l1tDttf"),
    resetAfterLumi = cms.untracked.int32(3),
    l1tSourceFolder = cms.untracked.string('L1T/L1TDTTF'),
    online = cms.untracked.bool(False)
)


process.l1tEventInfoClient = cms.EDAnalyzer("L1TEventInfoClient",
    emulMaskedSystems = cms.untracked.vstring('all'),
    dataMaskedSystems = cms.untracked.vstring('empty'),
    thresholdLS = cms.untracked.int32(5),
    prescaleLS = cms.untracked.int32(-1),
    prescaleEvt = cms.untracked.int32(1),
    GCT_TauJets_threshold = cms.untracked.double(100000),
    monitorDir = cms.untracked.string(''),
    GCT_NonIsoEm_threshold = cms.untracked.double(100000),
    GMT_Muons_threshold = cms.untracked.double(100000),
    GCT_AllJets_threshold = cms.untracked.double(100000),
    GCT_IsoEm_threshold = cms.untracked.double(100000)
)


process.l1tGct = cms.EDAnalyzer("L1TGCT",
    verbose = cms.untracked.bool(False),
    gctCentralJetsSource = cms.InputTag("gctDigis","cenJets"),
    gctForwardJetsSource = cms.InputTag("gctDigis","forJets"),
    gctEnergySumsSource = cms.InputTag("gctDigis"),
    DQMStore = cms.untracked.bool(True),
    gctNonIsoEmSource = cms.InputTag("gctDigis","nonIsoEm"),
    gctIsoEmSource = cms.InputTag("gctDigis","isoEm"),
    filterTriggerType = cms.int32(1),
    disableROOToutput = cms.untracked.bool(True),
    gctTauJetsSource = cms.InputTag("gctDigis","tauJets")
)


process.l1tGctClient = cms.EDAnalyzer("L1TGCTClient",
    prescaleEvt = cms.untracked.int32(1),
    runInEventLoop = cms.untracked.bool(False),
    prescaleLS = cms.untracked.int32(-1),
    runInEndRun = cms.untracked.bool(True),
    runInEndLumi = cms.untracked.bool(False),
    monitorDir = cms.untracked.string('L1T/L1TGCT'),
    runInEndJob = cms.untracked.bool(False)
)


process.l1tGmt = cms.EDAnalyzer("L1TGMT",
    gmtSource = cms.InputTag("gtDigis"),
    verbose = cms.untracked.bool(False),
    disableROOToutput = cms.untracked.bool(True),
    DQMStore = cms.untracked.bool(True)
)


process.l1tGmtClient = cms.EDAnalyzer("L1TGMTClient",
    runInEventLoop = cms.untracked.bool(False),
    input_dir = cms.untracked.string('L1T/L1TGMT'),
    runInEndRun = cms.untracked.bool(True),
    runInEndLumi = cms.untracked.bool(False),
    output_dir = cms.untracked.string('L1T/L1TGMT/Client'),
    monitorName = cms.untracked.string('L1T/L1TGMT'),
    runInEndJob = cms.untracked.bool(False)
)


process.l1tGt = cms.EDAnalyzer("L1TGT",
    gtEvmSource = cms.InputTag("gtEvmDigis"),
    gtSource = cms.InputTag("gtDigis"),
    verbose = cms.untracked.bool(False)
)


process.l1tLtc = cms.EDAnalyzer("L1TLTC",
    disableROOToutput = cms.untracked.bool(True),
    DQMStore = cms.untracked.bool(True),
    verbose = cms.untracked.bool(False)
)


process.l1tOccupancyClient = cms.EDAnalyzer("L1TOccupancyClient",
    testParams = cms.VPSet(cms.PSet(
        algoParams = cms.PSet(
            maskedAreas = cms.VPSet(cms.PSet(
                xmin = cms.double(1),
                kind = cms.int32(1),
                ymin = cms.double(1),
                ymax = cms.double(18),
                xmax = cms.double(4)
            ), 
                cms.PSet(
                    xmin = cms.double(19),
                    kind = cms.int32(1),
                    ymin = cms.double(1),
                    ymax = cms.double(18),
                    xmax = cms.double(22)
                )),
            histPath = cms.string('L1T/L1TGCT/TauJetsOccEtaPhi')
        ),
        testName = cms.string('TauJetsOccEtaPhi')
    ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(),
                histPath = cms.string('L1T/L1TGCT/AllJetsOccEtaPhi')
            ),
            testName = cms.string('AllJetsOccEtaPhi')
        ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(),
                histPath = cms.string('L1T/L1TRCT/RctRegionsOccEtaPhi')
            ),
            testName = cms.string('RctRegionsOccEtaPhi')
        ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(cms.PSet(
                    xmin = cms.double(1),
                    kind = cms.int32(1),
                    ymin = cms.double(1),
                    ymax = cms.double(18),
                    xmax = cms.double(4)
                ), 
                    cms.PSet(
                        xmin = cms.double(19),
                        kind = cms.int32(1),
                        ymin = cms.double(1),
                        ymax = cms.double(18),
                        xmax = cms.double(22)
                    )),
                histPath = cms.string('L1T/L1TRCT/RctEmIsoEmOccEtaPhi')
            ),
            testName = cms.string('RctEmIsoEmOccEtaPhi')
        ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(cms.PSet(
                    xmin = cms.double(1),
                    kind = cms.int32(1),
                    ymin = cms.double(1),
                    ymax = cms.double(18),
                    xmax = cms.double(4)
                ), 
                    cms.PSet(
                        xmin = cms.double(19),
                        kind = cms.int32(1),
                        ymin = cms.double(1),
                        ymax = cms.double(18),
                        xmax = cms.double(22)
                    )),
                histPath = cms.string('L1T/L1TRCT/RctEmNonIsoEmOccEtaPhi')
            ),
            testName = cms.string('RctEmNonIsoEmOccEtaPhi')
        ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(cms.PSet(
                    xmin = cms.double(1),
                    kind = cms.int32(1),
                    ymin = cms.double(1),
                    ymax = cms.double(18),
                    xmax = cms.double(4)
                ), 
                    cms.PSet(
                        xmin = cms.double(19),
                        kind = cms.int32(1),
                        ymin = cms.double(1),
                        ymax = cms.double(18),
                        xmax = cms.double(22)
                    )),
                histPath = cms.string('L1T/L1TGCT/NonIsoEmOccEtaPhi')
            ),
            testName = cms.string('NonIsoEmOccEtaPhi')
        ), 
        cms.PSet(
            algoParams = cms.PSet(
                maskedAreas = cms.VPSet(cms.PSet(
                    xmin = cms.double(1),
                    kind = cms.int32(1),
                    ymin = cms.double(1),
                    ymax = cms.double(18),
                    xmax = cms.double(4)
                ), 
                    cms.PSet(
                        xmin = cms.double(19),
                        kind = cms.int32(1),
                        ymin = cms.double(1),
                        ymax = cms.double(18),
                        xmax = cms.double(22)
                    )),
                histPath = cms.string('L1T/L1TGCT/IsoEmOccEtaPhi')
            ),
            testName = cms.string('IsoEmOccEtaPhi')
        )),
    verbose = cms.bool(False)
)


process.l1tRate = cms.EDAnalyzer("L1TRate",
    oracleDB = cms.string('oracle://CMS_OMDS_LB/CMS_TRG_R'),
    refPrescaleSet = cms.int32(0),
    useHFDeadTimeNormalization = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False),
    inputTagScalersResults = cms.InputTag("scalersRawToDigi"),
    testEventScalLS = cms.untracked.bool(True),
    dqmStore = cms.untracked.bool(True),
    fitParameters = cms.VPSet(cms.PSet(
        AlgoName = cms.string('L1_BeamHalo'),
        ParErrors = cms.vdouble(917, 8.9, 0.0536, 0.000189),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-221700.0, 4674, -24.57, 0.0403)
    ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet36'),
            ParErrors = cms.vdouble(196, 1.9, 0.0115, 4.04e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-30630.0, 573.5, -2.557, 0.003734)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu3_Jet28_Central'),
            ParErrors = cms.vdouble(0.767, 0.0074, 4.37e-05, 1.55e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(28.02, 0.8295, 0.005182, -3.804e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG12_Eta1p39'),
            ParErrors = cms.vdouble(1.67, 0.0161, 9.51e-05, 3.37e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-48.09, 8.644, -0.007349, 1.327e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet80_Central'),
            ParErrors = cms.vdouble(0.809, 0.00781, 4.61e-05, 1.64e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(2.729, 1.798, -0.0004621, 2.024e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu0_HighQ'),
            ParErrors = cms.vdouble(0.547, 0.00528, 3.12e-05, 1.11e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(5.465, 0.842, -0.0003247, 7.12e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETT220'),
            ParErrors = cms.vdouble(0.166, 0.0016, 9.45e-06, 3.35e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.1326, 0.0824, -3.825e-05, 3.86e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETM100'),
            ParErrors = cms.vdouble(0.115, 0.00111, 6.54e-06, 2.32e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.5002, 0.0287, -2.59e-05, 1.145e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG5_HTT100'),
            ParErrors = cms.vdouble(0.352, 0.0034, 2.01e-05, 7.12e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.2832, 0.4398, -0.0001367, 8.933e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG3'),
            ParErrors = cms.vdouble(724, 7.03, 0.0428, 0.00015),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-180400.0, 3289, -16.4, 0.02692)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Bsc2Plus_BptxPlus'),
            ParErrors = cms.vdouble(0.827, 0.00798, 4.72e-05, 1.67e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-332.6, 6.053, -0.02989, 5.071e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG5'),
            ParErrors = cms.vdouble(77.5, 0.752, 0.00457, 1.6e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-20080.0, 371, -1.88, 0.003111)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu0_HTT75'),
            ParErrors = cms.vdouble(0.154, 0.00149, 8.81e-06, 3.12e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.5495, 0.08488, -1.23e-05, 1.535e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG8'),
            ParErrors = cms.vdouble(0.741, 0.00715, 4.23e-05, 1.5e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2.472, 2.01, -0.0003312, 1.398e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_MuOpen_EG12'),
            ParErrors = cms.vdouble(0.391, 0.00377, 2.23e-05, 7.9e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-6.04, 0.5044, -4.981e-05, 1.392e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu7_EG5'),
            ParErrors = cms.vdouble(0.462, 0.00446, 2.64e-05, 9.34e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(19.57, 0.3116, 0.003338, -4.707e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleTauJet28'),
            ParErrors = cms.vdouble(1.44, 0.0139, 8.19e-05, 2.9e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(10.61, 4.514, 0.002078, 3.074e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu3_DoubleEG5'),
            ParErrors = cms.vdouble(0.304, 0.00294, 1.74e-05, 6.15e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-4.805, 0.3497, -2.462e-05, 9.928e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG10_Jet24_Central_deltaPhi1'),
            ParErrors = cms.vdouble(1.39, 0.0134, 7.94e-05, 2.81e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-37.21, 5.761, -0.003462, 1.259e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_TripleEG5'),
            ParErrors = cms.vdouble(0.613, 0.00592, 3.49e-05, 1.24e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-14.55, 1.521, -0.0001348, 2.72e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu3_EG5'),
            ParErrors = cms.vdouble(0.202, 0.00195, 1.15e-05, 4.08e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(13.59, -0.1493, 0.001781, -2.755e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_BeamGas_Hf'),
            ParErrors = cms.vdouble(202, 1.96, 0.0118, 4.15e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-31540.0, 521.7, -2.06, 0.002688)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_QuadJet20_Central'),
            ParErrors = cms.vdouble(0.474, 0.00458, 2.7e-05, 9.59e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-5.859, 0.5604, -0.0004361, 5.489e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet36_FwdVeto'),
            ParErrors = cms.vdouble(0.818, 0.0079, 4.68e-05, 1.66e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(8.003, 1.331, -0.004132, 8.211e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG5_HTT75'),
            ParErrors = cms.vdouble(0.343, 0.00331, 1.95e-05, 6.93e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2.418, 0.5123, -8.796e-05, 9.052e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu10_Jet36_Central'),
            ParErrors = cms.vdouble(0.277, 0.00267, 1.58e-05, 5.6e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.706, 0.2342, -2.527e-05, 4.362e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_BeamGas_Bsc'),
            ParErrors = cms.vdouble(1.33, 0.0129, 8.66e-05, 3.33e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-889.9, 17.29, -0.1058, 0.0002141)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu16'),
            ParErrors = cms.vdouble(1.23, 0.0119, 7e-05, 2.48e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(226.6, -0.3892, 0.021, -4.213e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu10'),
            ParErrors = cms.vdouble(1.67, 0.0161, 9.53e-05, 3.38e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(307.6, 1.192, 0.02778, -5.663e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu12'),
            ParErrors = cms.vdouble(1.45, 0.014, 8.25e-05, 2.93e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(278.3, 0.302, 0.02538, -5.128e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_TripleEG_8_8_5'),
            ParErrors = cms.vdouble(0.393, 0.00379, 2.24e-05, 7.94e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2.64, 0.5241, -5.105e-05, 4.443e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleForJet32_EtaOpp'),
            ParErrors = cms.vdouble(0.0765, 0.000739, 4.36e-06, 1.55e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(1.042, 0.005913, -0.0001012, 8.583e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETM50'),
            ParErrors = cms.vdouble(0.247, 0.00238, 1.41e-05, 4.99e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(1.501, 0.1614, -8.716e-05, 3.255e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG5'),
            ParErrors = cms.vdouble(1420.0, 13.8, 0.0839, 0.000294),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-382200.0, 7192, -36.99, 0.06157)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleTauJet52'),
            ParErrors = cms.vdouble(1.53, 0.0148, 8.72e-05, 3.09e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(4.432, 5.923, -0.00125, 4.003e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMuBeamHalo'),
            ParErrors = cms.vdouble(15.5, 0.149, 0.000882, 3.13e-06),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-5223, 105.5, -0.5779, 0.001169)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu7'),
            ParErrors = cms.vdouble(2.21, 0.0213, 0.000126, 4.46e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(391.7, 4.519, 0.03322, -6.835e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet92_Central'),
            ParErrors = cms.vdouble(0.573, 0.00553, 3.27e-05, 1.16e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(3.282, 0.9599, -0.000304, 1.313e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu3'),
            ParErrors = cms.vdouble(142, 1.39, 0.0087, 3.19e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(11600.0, -206.7, 2.232, -0.005963)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet16'),
            ParErrors = cms.vdouble(2720.0, 26.5, 0.164, 0.000573),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-286400.0, 4590, -13.57, 0.01042)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleTauJet32'),
            ParErrors = cms.vdouble(1.05, 0.0101, 5.96e-05, 2.11e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(16.08, 2.862, 0.001933, -1.043e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleTauJet36'),
            ParErrors = cms.vdouble(0.884, 0.00853, 5.04e-05, 1.79e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-4.067, 2.15, -0.0003057, 1.282e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Bsc2Minus_BptxMinus'),
            ParErrors = cms.vdouble(1.03, 0.0101, 6.41e-05, 2.55e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-563.2, 11, -0.07045, 0.0001489)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG12'),
            ParErrors = cms.vdouble(3.12, 0.0301, 0.000178, 6.31e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-41.86, 14.6, -0.01057, 1.945e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleIsoEG12_Eta2p17'),
            ParErrors = cms.vdouble(2.68, 0.0258, 0.000153, 5.41e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-68.49, 10.51, -0.01074, 1.996e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG12_Eta2p17'),
            ParErrors = cms.vdouble(2.76, 0.0266, 0.000157, 5.57e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-89.66, 12.44, -0.01358, 2.542e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG15'),
            ParErrors = cms.vdouble(2.47, 0.0238, 0.000141, 4.98e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(16.19, 6.582, -0.001815, 4.02e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT50_HTM30'),
            ParErrors = cms.vdouble(0.638, 0.00616, 3.64e-05, 1.29e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.772, 1.116, -0.0003465, 2.65e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_TripleJet28_Central'),
            ParErrors = cms.vdouble(0.866, 0.00836, 4.94e-05, 1.75e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(15.37, 1.152, 0.002656, 1.155e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTM50'),
            ParErrors = cms.vdouble(6.08, 0.0587, 0.000347, 1.23e-06),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-21.27, 21.11, 0.007577, 4.491e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT50_HTM50'),
            ParErrors = cms.vdouble(0.971, 0.00937, 5.54e-05, 1.96e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-6.349, 2.243, -0.0006191, 5.275e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMuOpen'),
            ParErrors = cms.vdouble(650, 6.31, 0.0383, 0.000134),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-174500.0, 3285, -16.89, 0.02808)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleForJet44_EtaOpp'),
            ParErrors = cms.vdouble(0.0222, 0.000215, 1.27e-06, 4.5e-09),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.08928, 0.002069, 3.464e-07, 1.239e-08)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG5_Jet36_deltaPhi1'),
            ParErrors = cms.vdouble(2.49, 0.024, 0.000142, 5.03e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(7.584, 10.55, 0.004835, 1.546e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet128'),
            ParErrors = cms.vdouble(0.283, 0.00273, 1.62e-05, 5.72e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(1.714, 0.2416, -0.0001174, 4.736e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet32_NotBptxOR_NotMuBeamHalo'),
            ParErrors = cms.vdouble(1.01, 0.00972, 5.75e-05, 2.04e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-37.43, 2.527, -0.005776, 1.052e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleJet44_Central'),
            ParErrors = cms.vdouble(1.47, 0.0142, 8.4e-05, 2.98e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(42.7, 3.178, 0.004426, -3.879e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu7_Jet20_Central'),
            ParErrors = cms.vdouble(0.538, 0.0052, 3.07e-05, 1.09e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(27.68, 0.2173, 0.003906, -4.363e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_InterBunch_Hf'),
            ParErrors = cms.vdouble(65300.0, 633, 3.81, 0.0134),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-10340000.0, 231000.0, -1180, 1.893)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETT260_EG5'),
            ParErrors = cms.vdouble(0.11, 0.00106, 6.26e-06, 2.22e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.5519, 0.04146, 6.584e-07, 6.336e-08)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG20'),
            ParErrors = cms.vdouble(1.93, 0.0186, 0.00011, 3.9e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(5.959, 2.663, -0.001003, 2.586e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG5_HTT50'),
            ParErrors = cms.vdouble(0.687, 0.00663, 3.92e-05, 1.39e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-6.566, 1.346, -0.000287, 2.907e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu3_Jet20_Central'),
            ParErrors = cms.vdouble(1.11, 0.0107, 6.35e-05, 2.25e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(29.36, 1.41, 0.007502, -1.804e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet92'),
            ParErrors = cms.vdouble(0.611, 0.0059, 3.49e-05, 1.24e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(1.996, 1.031, -0.0002973, 1.242e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT50'),
            ParErrors = cms.vdouble(1.52, 0.0146, 8.64e-05, 3.06e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-10.89, 3.884, -0.001037, 8.683e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETT300_EG5'),
            ParErrors = cms.vdouble(0.272, 0.00263, 1.55e-05, 5.5e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.6599, 0.03346, 3.263e-05, -3.985e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleTauJet40'),
            ParErrors = cms.vdouble(0.675, 0.00652, 3.85e-05, 1.36e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.449, 1.404, -0.0002159, 5.049e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG12_Jet24_Central_deltaPhi1'),
            ParErrors = cms.vdouble(1.13, 0.0109, 6.45e-05, 2.29e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-27.42, 4.091, -0.002958, 9.164e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_TripleEG_8_5_5'),
            ParErrors = cms.vdouble(0.577, 0.00557, 3.29e-05, 1.17e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-8.578, 1.128, -0.0001071, 1.566e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG_12_5_Eta1p39'),
            ParErrors = cms.vdouble(6.71, 0.0651, 0.000397, 1.39e-06),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1654, 30.88, -0.157, 0.0002593)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleJet36_Central'),
            ParErrors = cms.vdouble(2.21, 0.0213, 0.000126, 4.46e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(33.82, 6.255, 0.004926, 1.289e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleEG30'),
            ParErrors = cms.vdouble(0.551, 0.00532, 3.15e-05, 1.12e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(1.746, 0.7654, -0.0002219, 6.079e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu5_Eta1p5_Q80'),
            ParErrors = cms.vdouble(1.74, 0.0167, 9.89e-05, 3.51e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-394.1, 11.07, -0.03401, 5.359e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu3p5'),
            ParErrors = cms.vdouble(0.74, 0.00714, 4.22e-05, 1.5e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.123, 1.349, -0.000353, 2.354e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu0_HighQ_EtaCuts'),
            ParErrors = cms.vdouble(0.508, 0.0049, 2.89e-05, 1.03e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(7.947, 0.751, -0.0003687, 5.715e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ZeroBias'),
            ParErrors = cms.vdouble(77.9, 0.751, 0.00444, 1.57e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(2176000.0, 107, -0.6558, 0.001318)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu12_EG5'),
            ParErrors = cms.vdouble(0.328, 0.00316, 1.87e-05, 6.62e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(11.32, 0.0644, 0.00173, -2.519e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_InterBunch_Bsc'),
            ParErrors = cms.vdouble(1480.0, 14.3, 0.0845, 0.0003),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1064000.0, 62100.0, -305.5, 0.4944)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet68'),
            ParErrors = cms.vdouble(1.27, 0.0123, 7.25e-05, 2.57e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-23.88, 4.347, -0.003147, 8.809e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_BptxMinus_NotBptxPlus'),
            ParErrors = cms.vdouble(7.81, 0.0754, 0.000445, 1.58e-06),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(65200.0, 42.93, -0.2665, 0.0005436)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_BptxPlus_NotBptxMinus'),
            ParErrors = cms.vdouble(4.52, 0.0437, 0.000258, 9.14e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(66270.0, 22.82, -0.1415, 0.0002882)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu3_EG5'),
            ParErrors = cms.vdouble(0.922, 0.0089, 5.26e-05, 1.86e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(60.99, 0.967, 0.0123, -1.647e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT150'),
            ParErrors = cms.vdouble(0.251, 0.00242, 1.43e-05, 5.07e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.9649, 0.1672, -7.215e-05, 3.948e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleIsoEG10'),
            ParErrors = cms.vdouble(0.341, 0.00329, 1.94e-05, 6.89e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.2815, 0.4109, -6.543e-05, 1.158e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_QuadJet28_Central'),
            ParErrors = cms.vdouble(0.269, 0.0026, 1.54e-05, 5.45e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2.753, 0.2655, -9.579e-05, 1.405e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT75'),
            ParErrors = cms.vdouble(0.69, 0.00666, 3.93e-05, 1.39e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.871, 1.313, -0.0003372, 2.406e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_BscMinBiasOR_BptxPlusANDMinus'),
            ParErrors = cms.vdouble(500, 4.83, 0.0285, 0.000101),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(750000.0, 19710.0, -92.59, 0.1468)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_PreCollisions'),
            ParErrors = cms.vdouble(352, 3.41, 0.0206, 7.24e-05),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-69140.0, 1158, -4.805, 0.006113)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleTauJet68'),
            ParErrors = cms.vdouble(0.712, 0.00687, 4.06e-05, 1.44e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(4.248, 1.65, -0.0004169, 9.507e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleJet52'),
            ParErrors = cms.vdouble(1.07, 0.0104, 6.12e-05, 2.17e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-4.872, 2.418, -0.0004958, 3.303e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleTauJet80'),
            ParErrors = cms.vdouble(0.456, 0.0044, 2.6e-05, 9.22e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(2.613, 0.7176, -0.000204, 4.198e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu5_EG12'),
            ParErrors = cms.vdouble(0.211, 0.00203, 1.2e-05, 4.26e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.9276, 0.1799, -2.543e-05, 2.733e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_MuOpen_EG5'),
            ParErrors = cms.vdouble(1.79, 0.0173, 0.000102, 3.62e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(115.9, 1.924, 0.0295, -3.29e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet20_NotBptxOR'),
            ParErrors = cms.vdouble(2.97, 0.0286, 0.000169, 6e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-24.41, 11.01, -0.00962, 1.614e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleIsoEG12'),
            ParErrors = cms.vdouble(2.99, 0.0289, 0.000171, 6.05e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-23.41, 12.41, -0.007881, 1.412e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG5_HTT125'),
            ParErrors = cms.vdouble(0.28, 0.0027, 1.6e-05, 5.66e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.9394, 0.2254, -9.459e-05, 5.622e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu0_HTT50'),
            ParErrors = cms.vdouble(0.238, 0.0023, 1.36e-05, 4.82e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.826, 0.2027, -2.206e-05, 4.301e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETM70'),
            ParErrors = cms.vdouble(0.151, 0.00146, 8.63e-06, 3.06e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.8685, 0.05848, -4.67e-05, 1.856e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETM20'),
            ParErrors = cms.vdouble(2.74, 0.0265, 0.000156, 5.54e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-69.51, 8.269, -0.001148, 6.683e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG_12_5'),
            ParErrors = cms.vdouble(0.948, 0.00915, 5.4e-05, 1.92e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-4.085, 3.06, -0.0005698, 2.818e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG8_Jet20_Central_deltaPhi1'),
            ParErrors = cms.vdouble(2.08, 0.0201, 0.000119, 4.21e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-23.1, 9.62, 0.0005052, 1.776e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu7_TauJet16'),
            ParErrors = cms.vdouble(0.497, 0.0048, 2.83e-05, 1e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(17.17, 0.371, 0.002836, -2.271e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_TripleEG7'),
            ParErrors = cms.vdouble(0.267, 0.00258, 1.52e-05, 5.4e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.7609, 0.2553, -4.256e-05, 2.581e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG5_HTT75'),
            ParErrors = cms.vdouble(0.536, 0.00517, 3.06e-05, 1.08e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2.497, 0.9994, -0.0002386, 1.871e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet20_NotBptxOR_NotMuBeamHalo'),
            ParErrors = cms.vdouble(2.96, 0.0286, 0.000169, 5.99e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-22.21, 10.95, -0.009189, 1.524e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu25'),
            ParErrors = cms.vdouble(1.01, 0.00976, 5.77e-05, 2.04e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(173.8, -0.7411, 0.01661, -3.326e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG10'),
            ParErrors = cms.vdouble(0.456, 0.0044, 2.6e-05, 9.22e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-0.05877, 0.748, -0.0001303, 1.851e-07)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu20'),
            ParErrors = cms.vdouble(1.08, 0.0104, 6.17e-05, 2.19e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(186.1, -0.4123, 0.0174, -3.495e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu7_Barrel'),
            ParErrors = cms.vdouble(0.995, 0.0096, 5.67e-05, 2.01e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(94.78, 1.884, 0.002084, -4.637e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_HTT100'),
            ParErrors = cms.vdouble(0.421, 0.00407, 2.4e-05, 8.52e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(0.9086, 0.57, -0.0001851, 1.12e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleEG2_FwdVeto'),
            ParErrors = cms.vdouble(31.9, 0.31, 0.00192, 6.74e-06),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-2721, 68.2, -0.3894, 0.0006788)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleIsoEG12_Eta1p39'),
            ParErrors = cms.vdouble(1.52, 0.0146, 8.65e-05, 3.07e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-36.67, 7.33, -0.005623, 9.895e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_Mu3_Jet16_Central'),
            ParErrors = cms.vdouble(1.26, 0.0122, 7.19e-05, 2.55e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(54.42, 1.388, 0.01152, -4.061e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu3'),
            ParErrors = cms.vdouble(0.9, 0.00869, 5.13e-05, 1.82e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(44.72, 0.8847, 0.005398, -8.196e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu0'),
            ParErrors = cms.vdouble(1.22, 0.0118, 6.94e-05, 2.46e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(113.6, 0.3927, 0.01494, -2.432e-05)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_DoubleMu5'),
            ParErrors = cms.vdouble(0.459, 0.00443, 2.61e-05, 9.27e-08),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-1.153, 0.6484, -0.0001937, 1.474e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_EG12_TauJet20_deltaPhi1'),
            ParErrors = cms.vdouble(0.849, 0.0082, 4.84e-05, 1.72e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-35.16, 3.416, -0.003848, 9.685e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_ETM30'),
            ParErrors = cms.vdouble(0.644, 0.00622, 3.67e-05, 1.3e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-30.37, 1.8, -0.003443, 9.613e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleMu7_Eta2p1'),
            ParErrors = cms.vdouble(1.43, 0.0138, 8.18e-05, 2.9e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(115.2, 4.653, 0.003062, -6.747e-06)
        ), 
        cms.PSet(
            AlgoName = cms.string('L1_SingleJet52'),
            ParErrors = cms.vdouble(2.85, 0.0275, 0.000163, 5.77e-07),
            TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
            Parameters = cms.vdouble(-12.22, 11.63, -0.001005, 1.478e-05)
        )),
    maxInstantLuminosity = cms.double(5000),
    lsShiftGTRates = cms.untracked.int32(-1),
    minInstantLuminosity = cms.double(100),
    inputTagL1GtDataDaq = cms.InputTag("gtDigis"),
    disableROOToutput = cms.untracked.bool(True),
    pathCondDB = cms.string('/nfshome0/centraltspro/secure/'),
    categories = cms.PSet(
        IsoEG = cms.untracked.bool(True),
        Jet = cms.untracked.bool(True),
        ETT = cms.untracked.bool(True),
        HTM = cms.untracked.bool(True),
        ForJet = cms.untracked.bool(False),
        Mu = cms.untracked.bool(True),
        TauJet = cms.untracked.bool(False),
        HTT = cms.untracked.bool(True),
        CenJet = cms.untracked.bool(False),
        EG = cms.untracked.bool(True),
        ETM = cms.untracked.bool(True)
    ),
    srcAlgoXSecFit = cms.int32(0)
)


process.l1tRct = cms.EDAnalyzer("L1TRCT",
    DQMStore = cms.untracked.bool(True),
    disableROOToutput = cms.untracked.bool(True),
    rctSource = cms.InputTag("gctDigis"),
    verbose = cms.untracked.bool(False),
    filterTriggerType = cms.int32(1)
)


process.l1tRpctf = cms.EDAnalyzer("L1TRPCTF",
    rpctfRPCDigiSource = cms.InputTag("muonRPCDigis"),
    rateNoOfBins = cms.int32(3000),
    verbose = cms.untracked.bool(False),
    rpctfSource = cms.InputTag("gtDigis"),
    rateUpdateTime = cms.int32(20),
    DQMStore = cms.untracked.bool(True),
    output_dir = cms.untracked.string('L1T/L1TRPCTF'),
    rateBinSize = cms.int32(60),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1tRpctfClient = cms.EDAnalyzer("L1TRPCTFClient",
    verbose = cms.untracked.bool(False),
    runInEventLoop = cms.untracked.bool(False),
    input_dir = cms.untracked.string('L1T/L1TRPCTF'),
    runInEndRun = cms.untracked.bool(True),
    runInEndLumi = cms.untracked.bool(False),
    output_dir = cms.untracked.string('L1T/L1TRPCTF/Client'),
    runInEndJob = cms.untracked.bool(False),
    prescaleEvt = cms.untracked.int32(1)
)


process.l1tTestsSummary = cms.EDAnalyzer("L1TTestsSummary",
    MonitorL1TSync = cms.untracked.bool(True),
    verbose = cms.untracked.bool(False),
    MonitorL1TRate = cms.untracked.bool(True),
    MonitorL1TOccupancy = cms.untracked.bool(False)
)


process.l1temuEventInfoClient = cms.EDAnalyzer("L1TEMUEventInfoClient",
    L1Systems = cms.VPSet(cms.PSet(
        HwValLabel = cms.string('ETP'),
        QualityTestName = cms.vstring('L1EmulatorECALErrorFlagQT'),
        QualityTestHist = cms.vstring('ETPErrorFlag'),
        SystemMask = cms.uint32(0),
        SystemFolder = cms.string(''),
        SystemLabel = cms.string('ECAL_TPG'),
        QualityTestSummaryEnabled = cms.vuint32(0)
    ), 
        cms.PSet(
            HwValLabel = cms.string('HTP'),
            QualityTestName = cms.vstring('L1EmulatorHCALErrorFlagQT'),
            QualityTestHist = cms.vstring('HTPErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('HCAL_TPG'),
            QualityTestSummaryEnabled = cms.vuint32(0)
        ), 
        cms.PSet(
            HwValLabel = cms.string('RCT'),
            QualityTestName = cms.vstring('L1EmulatorRCTErrorFlagQT'),
            QualityTestHist = cms.vstring('RCTErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('RCT'),
            QualityTestSummaryEnabled = cms.vuint32(1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('GCT'),
            QualityTestName = cms.vstring('L1EmulatorGCTErrorFlagQT'),
            QualityTestHist = cms.vstring('GCTErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('GCT'),
            QualityTestSummaryEnabled = cms.vuint32(1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('DTP'),
            QualityTestName = cms.vstring('L1EmulatorDTTPGErrorFlagQT'),
            QualityTestHist = cms.vstring('DTPErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('DT_TPG'),
            QualityTestSummaryEnabled = cms.vuint32(0)
        ), 
        cms.PSet(
            HwValLabel = cms.string('DTF'),
            QualityTestName = cms.vstring('L1EmulatorDTTFErrorFlagQT'),
            QualityTestHist = cms.vstring('DTFErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('DTTF'),
            QualityTestSummaryEnabled = cms.vuint32(1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('CTP'),
            QualityTestName = cms.vstring('L1EmulatorCSCTPGErrorFlagQT'),
            QualityTestHist = cms.vstring('CTPErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('CSC_TPG'),
            QualityTestSummaryEnabled = cms.vuint32(0)
        ), 
        cms.PSet(
            HwValLabel = cms.string('CTF'),
            QualityTestName = cms.vstring('L1EMulatorCSCTFDPhi12_ptLut', 
                'L1EMulatorCSCTFDPhi23_ptLut', 
                'L1EMulatorCSCTFEta_ptLut', 
                'L1EMulatorCSCTFMode_ptLut', 
                'L1EMulatorCSCTFFRBit_ptLut', 
                'L1EMulatorCSCTFPhi', 
                'L1EMulatorCSCTFEta', 
                'L1EMulatorCSCTFOcc', 
                'L1EMulatorCSCTFPt', 
                'L1EMulatorCSCTFQual', 
                'L1EMulatorCSCTF_dtStubPhi'),
            QualityTestHist = cms.vstring('pt1Comp_1d', 
                'pt2Comp_1d', 
                'pt3Comp_1d', 
                'pt4Comp_1d', 
                'pt5Comp_1d', 
                'phiComp_1d', 
                'etaComp_1d', 
                'occComp_1d', 
                'ptComp_1d', 
                'qualComp_1d', 
                'dtStubPhi_1d'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('L1TEMU/CSCTFexpert'),
            SystemLabel = cms.string('CSCTF'),
            QualityTestSummaryEnabled = cms.vuint32(1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 
                1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('RPC'),
            QualityTestName = cms.vstring('L1EmulatorRPCErrorFlagQT'),
            QualityTestHist = cms.vstring('RPCErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('RPC'),
            QualityTestSummaryEnabled = cms.vuint32(1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('GMT'),
            QualityTestName = cms.vstring('L1EmulatorGMTErrorFlagQT'),
            QualityTestHist = cms.vstring('GMTErrorFlag'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string(''),
            SystemLabel = cms.string('GMT'),
            QualityTestSummaryEnabled = cms.vuint32(1)
        ), 
        cms.PSet(
            HwValLabel = cms.string('GT'),
            QualityTestName = cms.vstring('L1EmulatorGTErrorFlagQT', 
                'L1EmulatorDaqFdlDataEmulQT'),
            QualityTestHist = cms.vstring('GTErrorFlag', 
                'Daq_FdlDataEmul_0'),
            SystemMask = cms.uint32(0),
            SystemFolder = cms.string('L1TEMU/GTexpert'),
            SystemLabel = cms.string('GT'),
            QualityTestSummaryEnabled = cms.vuint32(1, 0)
        )),
    runInEventLoop = cms.untracked.bool(False),
    MaskL1Objects = cms.vstring(),
    runInEndRun = cms.untracked.bool(True),
    runInEndLumi = cms.untracked.bool(False),
    monitorDir = cms.untracked.string(''),
    L1Objects = cms.VPSet(cms.PSet(
        QualityTestName = cms.vstring(),
        ObjectMask = cms.uint32(0),
        QualityTestHist = cms.vstring(),
        ObjectFolder = cms.string(''),
        ObjectLabel = cms.string('TechTrig'),
        QualityTestSummaryEnabled = cms.vuint32()
    ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('GtExternal'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('HfRingEtSums'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('HfBitCounts'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('HTM'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('HTT'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('ETM'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('ETT'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('TauJet'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('ForJet'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('CenJet'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('IsoEG'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring(),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring(),
            ObjectFolder = cms.string(''),
            ObjectLabel = cms.string('NoIsoEG'),
            QualityTestSummaryEnabled = cms.vuint32()
        ), 
        cms.PSet(
            QualityTestName = cms.vstring('L1EmulatorAlgorithmsMuQT'),
            ObjectMask = cms.uint32(0),
            QualityTestHist = cms.vstring('GTErrorFlag'),
            ObjectFolder = cms.string('L1TEMU/GTexpert'),
            ObjectLabel = cms.string('Mu'),
            QualityTestSummaryEnabled = cms.vuint32(0)
        )),
    MaskL1Systems = cms.vstring(),
    runInEndJob = cms.untracked.bool(False)
)


process.l1tsClient = cms.EDAnalyzer("L1ScalersClient",
    algoMonitorBits = cms.untracked.vint32(54, 55, 56),
    dqmFolder = cms.untracked.string('L1T/L1Scalers_SM'),
    techMonitorBits = cms.untracked.vint32(1, 2, 9)
)


process.l1tscalers = cms.EDAnalyzer("L1TScalersSCAL",
    scalersResults = cms.InputTag("scalersRawToDigi","","DQM"),
    denomIsTech = cms.untracked.bool(True),
    jetBit = cms.untracked.uint32(16),
    muonBit = cms.untracked.uint32(55),
    egammaBit = cms.untracked.uint32(46),
    denomBit = cms.untracked.uint32(35),
    verbose = cms.untracked.bool(False)
)


process.loadTau = cms.EDAnalyzer("TauDQMFileLoader",
    test = cms.PSet(
        inputFileNames = cms.vstring('/opt/sbg/cms/ui4_data1/dbodin/CMSSW_3_5_1/src/TauID/QCD_recoFiles/TauVal_CMSSW_3_6_0_QCD.root'),
        scaleFactor = cms.double(1.0),
        dqmDirectory_store = cms.string('test')
    ),
    reference = cms.PSet(
        inputFileNames = cms.vstring('/opt/sbg/cms/ui4_data1/dbodin/CMSSW_3_5_1/src/TauID/QCD_recoFiles/TauVal_CMSSW_3_6_0_QCD.root'),
        scaleFactor = cms.double(1.0),
        dqmDirectory_store = cms.string('reference')
    )
)


process.looseAnalyzer = cms.EDAnalyzer("HLTMuonOfflineAnalyzer",
    requiredTriggers = cms.untracked.vstring(),
    hltPathsToCheck = cms.vstring('HLT_PADimuon0_NoVertexing_v', 
        'HLT_PAL1DoubleMu0_HighQ_v', 
        'HLT_PAL1DoubleMuOpen_v', 
        'HLT_PAL2DoubleMu3_v', 
        'HLT_PAMu3_v', 
        'HLT_PAMu7_v', 
        'HLT_PAMu12_v', 
        'HLT_PABTagMu_Jet20_Mu4_v', 
        'HLT_PAMu3PFJet20_v', 
        'HLT_PAMu3PFJet40_v', 
        'HLT_PAMu7PFJet20_v', 
        'HLT_IsoMu20_eta2p1_v', 
        'HLT_IsoMu24_eta2p1_v', 
        'HLT_IsoMu24_v', 
        'HLT_IsoMu30_eta2p1_v', 
        'HLT_IsoMu30_v', 
        'HLT_IsoMu34_eta2p1_v', 
        'HLT_IsoMu40_eta2p1_v', 
        'HLT_L1SingleMu12_v', 
        'HLT_Mu12_v', 
        'HLT_Mu15_eta2p1_v', 
        'HLT_Mu17_v', 
        'HLT_Mu24_eta2p1_v', 
        'HLT_Mu30_eta2p1_v', 
        'HLT_Mu40_v', 
        'HLT_Mu40_eta2p1_v', 
        'HLT_Mu50_eta2p1_v', 
        'HLT_Mu5_v', 
        'HLT_Mu8_v', 
        'HLT_RelIso1p0Mu17_v', 
        'HLT_RelIso1p0Mu5_v', 
        'HLT_DoubleMu5_IsoMu5_v', 
        'HLT_Mu13_Mu8_v', 
        'HLT_Mu17_Mu8_v', 
        'HLT_Mu17_TkMu8_v', 
        'HLT_Mu22_TkMu22_v', 
        'HLT_Mu22_TkMu8_v', 
        'HLT_TripleMu5_v', 
        'HLT_DoubleMu11_Acoplanarity03_v', 
        'HLT_Mu40_eta2p1_Track50_dEdx3p6_v', 
        'HLT_Mu40_eta2p1_Track60_dEdx3p7_v'),
    destination = cms.untracked.string('HLT/Muon/DistributionsLoose'),
    hltProcessName = cms.string('HLT'),
    plotCuts = cms.PSet(
        maxEta = cms.untracked.double(2.1),
        minPtFactor = cms.untracked.double(1.2),
        L3DeltaR = cms.untracked.double(0.05),
        L1DeltaR = cms.untracked.double(0.3),
        L2DeltaR = cms.untracked.double(0.3)
    ),
    probeParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.0'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.0')
    ),
    inputTags = cms.PSet(
        triggerResults = cms.InputTag("TriggerResults"),
        recoMuon = cms.InputTag("muons"),
        triggerSummary = cms.InputTag("hltTriggerSummaryAOD"),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    targetParams = cms.PSet(
        d0Cut = cms.untracked.double(50),
        recoCuts = cms.untracked.string('isPFMuon && (isTrackerMuon || isGlobalMuon) && (pfIsolationR04().sumChargedHadronPt + max(pfIsolationR04().sumNeutralHadronEt + pfIsolationR04().sumPhotonEt - pfIsolationR04().sumPUPt/2,0.0))/pt < 0.20'),
        z0Cut = cms.untracked.double(100),
        hltCuts = cms.untracked.string('abs(eta) < 2.4')
    ),
    binParams = cms.untracked.PSet(
        jpsiMass = cms.untracked.vdouble(60, 0.0, 6.0),
        resolutionRel = cms.untracked.vdouble(20, -0.15, 0.15),
        pt = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
            10.0, 20.0, 30.0, 40.0, 100.0, 
            200.0, 400.0),
        etaCoarse = cms.untracked.vdouble(-2.4, -2.1, -1.6, -1.2, -0.8, 
            0.0, 0.8, 1.2, 1.6, 2.1, 
            2.4),
        deltaR = cms.untracked.vdouble(20, 0.0, 0.05),
        resolutionEta = cms.untracked.vdouble(20, -0.01, 0.01),
        phi = cms.untracked.vdouble(20, -3.14, 3.14),
        ptCoarse = cms.untracked.vdouble(10.0, 20.0, 40.0, 60.0, 80.0, 
            100.0, 200.0),
        charge = cms.untracked.vdouble(2, -2.0, 2.0),
        eta = cms.untracked.vdouble(20, -2.4, 2.4),
        d0 = cms.untracked.vdouble(10, -0.5, 0.5),
        zMass = cms.untracked.vdouble(50, 65.0, 115.0),
        phiCoarse = cms.untracked.vdouble(10, -3.14, 3.14),
        z0 = cms.untracked.vdouble(10, -15.0, 15.0),
        resolutionPhi = cms.untracked.vdouble(20, -0.01, 0.01),
        NVertex = cms.untracked.vdouble(20, 1, 50)
    )
)


process.muRecoTest = cms.EDAnalyzer("MuonRecoTest",
    phiMin = cms.double(-3.2),
    diagnosticPrescale = cms.untracked.int32(1),
    etaMin = cms.double(-3.0),
    efficiencyTestName = cms.untracked.string('EfficiencyInRange'),
    etaBin = cms.int32(100),
    phiBin = cms.int32(100),
    etaMax = cms.double(3.0),
    phiMax = cms.double(3.2)
)


process.muTrackResidualsTest = cms.EDAnalyzer("MuonTrackResidualsTest",
    sigmaTestName = cms.untracked.string('ResidualsSigmaInRange'),
    meanTestName = cms.untracked.string('ResidualsMeanInRange'),
    diagnosticPrescale = cms.untracked.int32(1),
    resDistributionTestName = cms.untracked.string('ResidualsDistributionGaussianTest')
)


process.muonAnalyzer = cms.EDAnalyzer("MuonAnalyzer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    OutputMEsInRootFile = cms.bool(False),
    GlobalMuTrackCollection = cms.InputTag("globalMuons"),
    muonRecoOneHLTAnalysis = cms.PSet(
        phiMin = cms.double(-3.2),
        ptBin = cms.int32(50),
        ptMax = cms.double(100.0),
        SingleMuonTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_IsoMu30_eta2p1_v7'),
            andOr = cms.bool(True),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('SingleMu'),
            dbLabel = cms.string('MuonDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        phiMax = cms.double(3.2),
        DoubleMuonTrigger = cms.PSet(
            andOrHlt = cms.bool(True),
            hltPaths = cms.vstring('HLT_Mu17_Mu8_v11'),
            andOr = cms.bool(True),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('DoubleMu'),
            dbLabel = cms.string('MuonDQMTrigger'),
            errorReplyHlt = cms.bool(False)
        ),
        chi2Max = cms.double(20),
        etaMin = cms.double(-3.0),
        etaBin = cms.int32(50),
        ptMin = cms.double(0.0),
        phiBin = cms.int32(50),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        chi2Bin = cms.int32(50),
        bsLabel = cms.InputTag("offlineBeamSpot"),
        MuonCollection = cms.InputTag("muons"),
        etaMax = cms.double(3.0),
        chi2Min = cms.double(0.0)
    ),
    DoMuonKinVsEtaAnalysis = cms.untracked.bool(True),
    seedsAnalysis = cms.PSet(
        phiErrMax = cms.double(3.2),
        pxyzErrMin = cms.double(-100.0),
        seedPxyzMin = cms.double(-50.0),
        pxyzErrMax = cms.double(100.0),
        RecHitBin = cms.int32(25),
        etaErrMin = cms.double(0.0),
        seedPtMin = cms.double(0.0),
        seedPxyzBin = cms.int32(100),
        ThetaBin = cms.int32(100),
        RecHitMin = cms.double(0.0),
        EtaMin = cms.double(-3.0),
        pErrBin = cms.int32(200),
        phiErrBin = cms.int32(160),
        EtaMax = cms.double(3.0),
        etaErrBin = cms.int32(200),
        seedPxyzMax = cms.double(50.0),
        ThetaMin = cms.double(0.0),
        PhiMin = cms.double(-3.2),
        pxyzErrBin = cms.int32(100),
        RecHitMax = cms.double(25.0),
        ThetaMax = cms.double(3.2),
        etaErrMax = cms.double(0.5),
        EtaBin = cms.int32(100),
        pErrMax = cms.double(200.0),
        seedPtMax = cms.double(200.0),
        seedPtBin = cms.int32(1000),
        phiErrMin = cms.double(0.0),
        PhiBin = cms.int32(100),
        debug = cms.bool(False),
        pErrMin = cms.double(0.0),
        PhiMax = cms.double(3.2)
    ),
    STAMuTrackCollection = cms.InputTag("standAloneMuons"),
    DoMuonRecoAnalysis = cms.untracked.bool(True),
    DoMuonEnergyAnalysis = cms.untracked.bool(True),
    muonRecoAnalysis = cms.PSet(
        ptBin = cms.int32(500),
        thetaBin = cms.int32(100),
        pResMin = cms.double(-0.01),
        rhMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-3.0),
        etaMax = cms.double(3.0),
        pMax = cms.double(500.0),
        chi2Min = cms.double(0),
        thetaMin = cms.double(0.0),
        phiMin = cms.double(-3.2),
        rhBin = cms.int32(25),
        pResMax = cms.double(0.01),
        thetaMax = cms.double(3.2),
        rhMax = cms.double(1.001),
        etaBin = cms.int32(100),
        pBin = cms.int32(500),
        ptMax = cms.double(500.0),
        ptMin = cms.double(0.0),
        phiMax = cms.double(3.2),
        pResBin = cms.int32(50),
        phiBin = cms.int32(100),
        chi2Max = cms.double(20),
        chi2Bin = cms.int32(100)
    ),
    efficiencyAnalysis = cms.PSet(
        phiMin = cms.double(-3.2),
        ptBin = cms.int32(10),
        MuonCollection = cms.InputTag("muons"),
        vtxMax = cms.double(40.5),
        vtxMin = cms.double(0.5),
        doPrimaryVertexCheck = cms.bool(True),
        TrackCollection = cms.InputTag("generalTracks"),
        vtxBin = cms.int32(10),
        etaMin = cms.double(-2.5),
        etaBin = cms.int32(8),
        phiBin = cms.int32(8),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        phiMax = cms.double(3.2),
        bsLabel = cms.InputTag("offlineBeamSpot"),
        ptMax = cms.double(100),
        etaMax = cms.double(2.5),
        ptMin = cms.double(10)
    ),
    DoTrackSegmentsAnalysis = cms.untracked.bool(True),
    OutputFileName = cms.string('MuonMonitoring.root'),
    trackSegmentsAnalysis = cms.PSet(
        phiMin = cms.double(-3.2),
        ptBin = cms.int32(200),
        SegmentsTrackAssociatorParameters = cms.PSet(
            segmentsDt = cms.untracked.InputTag("dt4DSegments"),
            SelectedSegments = cms.untracked.InputTag("SelectedSegments"),
            segmentsCSC = cms.untracked.InputTag("cscSegments")
        ),
        ptMin = cms.double(0.0),
        etaMin = cms.double(-3.0),
        etaBin = cms.int32(100),
        phiBin = cms.int32(100),
        ptMax = cms.double(200.0),
        etaMax = cms.double(3.0),
        phiMax = cms.double(3.2)
    ),
    MuonCollection = cms.InputTag("muons"),
    DoEfficiencyAnalysis = cms.untracked.bool(True),
    DoDiMuonHistograms = cms.untracked.bool(True),
    muonKinVsEtaAnalysis = cms.PSet(
        ptBin = cms.int32(100),
        chiMax = cms.double(20.0),
        etaBMax = cms.double(1.1),
        pMin = cms.double(0.0),
        etaMin = cms.double(-3.0),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        chiprobMax = cms.double(1.0),
        etaMax = cms.double(3.0),
        pMax = cms.double(100.0),
        phiMax = cms.double(3.2),
        etaECMin = cms.double(0.9),
        phiMin = cms.double(-3.2),
        etaECMax = cms.double(2.4),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        etaOvlpMax = cms.double(1.1),
        ptMax = cms.double(100.0),
        etaBin = cms.int32(100),
        chiprobMin = cms.double(0.0),
        phiBin = cms.int32(100),
        etaOvlpMin = cms.double(0.9),
        bsLabel = cms.InputTag("offlineBeamSpot"),
        etaBMin = cms.double(0.0),
        chiMin = cms.double(0.0),
        chiBin = cms.int32(100)
    ),
    muonEnergyAnalysis = cms.PSet(
        hadS9SizeMin = cms.double(0.0),
        hoS9SizeMax = cms.double(4.0),
        emSizeMin = cms.double(0.0),
        emS9SizeBin = cms.int32(100),
        emS9SizeMin = cms.double(0.0),
        hoSizeMax = cms.double(4.0),
        hoS9SizeBin = cms.int32(100),
        hoSizeMin = cms.double(0.0),
        emSizeMax = cms.double(4.0),
        hadS9SizeMax = cms.double(10.0),
        hoS9SizeMin = cms.double(0.0),
        hadSizeMin = cms.double(0.0),
        hadSizeBin = cms.int32(200),
        hadS9SizeBin = cms.int32(200),
        debug = cms.bool(False),
        AlgoName = cms.string('muons'),
        emS9SizeMax = cms.double(4.0),
        hadSizeMax = cms.double(10.0),
        hoSizeBin = cms.int32(100),
        emSizeBin = cms.int32(100)
    ),
    DoMuonRecoOneHLT = cms.untracked.bool(True),
    SeedCollection = cms.InputTag("ancientMuonSeed"),
    DoMuonSeedAnalysis = cms.untracked.bool(True),
    dimuonHistograms = cms.PSet(
        etaECMin = cms.double(0.9),
        etaBMin = cms.double(0.0),
        HighMassMin = cms.double(55.0),
        etaBBin = cms.int32(400),
        LowMassMin = cms.double(2.0),
        HighMassMax = cms.double(155.0),
        etaECMax = cms.double(2.4),
        etaBMax = cms.double(1.1),
        etaEBin = cms.int32(200),
        etaBin = cms.int32(400),
        LowMassMax = cms.double(55.0),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        bsLabel = cms.InputTag("offlineBeamSpot"),
        MuonCollection = cms.InputTag("muons")
    ),
    TriggerResultsLabel = cms.InputTag("TriggerResults","","HLT")
)


process.muonClientsQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/QualityTests2.xml')
)


process.muonComp2RefKolmoQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/Mu_Comp2RefKolmogorov.xml')
)


process.muonComp2RefQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/Mu_Comp2RefChi2.xml')
)


process.muonCosmicTestSummary = cms.EDAnalyzer("MuonTestSummary",
    expPeakHadS9_max = cms.double(3.0),
    resSegmTrack_rms_max = cms.double(1.1),
    resChargeLimit_tkSta = cms.double(0.18),
    expPeakHadS9_min = cms.double(1.0),
    expMultiplicityTk_max = cms.double(0.045),
    expMultiplicityTk_min = cms.double(0.0),
    chi2Spread = cms.double(0.2),
    matchesFractionDt_min = cms.double(0.75),
    resOneOvPSpread_glbSta = cms.double(0.05),
    matchesFractionDt_max = cms.double(1.0),
    resSegmTrack_mean_min = cms.double(-0.2),
    resSegmTrack_rms_min = cms.double(0.9),
    resSegmTrack_mean_max = cms.double(0.2),
    pullPhiSpread = cms.double(2.0),
    pullEtaSpread = cms.double(1.3),
    numMatchedExpected_min = cms.double(3.0),
    expMultiplicityGlb_min = cms.double(0.0),
    expMultiplicityGlb_max = cms.double(0.1),
    resEtaSpread_tkGlb = cms.double(0.001),
    expPeakEcalS9_max = cms.double(0.3),
    matchesFractionCsc_min = cms.double(0.75),
    expPeakEcalS9_min = cms.double(0.1),
    pullOneOvPSpread = cms.double(2.0),
    resOneOvPSpread_tkGlb = cms.double(0.001),
    matchesFractionCsc_max = cms.double(1.0),
    etaExpected = cms.double(0.5),
    resEtaSpread_glbSta = cms.double(0.05),
    phiExpected = cms.double(0.01),
    resChargeLimit_glbSta = cms.double(0.14),
    expMultiplicitySta_max = cms.double(0.95),
    resChargeLimit_tkGlb = cms.double(0.1),
    chi2Fraction = cms.double(0.4),
    resPhiSpread_tkGlb = cms.double(0.001),
    resPhiSpread_glbSta = cms.double(0.05),
    expMultiplicitySta_min = cms.double(0.75),
    numMatchedExpected_max = cms.double(5.0)
)


process.muonIdDQM = cms.EDAnalyzer("MuonIdDQM",
    baseFolder = cms.untracked.string('Muons/MuonIdDQM'),
    useGlobalMuonsNotTrackerMuons = cms.untracked.bool(False),
    useGlobalMuons = cms.untracked.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    useTrackerMuons = cms.untracked.bool(True),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    inputMuonCollection = cms.InputTag("muons"),
    useTrackerMuonsNotGlobalMuons = cms.untracked.bool(True)
)


process.muonSourcesQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/QualityTests1.xml')
)


process.muonTestSummary = cms.EDAnalyzer("MuonTestSummary",
    resEtaSpread_glbSta = cms.double(0.05),
    resSegmTrack_rms_max = cms.double(1.1),
    resChargeLimit_tkSta = cms.double(0.18),
    expPeakHadS9_min = cms.double(1.0),
    expMultiplicityTk_max = cms.double(0.16),
    numMatchedExpected_min = cms.double(3.0),
    expMultiplicityTk_min = cms.double(0.08),
    matchesFractionDt_min = cms.double(0.75),
    resOneOvPSpread_glbSta = cms.double(0.05),
    matchesFractionDt_max = cms.double(1.0),
    resSegmTrack_mean_min = cms.double(-0.2),
    resSegmTrack_rms_min = cms.double(0.9),
    resSegmTrack_mean_max = cms.double(0.2),
    pullPhiSpread = cms.double(2.0),
    pullEtaSpread = cms.double(1.3),
    expMultiplicityGlb_min = cms.double(0.75),
    expMultiplicityGlb_max = cms.double(0.95),
    resEtaSpread_tkGlb = cms.double(0.001),
    expPeakEcalS9_max = cms.double(0.3),
    matchesFractionCsc_min = cms.double(0.75),
    chi2Spread = cms.double(0.2),
    expPeakEcalS9_min = cms.double(0.1),
    pullOneOvPSpread = cms.double(2.0),
    resOneOvPSpread_tkGlb = cms.double(0.001),
    matchesFractionCsc_max = cms.double(1.0),
    etaExpected = cms.double(1.0),
    expPeakHadS9_max = cms.double(3.0),
    phiExpected = cms.double(1.0),
    resChargeLimit_glbSta = cms.double(0.14),
    expMultiplicitySta_max = cms.double(0.02),
    resChargeLimit_tkGlb = cms.double(0.1),
    chi2Fraction = cms.double(0.4),
    resPhiSpread_tkGlb = cms.double(0.001),
    resPhiSpread_glbSta = cms.double(0.05),
    expMultiplicitySta_min = cms.double(0.01),
    numMatchedExpected_max = cms.double(5.0)
)


process.normalizePlotsRealData = cms.EDAnalyzer("DQMHistNormalizer",
    plotNamesToNormalize = cms.vstring('*_pTRatio_*', 
        '*_Size_*', 
        '*_SumPt_*', 
        '*_dRTauRefJet*'),
    reference = cms.string('*_pTRatio_allHadronic')
)


process.normalizePlotsRealElectronsData = cms.EDAnalyzer("DQMHistNormalizer",
    plotNamesToNormalize = cms.vstring('*_pTRatio_*', 
        '*_Size_*', 
        '*_SumPt_*', 
        '*_dRTauRefJet*'),
    reference = cms.string('*_pTRatio_allHadronic')
)


process.normalizePlotsRealMuonsData = cms.EDAnalyzer("DQMHistNormalizer",
    plotNamesToNormalize = cms.vstring('*_pTRatio_*', 
        '*_Size_*', 
        '*_SumPt_*', 
        '*_dRTauRefJet*'),
    reference = cms.string('*_pTRatio_allHadronic')
)


process.photonAnalysis = cms.EDAnalyzer("PhotonAnalyzer",
    dEtaTracksMin = cms.double(-0.2),
    rMin = cms.double(0),
    prescaleFactor = cms.untracked.int32(1),
    eMin = cms.double(0.0),
    sumMin = cms.double(-3.0),
    excludeBkgHistos = cms.bool(True),
    eOverPBin = cms.int32(100),
    dEtaTracksMax = cms.double(0.2),
    sigmaIetaMax = cms.double(0.05),
    cutStep = cms.double(20.0),
    etaMin = cms.double(-2.5),
    sigmaIetaMin = cms.double(0.0),
    xMax = cms.double(60),
    etBin = cms.int32(500),
    etaMax = cms.double(2.5),
    numberMax = cms.double(10),
    chi2Min = cms.double(0.0),
    phiMin = cms.double(-3.14),
    isHeavyIon = cms.untracked.bool(False),
    zMax = cms.double(200),
    endcapRecHitCollection = cms.string(''),
    numberBin = cms.int32(10),
    useBinning = cms.bool(False),
    dPhiTracksBin = cms.int32(100),
    eOverPMin = cms.double(0.0),
    rMax = cms.double(80),
    OutputFileName = cms.string('DQMOfflinePhotonsAfterFirstStep.root'),
    photonCollection = cms.string(''),
    hOverEBin = cms.int32(200),
    etaBin = cms.int32(200),
    dEtaTracksBin = cms.int32(100),
    sumMax = cms.double(20.0),
    xMin = cms.double(-60),
    hOverEMax = cms.double(0.5),
    phiMax = cms.double(3.14),
    eBin = cms.int32(500),
    zMin = cms.double(-200),
    eOverPMax = cms.double(5.0),
    yMax = cms.double(60),
    standAlone = cms.bool(False),
    numberOfSteps = cms.int32(1),
    Verbosity = cms.untracked.int32(0),
    etMin = cms.double(0.0),
    minimalSetOfHistos = cms.bool(True),
    dPhiTracksMin = cms.double(-0.5),
    r9Min = cms.double(0.0),
    hOverEMin = cms.double(0),
    rBin = cms.int32(400),
    phiBin = cms.int32(200),
    endcapRecHitProducer = cms.string('reducedEcalRecHitsEE'),
    sigmaIetaBin = cms.int32(200),
    barrelRecHitCollection = cms.string(''),
    yBin = cms.int32(300),
    isolationStrength = cms.int32(1),
    r9Max = cms.double(1.2),
    numberMin = cms.double(0),
    etMax = cms.double(500.0),
    yMin = cms.double(-60),
    dPhiTracksMax = cms.double(0.5),
    phoProducer = cms.string('photons'),
    barrelRecHitProducer = cms.string('reducedEcalRecHitsEB'),
    r9Bin = cms.int32(120),
    zBin = cms.int32(400),
    xBin = cms.int32(300),
    useTriggerFiltering = cms.bool(False),
    chi2Max = cms.double(20.0),
    minPhoEtCut = cms.double(20.0),
    invMassEtCut = cms.double(20.0),
    eMax = cms.double(500.0),
    chi2Bin = cms.int32(100),
    Name = cms.untracked.string('photonAnalysis'),
    sumBin = cms.int32(230),
    triggerEvent = cms.InputTag("hltTriggerSummaryAOD"),
    OutputMEsInRootFile = cms.bool(False)
)


process.piZeroAnalysis = cms.EDAnalyzer("PiZeroAnalyzer",
    OutputMEsInRootFile = cms.bool(False),
    seleS4S9GammaOne = cms.double(0.85),
    seleMinvMaxPi0 = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    selePtGammaOne = cms.double(0.9),
    ParameterX0 = cms.double(0.89),
    seleXtalMinEnergy = cms.double(0.0),
    selePtPi0 = cms.double(2.5),
    clusSeedThr = cms.double(0.5),
    clusPhiSize = cms.int32(3),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    OutputFileName = cms.string('DQMOfflinePiZero.root'),
    clusEtaSize = cms.int32(3),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    selePi0Iso = cms.double(0.5),
    ParameterW0 = cms.double(4.2),
    Name = cms.untracked.string('piZeroAnalysis'),
    standAlone = cms.bool(False),
    Verbosity = cms.untracked.int32(0),
    selePi0BeltDeta = cms.double(0.05),
    ParameterLogWeighted = cms.bool(True),
    seleS4S9GammaTwo = cms.double(0.85),
    seleMinvMinPi0 = cms.double(0.0),
    selePtGammaTwo = cms.double(0.9),
    ParameterT0_barl = cms.double(5.7)
)


process.pvMonitor = cms.EDAnalyzer("PrimaryVertexMonitor",
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    vertexLabel = cms.InputTag("offlinePrimaryVertices")
)


process.qcdPhotonsCosmicDQM = cms.EDAnalyzer("QcdPhotonsDQM",
    plotPhotonMaxEta = cms.double(5.0),
    barrelRecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    plotPhotonMaxEt = cms.double(200.0),
    plotTheseTriggersToo = cms.vstring('HLT_Photon20', 
        'HLT_Photon25', 
        'HLT_Photon30', 
        'HLT_Photon50', 
        'HLT_DoublePhoton'),
    requirePhotonFound = cms.bool(True),
    trigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    minPhotonEt = cms.double(25.0),
    endcapRecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    plotJetMaxEta = cms.double(5.0),
    jetCollection = cms.InputTag("ak5PFJets"),
    photonCollection = cms.InputTag("photons"),
    triggerPathToPass = cms.string('HLT_Photon'),
    minJetPt = cms.double(5.0)
)


process.qcdPhotonsDQM = cms.EDAnalyzer("QcdPhotonsDQM",
    plotPhotonMaxEta = cms.double(5.0),
    barrelRecHitTag = cms.InputTag("reducedEcalRecHitsEB"),
    plotTheseTriggersToo = cms.vstring('HLT_Photon20', 
        'HLT_Photon25', 
        'HLT_Photon30', 
        'HLT_Photon50', 
        'HLT_DoublePhoton'),
    plotJetMaxEta = cms.double(5.0),
    requirePhotonFound = cms.bool(True),
    trigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    endcapRecHitTag = cms.InputTag("reducedEcalRecHitsEE"),
    minJetPt = cms.double(5.0),
    jetCollection = cms.InputTag("ak5PFJets"),
    photonCollection = cms.InputTag("photons"),
    minPhotonEt = cms.double(25.0),
    triggerPathToPass = cms.string('HLT_Photon'),
    plotPhotonMaxEt = cms.double(200.0)
)


process.qualityStatistics = cms.EDAnalyzer("SiStripQualityStatistics",
    TkMapFileName = cms.untracked.string(''),
    dataLabel = cms.untracked.string('unbiased')
)


process.rpcDcsInfo = cms.EDAnalyzer("RPCDcsInfo",
    ScalersRawToDigiLabel = cms.untracked.string('scalersRawToDigi'),
    subSystemFolder = cms.untracked.string('RPC'),
    dcsInfoFolder = cms.untracked.string('DCSInfo')
)


process.rpcEfficiency = cms.EDAnalyzer("RPCEfficiency",
    cscSegments = cms.InputTag("cscSegments"),
    rangestripsRB4 = cms.untracked.double(4.0),
    incldtMB4 = cms.untracked.bool(True),
    DuplicationCorrection = cms.untracked.int32(1),
    RecHitLabel = cms.InputTag("rpcRecHits"),
    rangestrips = cms.untracked.double(1.0),
    inves = cms.untracked.bool(True),
    EffRootFileName = cms.untracked.string('/tmp/carrillo/RPCEfficiencyFIRST.root'),
    EffSaveRootFile = cms.untracked.bool(False),
    MaxDrb4 = cms.untracked.double(150.0),
    inclcsc = cms.untracked.bool(True),
    MaxD = cms.untracked.double(80.0),
    MinCosAng = cms.untracked.double(0.99),
    incldt = cms.untracked.bool(True),
    debug = cms.untracked.bool(False),
    EffSaveRootFileEventsInterval = cms.untracked.int32(100),
    dt4DSegments = cms.InputTag("dt4DSegments")
)


process.rpcEventInfo = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('RPC')
)


process.rpcFEDIntegrity = cms.EDAnalyzer("RPCFEDIntegrity",
    MaximumFEDID = cms.untracked.int32(792),
    RPCRawCountsInputTag = cms.untracked.InputTag("muonRPCDigis"),
    MinimumFEDID = cms.untracked.int32(790),
    RPCPrefixDir = cms.untracked.string('RPC/FEDIntegrity'),
    NumberOfFED = cms.untracked.int32(3)
)


process.rpcMonitorLinkSynchro = cms.EDAnalyzer("RPCMonitorLinkSynchro",
    dumpDelays = cms.untracked.bool(False),
    useFirstHitOnly = cms.untracked.bool(False)
)


process.rpcMonitorRaw = cms.EDAnalyzer("RPCMonitorRaw",
    watchedErrors = cms.untracked.vint32(8, 9)
)


process.rpcdigidqm = cms.EDAnalyzer("RPCMonitorDigi",
    RootFileName = cms.untracked.string('RPCMonitorDigi.root'),
    RPCFolder = cms.untracked.string('RPC'),
    NoiseFolder = cms.untracked.string('AllHits'),
    RecHitLabel = cms.InputTag("rpcRecHits"),
    MuonPtCut = cms.untracked.double(3.0),
    UseRollInfo = cms.untracked.bool(False),
    GlobalFolder = cms.untracked.string('SummaryHistograms'),
    MuonFolder = cms.untracked.string('Muon'),
    MuonEtaCut = cms.untracked.double(1.9),
    SaveRootFile = cms.untracked.bool(False),
    NumberOfEndcapDisks = cms.untracked.int32(3),
    MuonLabel = cms.InputTag("muons"),
    UseMuon = cms.untracked.bool(True),
    NumberOfInnermostEndcapRings = cms.untracked.int32(2)
)


process.rpcrechitprobability = cms.EDAnalyzer("RPCRecHitProbability",
    RootFileName = cms.untracked.string('RPCRecHitProbabilityDQM.root'),
    MuonLabel = cms.InputTag("muons"),
    MuonPtCut = cms.untracked.double(3.0),
    GlobalFolder = cms.untracked.string('SummaryHistograms/RecHits'),
    MuonFolder = cms.untracked.string('Muon'),
    MuonEtaCut = cms.untracked.double(1.9),
    SaveRootFile = cms.untracked.bool(False),
    RPCFolder = cms.untracked.string('RPC')
)


process.siStripFEDCheck = cms.EDAnalyzer("SiStripFEDCheckPlugin",
    PrintDebugMessages = cms.untracked.bool(False),
    CheckChannelStatus = cms.untracked.bool(True),
    DoPayloadChecks = cms.untracked.bool(True),
    CheckChannelLengths = cms.untracked.bool(True),
    WriteDQMStore = cms.untracked.bool(False),
    CheckFELengths = cms.untracked.bool(True),
    RawDataTag = cms.InputTag("source"),
    HistogramUpdateFrequency = cms.untracked.uint32(0),
    CheckChannelPacketCodes = cms.untracked.bool(True),
    DirName = cms.untracked.string('SiStrip/FEDIntegrity/')
)


process.siStripFEDMonitor = cms.EDAnalyzer("SiStripFEDMonitorPlugin",
    nTotalBadActiveChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FeMajFracTECFHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    DataMissingHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    AnyFEProblemsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    OOSBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    MedianAPV0HistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(1024),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(256)
    ),
    TkHistoMapHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    BadDAQPacketHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    APVErrorBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    InvalidBuffersHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nAPVStatusBitHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nOutOfSyncHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nAPVAddressErrorvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    ErrorFractionByLumiBlockHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nAPVAddressErrorHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    BadActiveChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    AnyDAQProblemsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    UnlockedBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nFEDCorruptBuffersvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    DataPresentHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nBadChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    PrintDebugMessages = cms.untracked.uint32(0),
    ApveAddressHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FEOverflowsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDDAQProblemsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    nFEDCorruptBuffersHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    FillWithEventNumber = cms.untracked.bool(False),
    nUnlockedHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nFEDsWithMissingFEsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    nAPVErrorHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FETimeDiffTECBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FETimeDiffTOBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FeMajFracTECBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FedMaxEventSizevsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadMajorityAddressesDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FillAllDetailedHistograms = cms.untracked.bool(False),
    CorruptBuffersHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nTotalBadChannelsvsTimeHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(3600),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(600)
    ),
    nFEDsWithFEProblemsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nBadActiveChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FEMissingDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadAPVStatusBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nUnconnectedChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(8000),
        Min = cms.untracked.double(6000),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FedIdVsApvIdHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    BadDAQCRCsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FEOverflowsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nTotalBadChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nUnlockedvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nAPVStatusBitvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDErrorsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(440.5),
        Min = cms.untracked.double(-0.5),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    nAPVErrorvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FedEventSizeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    APVAddressErrorBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FeMajAddressHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    BadMajorityAddressesHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    RawDataTag = cms.untracked.InputTag("rawDataCollector"),
    nFEDsWithFEOverflowsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    nFEDErrorsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    TimeHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(3600),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(600)
    ),
    AnyFEDErrorsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FeMajFracTOBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FETimeDiffTIBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    nFEDsWithFEProblemsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    FETimeDiffTECFHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nFEDsWithFEBadMajorityAddressesHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(441),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(441)
    ),
    BadMajorityInPartitionHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FETimeDiffvsDBXHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    HistogramFolderName = cms.untracked.string('SiStrip/ReadoutView/FedSummary'),
    FEMissingHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    BadFEDCRCsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FeMajFracTIBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadIDsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nTotalBadActiveChannelsvsTimeHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(3600),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(600)
    ),
    nOutOfSyncvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    MedianAPV1HistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(1024),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(256)
    )
)


process.susyDQM = cms.EDAnalyzer("RecoSusyDQM",
    electronCollection = cms.InputTag("gsfElectrons"),
    metCollection = cms.InputTag("met"),
    elec_d0_cut = cms.double(0.2),
    muon_eta_cut = cms.double(2.4),
    muonCollection = cms.InputTag("muons"),
    RAL_elec_iso_cut = cms.double(0.5),
    muon_nChi2_cut = cms.double(10),
    RAL_jet_sum_pt_cut = cms.double(100.0),
    elec_mva_cut = cms.double(0.1),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    elec_eta_cut = cms.double(2.5),
    RAL_muon_iso_cut = cms.double(0.1),
    RAL_jet_max_emf_cut = cms.double(0.95),
    RAL_met_cut = cms.double(50.0),
    RAL_muon_pt_cut = cms.double(7.0),
    RAL_jet_min_emf_cut = cms.double(0.05),
    RAL_elec_pt_cut = cms.double(7.0),
    RAL_jet_pt_cut = cms.double(30.0),
    moduleName = cms.untracked.string('Physics/Susy'),
    RAL_jet_eta_cut = cms.double(3.0),
    muon_d0_cut = cms.double(0.2),
    jetCollection = cms.InputTag("ak5CaloJets"),
    muon_nHits_cut = cms.double(11)
)


process.tightAnalyzer = cms.EDAnalyzer("HLTMuonOfflineAnalyzer",
    requiredTriggers = cms.untracked.vstring(),
    hltPathsToCheck = cms.vstring('HLT_PADimuon0_NoVertexing_v', 
        'HLT_PAL1DoubleMu0_HighQ_v', 
        'HLT_PAL1DoubleMuOpen_v', 
        'HLT_PAL2DoubleMu3_v', 
        'HLT_PAMu3_v', 
        'HLT_PAMu7_v', 
        'HLT_PAMu12_v', 
        'HLT_PABTagMu_Jet20_Mu4_v', 
        'HLT_PAMu3PFJet20_v', 
        'HLT_PAMu3PFJet40_v', 
        'HLT_PAMu7PFJet20_v', 
        'HLT_IsoMu20_eta2p1_v', 
        'HLT_IsoMu24_eta2p1_v', 
        'HLT_IsoMu24_v', 
        'HLT_IsoMu30_eta2p1_v', 
        'HLT_IsoMu30_v', 
        'HLT_IsoMu34_eta2p1_v', 
        'HLT_IsoMu40_eta2p1_v', 
        'HLT_L1SingleMu12_v', 
        'HLT_Mu12_v', 
        'HLT_Mu15_eta2p1_v', 
        'HLT_Mu17_v', 
        'HLT_Mu24_eta2p1_v', 
        'HLT_Mu30_eta2p1_v', 
        'HLT_Mu40_v', 
        'HLT_Mu40_eta2p1_v', 
        'HLT_Mu50_eta2p1_v', 
        'HLT_Mu5_v', 
        'HLT_Mu8_v', 
        'HLT_RelIso1p0Mu17_v', 
        'HLT_RelIso1p0Mu5_v', 
        'HLT_DoubleMu5_IsoMu5_v', 
        'HLT_Mu13_Mu8_v', 
        'HLT_Mu17_Mu8_v', 
        'HLT_Mu17_TkMu8_v', 
        'HLT_Mu22_TkMu22_v', 
        'HLT_Mu22_TkMu8_v', 
        'HLT_TripleMu5_v', 
        'HLT_DoubleMu11_Acoplanarity03_v', 
        'HLT_Mu40_eta2p1_Track50_dEdx3p6_v', 
        'HLT_Mu40_eta2p1_Track60_dEdx3p7_v'),
    destination = cms.untracked.string('HLT/Muon/DistributionsTight'),
    hltProcessName = cms.string('HLT'),
    plotCuts = cms.PSet(
        maxEta = cms.untracked.double(2.1),
        minPtFactor = cms.untracked.double(1.2),
        L3DeltaR = cms.untracked.double(0.05),
        L1DeltaR = cms.untracked.double(0.3),
        L2DeltaR = cms.untracked.double(0.3)
    ),
    probeParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.0'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.0')
    ),
    inputTags = cms.PSet(
        triggerResults = cms.InputTag("TriggerResults"),
        recoMuon = cms.InputTag("muons"),
        triggerSummary = cms.InputTag("hltTriggerSummaryAOD"),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    targetParams = cms.PSet(
        d0Cut = cms.untracked.double(0.2),
        recoCuts = cms.untracked.string('isGlobalMuon && isPFMuon && isTrackerMuon && abs(eta) < 2.4 && innerTrack.hitPattern.numberOfValidPixelHits > 0 && innerTrack.hitPattern.trackerLayersWithMeasurement > 5 && (pfIsolationR04().sumChargedHadronPt + max(pfIsolationR04().sumNeutralHadronEt + pfIsolationR04().sumPhotonEt - pfIsolationR04().sumPUPt/2,0.0))/pt < 0.12 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && globalTrack.normalizedChi2 < 10 && numberOfMatches > 1'),
        z0Cut = cms.untracked.double(0.5),
        hltCuts = cms.untracked.string('abs(eta) < 2.4')
    ),
    binParams = cms.untracked.PSet(
        jpsiMass = cms.untracked.vdouble(60, 0.0, 6.0),
        resolutionRel = cms.untracked.vdouble(20, -0.15, 0.15),
        pt = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
            10.0, 20.0, 30.0, 40.0, 100.0, 
            200.0, 400.0),
        etaCoarse = cms.untracked.vdouble(-2.4, -2.1, -1.6, -1.2, -0.8, 
            0.0, 0.8, 1.2, 1.6, 2.1, 
            2.4),
        deltaR = cms.untracked.vdouble(20, 0.0, 0.05),
        resolutionEta = cms.untracked.vdouble(20, -0.01, 0.01),
        phi = cms.untracked.vdouble(20, -3.14, 3.14),
        ptCoarse = cms.untracked.vdouble(10.0, 20.0, 40.0, 60.0, 80.0, 
            100.0, 200.0),
        charge = cms.untracked.vdouble(2, -2.0, 2.0),
        eta = cms.untracked.vdouble(20, -2.4, 2.4),
        d0 = cms.untracked.vdouble(10, -0.5, 0.5),
        zMass = cms.untracked.vdouble(50, 65.0, 115.0),
        phiCoarse = cms.untracked.vdouble(10, -3.14, 3.14),
        z0 = cms.untracked.vdouble(10, -15.0, 15.0),
        resolutionPhi = cms.untracked.vdouble(20, -0.01, 0.01),
        NVertex = cms.untracked.vdouble(20, 1, 50)
    )
)


process.topDiLeptonOfflineDQM = cms.EDAnalyzer("TopDiLeptonOfflineDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(3.2),
            lowerEdge = cms.double(3.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.2'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("eidRobustLoose")
            ),
            select = cms.string('pt>5 && abs(eta)<2.4 && abs(gsfTrack.d0)<1 && abs(gsfTrack.dz)<20')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopDiLeptonDQM/'),
        jetExtras = cms.PSet(
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.2'),
            select = cms.string('pt>1 && abs(eta)<2.4 && abs(globalTrack.d0)<1 && abs(globalTrack.dz)<20')
        ),
        triggerExtras = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            pathsELECMU = cms.vstring('HLT_Mu9:HLT_Ele15_SW_L1R', 
                'HLT_Mu15:HLT_Ele15_SW_L1R', 
                'HLT_DoubleMu3:HLT_Ele15_SW_L1R', 
                'HLT_Ele15_SW_L1R:HLT_Mu9', 
                'HLT_Ele15_SW_L1R:HLT_DoubleMu3'),
            pathsDIMUON = cms.vstring('HLT_Mu15:HLT_Mu9', 
                'HLT_DoubleMu3:HLT_Mu9', 
                'HLT_Mu9:HLT_DoubleMu3', 
                'HLT_Mu15:HLT_DoubleMu3')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        label = cms.string('empty:step0')
    )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Mu9', 
                'HLT_Ele15_SW_L1R', 
                'HLT_DoubleMu3')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. && abs(y)<1. && abs(z)<20. && tracksSize>3 && !isFake')
        )
    )
)


process.topHLTDiMuonDQM = cms.EDAnalyzer("TopHLTDiMuonDQM",
    vertex_Z_cut = cms.double(24.0),
    TriggerEvent = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    hltPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu13_v1', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu3', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_LW_L1R', 
        'HLT_Ele20_LW_L1R'),
    hltPaths_sig = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1'),
    muon_pT_cut = cms.double(5.0),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    monitorName = cms.string('HLT/Top/HLTDiMuon/'),
    TriggerFilter = cms.InputTag("hltSingleMu15L3Filtered15","","HLT"),
    hltPaths_L1 = cms.vstring('HLT_L1MuOpen', 
        'HLT_L1Mu', 
        'HLT_L1Mu20', 
        'HLT_L1DoubleMuOpen'),
    hltPaths_L3 = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu13_v1', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu3', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_LW_L1R', 
        'HLT_Ele20_LW_L1R'),
    hltPaths_trig = cms.vstring('HLT_Mu5', 
        'HLT_Mu5', 
        'HLT_Mu9', 
        'HLT_Mu9', 
        'HLT_Mu5', 
        'HLT_Mu5'),
    vertex_X_cut = cms.double(1.2),
    muon_eta_cut = cms.double(2.5),
    vertex_Y_cut = cms.double(1.2),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    MassWindow_up = cms.double(106.0),
    muonCollection = cms.InputTag("muons"),
    MassWindow_down = cms.double(76.0),
    muon_iso_cut = cms.double(0.15)
)


process.topSingleElectronLooseDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronLooseDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Ele15_LW_L1R:HLT_QuadJetU15'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        label = cms.string('elecs:step0'),
        select = cms.string('pt>15 & abs(eta)<2.5'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleElectronLooseDQM_PU = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronLooseDQM_PU/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        label = cms.string('elecs:step0'),
        select = cms.string('pt>15 & abs(eta)<2.5'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            max = cms.int32(10),
            label = cms.string('pvs:step1'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(8),
            label = cms.string('pvs:step2'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(6),
            label = cms.string('pvs:step3'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(4),
            label = cms.string('pvs:step4'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(2),
            label = cms.string('pvs:step5'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleElectronMediumDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronMediumDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Ele15_LW_L1R:HLT_QuadJetU15'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        min = cms.int32(1),
        max = cms.int32(1),
        label = cms.string('elecs:step0'),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleElectronMediumDQM_PU = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronMediumDQM_PU/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        min = cms.int32(1),
        max = cms.int32(1),
        label = cms.string('elecs:step0'),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
    ), 
        cms.PSet(
            max = cms.int32(10),
            label = cms.string('pvs:step1'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(8),
            label = cms.string('pvs:step2'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(6),
            label = cms.string('pvs:step3'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(4),
            label = cms.string('pvs:step4'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(2),
            label = cms.string('pvs:step5'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleLeptonDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr04EcalRecHitSumEt+dr04HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("eidRobustLoose")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & abs(gsfTrack.d0)<1 & abs(gsfTrack.dz)<20')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleLeptonDQM/'),
        jetExtras = cms.PSet(
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt>10 & abs(eta)<2.1 & isGlobalMuon & abs(globalTrack.d0)<1 & abs(globalTrack.dz)<20')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("ak5CaloJets"),
        jetID = cms.PSet(
            select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
            label = cms.InputTag("ak5JetID")
        ),
        label = cms.string('jets/calo:step0'),
        select = cms.string('pt>20 & abs(eta)<2.1 & 0.05<emEnergyFraction'),
        min = cms.int32(2)
    )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Mu11', 
                'HLT_Ele15_LW_L1R', 
                'HLT_QuadJet30')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleMuonLooseDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonLooseDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt > 10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Mu3:HLT_QuadJet15U', 
                'HLT_Mu5:HLT_QuadJet15U', 
                'HLT_Mu7:HLT_QuadJet15U', 
                'HLT_Mu9:HLT_QuadJet15U', 
                'HLT_Mu11:HLT_QuadJet15U'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("muons"),
        label = cms.string('muons:step0'),
        select = cms.string('pt>10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleMuonLooseDQM_PU = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonLooseDQM_PU/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt > 10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("muons"),
        label = cms.string('muons:step0'),
        select = cms.string('pt>10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            max = cms.int32(10),
            label = cms.string('pvs:step1'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(8),
            label = cms.string('pvs:step2'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(6),
            label = cms.string('pvs:step3'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(4),
            label = cms.string('pvs:step4'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(2),
            label = cms.string('pvs:step5'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleMuonMediumDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonMediumDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5& emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Mu3:HLT_QuadJet15U', 
                'HLT_Mu5:HLT_QuadJet15U', 
                'HLT_Mu7:HLT_QuadJet15U', 
                'HLT_Mu9:HLT_QuadJet15U', 
                'HLT_Mu11:HLT_QuadJet15U'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        max = cms.int32(1),
        src = cms.InputTag("muons"),
        min = cms.int32(1),
        select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
        label = cms.string('muons:step0')
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleMuonMediumDQM_PU = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        pvExtras = cms.PSet(
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            pvs = cms.InputTag("offlinePrimaryVertices"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonMediumDQM_PU/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5& emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        max = cms.int32(1),
        src = cms.InputTag("muons"),
        min = cms.int32(1),
        select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
        label = cms.string('muons:step0')
    ), 
        cms.PSet(
            max = cms.int32(10),
            label = cms.string('pvs:step1'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(8),
            label = cms.string('pvs:step2'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(6),
            label = cms.string('pvs:step3'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(4),
            label = cms.string('pvs:step4'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        ), 
        cms.PSet(
            max = cms.int32(2),
            label = cms.string('pvs:step5'),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake'),
            src = cms.InputTag("offlinePrimaryVertices")
        )),
    preselection = cms.PSet(
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.towerOptAnalyzer = cms.EDAnalyzer("CaloTowerAnalyzer",
    HLTBitLabels = cms.VInputTag(cms.InputTag("HLT_MET100"), cms.InputTag("HLT_HT100U")),
    FineBinning = cms.untracked.bool(False),
    HLTSelection = cms.untracked.bool(False),
    FolderName = cms.untracked.string('JetMET/CaloTowers/Optimized'),
    CaloTowersLabel = cms.InputTag("calotoweroptmaker"),
    AllHist = cms.untracked.bool(True),
    Debug = cms.bool(False),
    HLTResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult")
)


process.towerSchemeBAnalyzer = cms.EDAnalyzer("CaloTowerAnalyzer",
    HLTBitLabels = cms.VInputTag(cms.InputTag("HLT_MET100"), cms.InputTag("HLT_HT100U")),
    FineBinning = cms.untracked.bool(False),
    HLTSelection = cms.untracked.bool(False),
    FolderName = cms.untracked.string('JetMET/CaloTowers/SchemeB'),
    CaloTowersLabel = cms.InputTag("towerMaker"),
    AllHist = cms.untracked.bool(False),
    Debug = cms.bool(False),
    HLTResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult")
)


process.trackerAnalyzer = cms.EDAnalyzer("HLTMuonOfflineAnalyzer",
    requiredTriggers = cms.untracked.vstring(),
    hltPathsToCheck = cms.vstring('HLT_PADimuon0_NoVertexing_v', 
        'HLT_PAL1DoubleMu0_HighQ_v', 
        'HLT_PAL1DoubleMuOpen_v', 
        'HLT_PAL2DoubleMu3_v', 
        'HLT_PAMu3_v', 
        'HLT_PAMu7_v', 
        'HLT_PAMu12_v', 
        'HLT_PABTagMu_Jet20_Mu4_v', 
        'HLT_PAMu3PFJet20_v', 
        'HLT_PAMu3PFJet40_v', 
        'HLT_PAMu7PFJet20_v', 
        'HLT_IsoMu20_eta2p1_v', 
        'HLT_IsoMu24_eta2p1_v', 
        'HLT_IsoMu24_v', 
        'HLT_IsoMu30_eta2p1_v', 
        'HLT_IsoMu30_v', 
        'HLT_IsoMu34_eta2p1_v', 
        'HLT_IsoMu40_eta2p1_v', 
        'HLT_L1SingleMu12_v', 
        'HLT_Mu12_v', 
        'HLT_Mu15_eta2p1_v', 
        'HLT_Mu17_v', 
        'HLT_Mu24_eta2p1_v', 
        'HLT_Mu30_eta2p1_v', 
        'HLT_Mu40_v', 
        'HLT_Mu40_eta2p1_v', 
        'HLT_Mu50_eta2p1_v', 
        'HLT_Mu5_v', 
        'HLT_Mu8_v', 
        'HLT_RelIso1p0Mu17_v', 
        'HLT_RelIso1p0Mu5_v', 
        'HLT_DoubleMu5_IsoMu5_v', 
        'HLT_Mu13_Mu8_v', 
        'HLT_Mu17_Mu8_v', 
        'HLT_Mu17_TkMu8_v', 
        'HLT_Mu22_TkMu22_v', 
        'HLT_Mu22_TkMu8_v', 
        'HLT_TripleMu5_v', 
        'HLT_DoubleMu11_Acoplanarity03_v', 
        'HLT_Mu40_eta2p1_Track50_dEdx3p6_v', 
        'HLT_Mu40_eta2p1_Track60_dEdx3p7_v'),
    destination = cms.untracked.string('HLT/Muon/DistributionsTracker'),
    hltProcessName = cms.string('HLT'),
    plotCuts = cms.PSet(
        maxEta = cms.untracked.double(2.1),
        minPtFactor = cms.untracked.double(1.2),
        L3DeltaR = cms.untracked.double(0.05),
        L1DeltaR = cms.untracked.double(0.3),
        L2DeltaR = cms.untracked.double(0.3)
    ),
    probeParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.0'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.0')
    ),
    inputTags = cms.PSet(
        triggerResults = cms.InputTag("TriggerResults"),
        recoMuon = cms.InputTag("muons"),
        triggerSummary = cms.InputTag("hltTriggerSummaryAOD"),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    targetParams = cms.PSet(
        d0Cut = cms.untracked.double(2.0),
        recoCuts = cms.untracked.string('isTrackerMuon && abs(eta) < 2.4'),
        z0Cut = cms.untracked.double(25.0),
        hltCuts = cms.untracked.string('abs(eta) < 2.4')
    ),
    binParams = cms.untracked.PSet(
        jpsiMass = cms.untracked.vdouble(60, 0.0, 6.0),
        resolutionRel = cms.untracked.vdouble(20, -0.15, 0.15),
        pt = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
            10.0, 20.0, 30.0, 40.0, 100.0, 
            200.0, 400.0),
        etaCoarse = cms.untracked.vdouble(-2.4, -2.1, -1.6, -1.2, -0.8, 
            0.0, 0.8, 1.2, 1.6, 2.1, 
            2.4),
        deltaR = cms.untracked.vdouble(20, 0.0, 0.05),
        resolutionEta = cms.untracked.vdouble(20, -0.01, 0.01),
        phi = cms.untracked.vdouble(20, -3.14, 3.14),
        ptCoarse = cms.untracked.vdouble(10.0, 20.0, 40.0, 60.0, 80.0, 
            100.0, 200.0),
        charge = cms.untracked.vdouble(2, -2.0, 2.0),
        eta = cms.untracked.vdouble(20, -2.4, 2.4),
        d0 = cms.untracked.vdouble(10, -0.5, 0.5),
        zMass = cms.untracked.vdouble(50, 65.0, 115.0),
        phiCoarse = cms.untracked.vdouble(10, -3.14, 3.14),
        z0 = cms.untracked.vdouble(10, -15.0, 15.0),
        resolutionPhi = cms.untracked.vdouble(20, -0.01, 0.01),
        NVertex = cms.untracked.vdouble(20, 1, 50)
    )
)


process.zdcMonitor = cms.EDAnalyzer("ZDCMonitorModule",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    subSystemFolder = cms.untracked.string('Hcal/ZDCMonitor_Hcal/'),
    enableCleanup = cms.untracked.bool(False),
    UnpackerReport = cms.untracked.InputTag("hcalDigis"),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0)
)


process.zmumugammaAnalysis = cms.EDAnalyzer("ZToMuMuGammaAnalyzer",
    phiBin = cms.int32(200),
    sumMin = cms.double(-3.0),
    barrelRecHitCollection = cms.string(''),
    isHeavyIon = cms.untracked.bool(False),
    numberMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    barrelRecHitProducer = cms.string('reducedEcalRecHitsEB'),
    zMax = cms.double(200),
    zMin = cms.double(-200),
    sumMax = cms.double(20.0),
    muonMaxDxy = cms.double(0.2),
    muonTrackIso = cms.double(3.0),
    muonTightEta = cms.double(2.1),
    muonMaxChi2 = cms.double(10.0),
    sigmaIetaBin = cms.int32(200),
    muonProducer = cms.string('muons'),
    phoProducer = cms.string('photons'),
    dEtaTracksMin = cms.double(-0.2),
    rMin = cms.double(0),
    dEtaTracksMax = cms.double(0.2),
    muonMinPt = cms.double(20.0),
    chi2Min = cms.double(0.0),
    dPhiTracksBin = cms.int32(100),
    eOverPMin = cms.double(0.0),
    rMax = cms.double(80),
    etaBin = cms.int32(200),
    dEtaTracksBin = cms.int32(100),
    validPixHits = cms.int32(1),
    eOverPMax = cms.double(5.0),
    minMumuGammaInvMass = cms.double(75.0),
    photonMaxEta = cms.double(2.5),
    r9Min = cms.double(0.0),
    nearMuonHcalIso = cms.double(1.0),
    farMuonMinPt = cms.double(15.0),
    r9Max = cms.double(1.2),
    numberMin = cms.double(0),
    xBin = cms.int32(300),
    useTriggerFiltering = cms.bool(False),
    endcapRecHitProducer = cms.string('reducedEcalRecHitsEE'),
    farMuonEcalIso = cms.double(1.0),
    prescaleFactor = cms.untracked.int32(1),
    maxMumuGammaInvMass = cms.double(105.0),
    sigmaIetaMax = cms.double(0.05),
    OutputFileName = cms.string('DQMOfflinePhotonsAfterFirstStep.root'),
    numberBin = cms.int32(10),
    sigmaIetaMin = cms.double(0.0),
    photonCollection = cms.string(''),
    hOverEMax = cms.double(0.5),
    yMin = cms.double(-60),
    yMax = cms.double(60),
    Verbosity = cms.untracked.int32(0),
    minPixStripHits = cms.int32(10),
    hOverEMin = cms.double(0),
    minMumuInvMass = cms.double(60.0),
    etMin = cms.double(0.0),
    eBin = cms.int32(500),
    maxMumuInvMass = cms.double(120.0),
    etMax = cms.double(500.0),
    nearMuonDr = cms.double(1.0),
    farMuonTrackIso = cms.double(3.0),
    chi2Max = cms.double(20.0),
    Name = cms.untracked.string('zmumugammaAnalysis'),
    photonTrackIso = cms.double(0.9),
    eMin = cms.double(0.0),
    eOverPBin = cms.int32(100),
    etaMin = cms.double(-2.5),
    xMax = cms.double(60),
    muonCollection = cms.string(''),
    etaMax = cms.double(2.5),
    photonMinEt = cms.double(15.0),
    etBin = cms.int32(500),
    r9Bin = cms.int32(120),
    validMuonHits = cms.int32(1),
    eMax = cms.double(500.0),
    sumBin = cms.int32(230),
    hOverEBin = cms.int32(200),
    xMin = cms.double(-60),
    endcapRecHitCollection = cms.string(''),
    standAlone = cms.bool(False),
    dPhiTracksMin = cms.double(-0.5),
    muonMatches = cms.int32(2),
    rBin = cms.int32(400),
    yBin = cms.int32(300),
    dPhiTracksMax = cms.double(0.5),
    zBin = cms.int32(400),
    triggerEvent = cms.InputTag("hltTriggerSummaryAOD"),
    chi2Bin = cms.int32(100)
)


process.regionalCosmicTracksSeq = cms.Sequence(process.regionalCosmicTrackerSeeds+process.regionalCosmicCkfTrackCandidates+process.regionalCosmicTracks)


process.ak7JTA = cms.Sequence(process.ak7JetTracksAssociatorAtVertex+process.ak7JetTracksAssociatorAtCaloFace+process.ak7JetExtender)


process.runTauEffSingleMu = cms.Sequence(process.efficienciesRealMuonsData+process.efficienciesRealData+process.normalizePlotsRealMuonsData)


process.seqALCARECOMuAlBeamHalo = cms.Sequence(process.ALCARECOMuAlBeamHaloHLT+process.ALCARECOMuAlBeamHaloDCSFilter+process.ALCARECOMuAlBeamHalo)


process.seqL1TriggerObjHTMQualityTests = cms.Sequence(process.l1TriggerObjHTMQualityTests)


process.seqALCARECOHcalCalHO = cms.Sequence(process.ALCARECOHcalCalHOHLT+process.hoCalibProducer)


process.dtSources = cms.Sequence(process.dtDataIntegrityUnpacker+process.dtDCSByLumiMonitor+process.dtRunConditionVar+process.dtSegmentAnalysisMonitor+process.dtResolutionAnalysisMonitor+process.dtEfficiencyMonitor+process.dtTriggerEfficiencyMonitor+process.dqmInfoDT)


process.iterativeCone5JTA = cms.Sequence(process.iterativeCone5JetTracksAssociatorAtVertex+process.iterativeCone5JetTracksAssociatorAtCaloFace+process.iterativeCone5JetExtender)


process.dtlocalreco = cms.Sequence(process.dt1DRecHits+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt4DCosmicSegments)


process.ALCARECODTCalibSynchDQM = cms.Sequence(process.dtPreCalibrationTaskAlca+process.dtAlcaResolutionMonitor+process.dtTriggerSynchMonitor+process.ALCARECODtCalibHLTDQM)


process.HLTTauDQMOfflineCertification = cms.Sequence(process.hltTauOfflineCertification)


process.ALCARECOTkAlCosmicsCTFDQM = cms.Sequence(process.ALCARECOTkAlCosmicsCTFTrackingDQM+process.ALCARECOTkAlCosmicsCTFTkAlDQM+process.ALCARECOTkAlCosmicsCTFHLTDQM)


process.muonQualityTests = cms.Sequence(process.muonSourcesQualityTests+process.muTrackResidualsTest+process.effPlotter+process.muRecoTest+process.muonClientsQualityTests+process.muonComp2RefQualityTests+process.muonComp2RefKolmoQualityTests+process.muonTestSummary)


process.seqALCARECOTkAlZMuMu = cms.Sequence(process.ALCARECOTkAlZMuMuHLT+process.ALCARECOTkAlZMuMuDCSFilter+process.ALCARECOTkAlZMuMuGoodMuons+process.ALCARECOTkAlZMuMuRelCombIsoMuons+process.ALCARECOTkAlZMuMu)


process.seqALCARECOLumiPixels = cms.Sequence(process.siPixelDigisForLumi+process.siPixelClustersForLumi)


process.photonSequence = cms.Sequence(process.photonCore+process.photons)


process.RunTanc = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.alcaBeamSpot = cms.Sequence(process.alcaBeamSpotProducer)


process.JetPlusTrackCorrectionsAntiKt5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetAntiKt5)


process.beamhaloTracksSeq = cms.Sequence(process.beamhaloTrackerSeeds+process.beamhaloTrackCandidates+process.beamhaloTracks)


process.PixelPairStep = cms.Sequence(process.pixelPairStepClusters+process.pixelPairStepSeeds+process.pixelPairStepTrackCandidates+process.pixelPairStepTracks+process.pixelPairStepSelector)


process.hpsPFTauDiscriminationByChargedIsolationSeq = cms.Sequence(process.hpsPFTauDiscriminationByVLooseChargedIsolation+process.hpsPFTauDiscriminationByLooseChargedIsolation+process.hpsPFTauDiscriminationByMediumChargedIsolation+process.hpsPFTauDiscriminationByTightChargedIsolation)


process.hpsTancTauInitialSequence = cms.Sequence(process.combinatoricRecoTausDiscriminationByLeadingPionPtCut+process.combinatoricRecoTausHPSSelector+process.hpsTancTausSansRefs+process.hpsTancTaus+process.hpsTancTausDiscriminationByLeadingTrackFinding+process.hpsTancTausDiscriminationByLeadingPionPtCut+process.hpsTancTausDiscriminationByLeadingTrackPtCut+process.hpsTancTausDiscriminationByDecayModeSelection)


process.seqALCARECOEcalCalEtaCalib = cms.Sequence(process.ecaletaCalibHLT+process.ecalEtaCorrected)


process.muIsoDQM_seq = cms.Sequence(process.MuIsoDQM_trk+process.MuIsoDQM_sta+process.MuIsoDQM_glb)


process.ALCARECOTkAlCosmicsRegional0TDQM = cms.Sequence(process.ALCARECOTkAlCosmicsRegional0TTrackingDQM+process.ALCARECOTkAlCosmicsRegional0TTkAlDQM+process.ALCARECOTkAlCosmicsRegional0THLTDQM)


process.conversionTrackProducers = cms.Sequence(process.generalConversionTrackProducer+process.conversionStepConversionTrackProducer+process.inOutConversionTrackProducer+process.outInConversionTrackProducer+process.gsfConversionTrackProducer)


process.dtlocalreco_with_2DSegments = cms.Sequence(process.dt1DRecHits+process.dt2DSegments+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt2DCosmicSegments+process.dt4DCosmicSegments)


process.CastorFullReco = cms.Sequence(process.CastorTowerReco+process.ak7BasicJets+process.ak7CastorJetID)


process.muonSelectionTypeSequence = cms.Sequence(process.muidTrackerMuonArbitrated+process.muidAllArbitrated+process.muidGlobalMuonPromptTight+process.muidTMLastStationLoose+process.muidTMLastStationTight+process.muidTM2DCompatibilityLoose+process.muidTM2DCompatibilityTight+process.muidTMOneStationLoose+process.muidTMOneStationTight+process.muidTMLastStationOptimizedLowPtLoose+process.muidTMLastStationOptimizedLowPtTight+process.muidGMTkChiCompatibility+process.muidGMStaChiCompatibility+process.muidGMTkKinkTight+process.muidTMLastStationAngLoose+process.muidTMLastStationAngTight+process.muidTMOneStationAngLoose+process.muidTMOneStationAngTight)


process.HLTTauDQMOfflineQuality = cms.Sequence(process.hltTauOfflineQualityTests)


process.TauValNumeratorAndDenominatorRealMuonsData = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealMuonsData+process.RunHPSValidationRealMuonsData)


process.seqL1TriggerCsctpgQualityTests = cms.Sequence(process.l1TriggerCsctpgQualityTests)


process.seqL1EmulatorObjMuQualityTests = cms.Sequence(process.l1EmulatorObjMuQualityTests)


process.ee_dqm_source_offline1 = cms.Sequence(process.ecalEndcapMonitorModule+process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapSelectiveReadoutTask+process.ecalEndcapRawDataTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapClusterTask+process.ecalEndcapClusterTaskExtras+process.ecalEndcapRecoSummary+process.ecalPreshowerRecoSummary)


process.MixedTripletStep = cms.Sequence(process.mixedTripletStepClusters+process.mixedTripletStepSeedsA+process.mixedTripletStepSeedsB+process.mixedTripletStepSeeds+process.mixedTripletStepTrackCandidates+process.mixedTripletStepTracks+process.mixedTripletStepSelector+process.mixedTripletStep)


process.ALCARECOTkAlCosmicsRegionalDQM = cms.Sequence(process.ALCARECOTkAlCosmicsRegionalTrackingDQM+process.ALCARECOTkAlCosmicsRegionalTkAlDQM+process.ALCARECOTkAlCosmicsRegionalHLTDQM)


process.produceDenomsDoubleElectron = cms.Sequence(process.ElPrimaryVertexFilter+process.ElBestPV+process.selectedElectrons+process.ElectronsFromPV+process.idElectrons+process.trackElectrons+process.isolatedElectrons+process.ElGoodTracks+process.ElIsoTracks+process.ElTrackFromPV+process.ElTrackCands+process.ZeeCandElectronTrack+process.BestZee+process.ElZLegs)


process.l1ExtraDqmSeq = cms.Sequence(process.dqmGctDigis+process.dqmGtDigis+process.dqmL1ExtraParticles+process.l1ExtraDQM)


process.hcalMonitorTasksOnlineSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalTrigPrimMonitor+process.hcalCoarsePedestalMonitor+process.hcalDetDiagNoiseMonitor+process.hcalDetDiagTimingMonitor+process.hcalNZSMonitor)


process.uncleanedOnlyElectrons = cms.Sequence(process.uncleanedOnlyGsfElectronCores+process.uncleanedOnlyGsfElectrons)


process.muoncosmicreco1legSTA = cms.Sequence(process.CosmicMuonSeed+process.cosmicMuons1Leg)


process.L1Reco = cms.Sequence(process.l1extraParticles+process.l1GtTriggerMenuLite+process.conditionsInEdm+process.l1L1GtObjectMap)


process.seqL1TriggerGtQualityTests = cms.Sequence(process.l1TriggerGtQualityTests)


process.reducedHcalRecHitsSequence = cms.Sequence(process.reducedHcalRecHits)


process.ele_sequence = cms.Sequence(process.goodElectrons+process.PassingWP80+process.WElecTagHLT)


process.rpcefficiency = cms.Sequence(process.rpcEfficiency)


process.hcalMonitorTasksTestSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalTrigPrimMonitor+process.hcalNZSMonitor+process.hcalLSbyLSMonitor)


process.seqALCARECOTkAlMinBias = cms.Sequence(process.ALCARECOTkAlMinBiasHLT+~process.ALCARECOTkAlMinBiasNOTHLT+process.ALCARECOTkAlMinBiasDCSFilter+process.ALCARECOTkAlMinBias)


process.ak5JTA = cms.Sequence(process.ak5JetTracksAssociatorAtVertex+process.ak5JetTracksAssociatorAtCaloFace+process.ak5JetExtender)


process.caloTowersRec = cms.Sequence(process.towerMaker+process.towerMakerWithHO)


process.produceAndDiscriminateShrinkingConePFTaus = cms.Sequence(process.shrinkingConePFTauProducerSansRefs+process.shrinkingConePFTauProducer+process.shrinkingConePFTauDiscriminationByLeadingTrackFinding+process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut+process.shrinkingConePFTauDiscriminationByLeadingPionPtCut+process.shrinkingConePFTauDiscriminationByIsolation+process.shrinkingConePFTauDiscriminationByTrackIsolation+process.shrinkingConePFTauDiscriminationByECALIsolation+process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationAgainstElectron+process.shrinkingConePFTauDiscriminationAgainstMuon)


process.pfClusteringPS = cms.Sequence(process.particleFlowRecHitPS+process.particleFlowClusterPS)


process.uncleanedOnlyTracking = cms.Sequence(process.uncleanedOnlyElectronSeeds+process.uncleanedOnlyElectronCkfTrackCandidates+process.uncleanedOnlyElectronGsfTracks)


process.electronSeeds = cms.Sequence(process.trackerDrivenElectronSeeds+process.ecalDrivenElectronSeeds+process.electronMergedSeeds)


process.seqL1TriggerObjForJetQualityTests = cms.Sequence(process.l1TriggerObjForJetQualityTests)


process.muIsoDeposits_ParamGlobalMuonsOld = cms.Sequence(process.muParamGlobalIsoDepositGsTk+process.muParamGlobalIsoDepositCalEcal+process.muParamGlobalIsoDepositCalHcal)


process.gsfEcalDrivenElectronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons)


process.DetachedTripletStep = cms.Sequence(process.detachedTripletStepClusters+process.detachedTripletStepSeeds+process.detachedTripletStepTrackCandidates+process.detachedTripletStepTracks+process.detachedTripletStepSelector+process.detachedTripletStep)


process.uncleanedOnlyConversionTrackMergers = cms.Sequence(process.uncleanedOnlyInOutOutInConversionTrackMerger+process.uncleanedOnlyGeneralInOutOutInConversionTrackMerger+process.uncleanedOnlyGsfGeneralInOutOutInConversionTrackMerger)


process.seqL1EmulatorObjETMQualityTests = cms.Sequence(process.l1EmulatorObjETMQualityTests)


process.particleFlowTrackWithDisplacedVertex = cms.Sequence(process.pfTrack+process.pfConversions+process.pfV0+process.particleFlowDisplacedVertexCandidate+process.particleFlowDisplacedVertex+process.pfDisplacedTrackerVertex+process.pfTrackElec)


process.muonTrackAnalyzers = cms.Sequence(process.MonitorTrackSTAMuons+process.MonitorTrackGLBMuons)


process.DQMOfflineEGamma = cms.Sequence(process.photonAnalysis+process.zmumugammaAnalysis+process.piZeroAnalysis)


process.photonPFIsolationDepositsSequence = cms.Sequence(process.phPFIsoDepositCharged+process.phPFIsoDepositChargedAll+process.phPFIsoDepositGamma+process.phPFIsoDepositNeutral+process.phPFIsoDepositPU)


process.electronSeedsSeq = cms.Sequence(process.initialStepSeedClusterMask+process.pixelPairStepSeedClusterMask+process.mixedTripletStepSeedClusterMask+process.pixelLessStepSeedClusterMask+process.tripletElectronSeeds+process.tripletElectronClusterMask+process.pixelPairElectronSeeds+process.stripPairElectronSeeds+process.newCombinedSeeds)


process.seqALCARECOTkAlCosmicsCosmicTF0T = cms.Sequence(process.ALCARECOTkAlCosmicsCosmicTF0T)


process.muoncosmicreco2legsSTA = cms.Sequence(process.CosmicMuonSeed+process.cosmicMuons)


process.ctfTracksPixelLess = cms.Sequence(process.globalPixelLessSeeds+process.ckfTrackCandidatesPixelLess+process.ctfPixelLess)


process.seqALCARECOMuAlOverlaps = cms.Sequence(process.ALCARECOMuAlOverlapsHLT+process.ALCARECOMuAlOverlapsDCSFilter+process.ALCARECOMuAlOverlapsMuonSelector+process.ALCARECOMuAlOverlaps)


process.ee_dqm_source_offline = cms.Sequence(process.ecalEndcapMonitorModule+process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapRawDataTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapClusterTask+process.ecalEndcapClusterTaskExtras+process.ecalEndcapRecoSummary+process.ecalPreshowerRecoSummary)


process.seqALCARECOTkAlCosmicsInCollisions = cms.Sequence(process.ALCARECOTkAlCosmicsInCollisionsHLT+process.ALCARECOTkAlCosmicsInCollisionsDCSFilter+process.ALCARECOTkAlCosmicsInCollisions)


process.deDt = cms.Sequence(process.valDtTriggerPrimitiveDigis)


process.seqMultiplicityFilter = cms.Sequence(~process.LargeSiStripClusterEvents)


process.ecalcalib_dqm_source_offline = cms.Sequence(process.ecalzmasstask)


process.analyzecaloTowersDQM = cms.Sequence(process.towerSchemeBAnalyzer)


process.ConvStep = cms.Sequence(process.convClusters+process.photonConvTrajSeedFromSingleLeg+process.convTrackCandidates+process.convStepTracks+process.convStepSelector)


process.susyAnalyzer = cms.Sequence(process.susyDQM)


process.seqL1EmulatorObjTechTrigQualityTests = cms.Sequence(process.l1EmulatorObjTechTrigQualityTests)


process.runTauEffJet = cms.Sequence(process.efficienciesRealData+process.normalizePlotsRealData)


process.TauEfficienciesRealMuonsData = cms.Sequence(process.efficienciesRealMuonsData+process.normalizePlotsRealMuonsData)


process.HLTTauDQMOffline = cms.Sequence(process.TauRefProducer+process.hltTauOfflineMonitor_PFTaus+process.hltTauOfflineMonitor_Inclusive)


process.recoAllPFJets = cms.Sequence(process.sisCone5PFJets+process.sisCone7PFJets+process.kt4PFJets+process.kt6PFJets+process.kt6PFJetsCentralChargedPileUp+process.kt6PFJetsCentralNeutral+process.kt6PFJetsCentralNeutralTight+process.fixedGridRhoAll+process.fixedGridRhoFastjetAll+process.iterativeCone5PFJets+process.ak5PFJets+process.ak7PFJets+process.ak5PFJetsTrimmed+process.ak5PFJetsPruned+process.ak5PFJetsFiltered+process.ak5PFJetsMassDropFiltered+process.gk5PFJets+process.gk7PFJets+process.ca4PFJets+process.ca6PFJets)


process.pfGsfElectronMVASelectionSequence = cms.Sequence(process.electronsWithPresel+process.mvaElectrons)


process.HcalDQMOfflineSequence = cms.Sequence(process.NoiseRatesDQMOffline+process.RecHitsDQMOffline+process.AllCaloTowersDQMOffline)


process.seqL1TriggerGctQualityTests = cms.Sequence(process.l1TriggerGctQualityTests)


process.seqALCARECORpcCalHLT = cms.Sequence(process.ALCARECORpcCalHLTFilter)


process.JetPlusTrackCorrectionsSisCone5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetSiscone5)


process.TauValNumeratorAndDenominatorRealElectronsDataAtDoubleElectron = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsDataAtDoubleElectron+process.RunHPSValidationRealElectronsDataAtDoubleElectron)


process.l1TriggerRecoDQM = cms.Sequence(process.l1ExtraRecoDQM)


process.PixelLessStep = cms.Sequence(process.pixelLessStepClusters+process.pixelLessStepSeeds+process.pixelLessStepTrackCandidates+process.pixelLessStepTracks+process.pixelLessStepSelector)


process.tcMetSequence = cms.Sequence(process.tcMet+process.tcMetWithPFclusters)


process.csclocalreco = cms.Sequence(process.csc2DRecHits+process.cscSegments)


process.seqL1TriggerObjNoIsoEGQualityTests = cms.Sequence(process.l1TriggerObjNoIsoEGQualityTests)


process.hcalLocalRecoSequenceNZS = cms.Sequence(process.hbherecoMB+process.hfrecoMB+process.horecoMB)


process.particleFlowLinks = cms.Sequence(process.particleFlow)


process.caloTowersMETOptRec = cms.Sequence(process.calotoweroptmaker)


process.conversionSequence = cms.Sequence(process.conversions)


process.ecalBarrelCertificationSequence = cms.Sequence(process.ecalBarrelDaqInfoTask+process.ecalBarrelDcsInfoTask+process.ecalBarrelDataCertificationTask)


process.ValL1MuTriggerPrimitives = cms.Sequence(process.valCscTriggerPrimitiveDigis+process.valDtTriggerPrimitiveDigis)


process.es_dqm_source_offline = cms.Sequence(process.ecalPreshowerRawDataTask+process.ecalPreshowerFEDIntegrityTask+process.ecalPreshowerIntegrityTask+process.ecalPreshowerOccupancyTask+process.ecalPreshowerTrendTask)


process.seqL1TriggerDttpgQualityTests = cms.Sequence(process.l1TriggerDttpgQualityTests)


process.jetPlusTrackZSPCorJetAntiKt5 = cms.Sequence(process.JetPlusTrackCorrectionsAntiKt5)


process.TauValNumeratorAndDenominatorRealMuonsDataAtSingleMu = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealMuonsDataAtSingleMu+process.RunHPSValidationRealMuonsDataAtSingleMu)


process.striptrackerlocalreco = cms.Sequence(process.siStripZeroSuppression+process.siStripClusters+process.siStripMatchedRecHits)


process.muoncosmicreco2legsHighLevel = cms.Sequence(process.globalCosmicMuons+process.muonsFromCosmics)


process.deHcal = cms.Sequence(process.valHcalTriggerPrimitiveDigis)


process.hcalGlobalRecoSequence = cms.Sequence(process.hbhereco)


process.muonlocalreco = cms.Sequence(process.dtlocalreco+process.csclocalreco+process.rpcRecHits)


process.hcalMonitorTasksCalibrationSequence = cms.Sequence(process.hcalRecHitMonitor+process.hcalRawDataMonitor+process.hcalDetDiagPedestalMonitor+process.hcalDetDiagLaserMonitor+process.hcalDetDiagNoiseMonitor+process.hcalDetDiagTimingMonitor)


process.hpsPFTauDiscriminationByCombinedIsolationSeqDBSumPtCorr = cms.Sequence(process.hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr)


process.seqL1EmulatorGtQualityTests = cms.Sequence(process.l1EmulatorGtQualityTests)


process.seqL1EmulatorGctQualityTests = cms.Sequence(process.l1EmulatorGctQualityTests)


process.multi5x5PreshowerClusteringSequence = cms.Sequence(process.correctedMulti5x5SuperClustersWithPreshower+process.multi5x5PreshowerClusterShape+process.uncleanedOnlyMulti5x5SuperClustersWithPreshower+process.uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower)


process.ALCARECOMuAlBeamHaloDQM = cms.Sequence(process.ALCARECOMuAlBeamHaloTrackingDQM+process.ALCARECOMuAlBeamHaloHLTDQM)


process.seqALCARECOTkAlJpsiMuMu = cms.Sequence(process.ALCARECOTkAlJpsiMuMuHLT+process.ALCARECOTkAlJpsiMuMuDCSFilter+process.ALCARECOTkAlJpsiMuMuGoodMuons+process.ALCARECOTkAlJpsiMuMu)


process.seqL1TriggerObjETTQualityTests = cms.Sequence(process.l1TriggerObjETTQualityTests)


process.recoJPTJets = cms.Sequence(process.jetPlusTrackZSPCorJetAntiKt5)


process.pfTrackingGlobalReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex)


process.seqL1TriggerEcalQualityTests = cms.Sequence(process.l1TriggerEcalQualityTests)


process.seqL1EmulatorCsctpgQualityTests = cms.Sequence(process.l1EmulatorCsctpgQualityTests)


process.seqL1EmulatorObjNoIsoEGQualityTests = cms.Sequence(process.l1EmulatorObjNoIsoEGQualityTests)


process.ALCARECOMuAlGlobalCosmicsDQM = cms.Sequence(process.ALCARECOMuAlGlobalCosmicsTrackingDQM+process.ALCARECOMuAlGlobalCosmicsHLTDQM)


process.ecalEndcapCertificationSequence = cms.Sequence(process.ecalEndcapDaqInfoTask+process.ecalEndcapDcsInfoTask+process.ecalEndcapDataCertificationTask)


process.seqL1TriggerObjHfBitCountsQualityTests = cms.Sequence(process.l1TriggerObjHfBitCountsQualityTests)


process.electronGsfTracking = cms.Sequence(process.electronSeeds+process.electronCkfTrackCandidates+process.electronGsfTracks)


process.recoAllJetsPUOffsetCorr = cms.Sequence(process.sisCone5CaloJetsPUCorr+process.sisCone7CaloJetsPUCorr+process.kt4CaloJetsPUCorr+process.kt6CaloJetsPUCorr+process.kt6CaloJetsCentralPUCorr+process.iterativeCone5CaloJetsPUCorr+process.ak5CaloJetsPUCorr+process.ak7CaloJetsPUCorr+process.gk5CaloJetsPUCorr+process.gk7CaloJetsPUCorr+process.ca4CaloJetsPUCorr+process.ca6CaloJetsPUCorr)


process.gsfElectronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons+process.gsfElectronCores+process.gsfElectrons)


process.deGmt = cms.Sequence(process.valGmtDigis)


process.runTauEffMutiJet = cms.Sequence(process.efficienciesRealData+process.normalizePlotsRealData)


process.particleFlowTrack = cms.Sequence(process.pfTrack+process.pfTrackElec)


process.recoJets = cms.Sequence(process.kt4CaloJets+process.kt6CaloJets+process.kt6CaloJetsCentral+process.iterativeCone5CaloJets+process.ak5CaloJets+process.ak7CaloJets)


process.ALCARECOTkAlBeamHaloDQM = cms.Sequence(process.ALCARECOTkAlBeamHaloTrackingDQM)


process.InitialStep = cms.Sequence(process.initialStepSeeds+process.initialStepTrackCandidates+process.initialStepTracks+process.initialStepSelector)


process.seqL1EmulatorObjForJetQualityTests = cms.Sequence(process.l1EmulatorObjForJetQualityTests)


process.JetPlusTrackCorrections = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetIcone5)


process.pfSortByTypeSequence = cms.Sequence(process.pfAllNeutralHadrons+process.pfAllChargedHadrons+process.pfAllPhotons+process.pfAllChargedParticles+process.pfPileUpAllChargedParticles+process.pfAllNeutralHadronsAndPhotons)


process.ALCARECOMuAlOverlapsDQM = cms.Sequence(process.ALCARECOMuAlOverlapsTrackingDQM+process.ALCARECOMuAlOverlapsHLTDQM)


process.ecalLocalRecoSequence = cms.Sequence(process.ecalGlobalUncalibRecHit+process.ecalDetIdToBeRecovered+process.ecalRecHit+process.ecalCompactTrigPrim+process.ecalTPSkim+process.ecalPreshowerRecHit)


process.kt4JTA = cms.Sequence(process.kt4JetTracksAssociatorAtVertex+process.kt4JetTracksAssociatorAtCaloFace+process.kt4JetExtender)


process.ALCARECOTkAlZMuMuDQM = cms.Sequence(process.ALCARECOTkAlZMuMuTrackingDQM+process.ALCARECOTkAlZMuMuTkAlDQM+process.ALCARECOTkAlZMuMuHLTDQM)


process.seqALCARECOTkAlCosmicsRegional = cms.Sequence(process.ALCARECOTkAlCosmicsRegional)


process.recoAllJets = cms.Sequence(process.sisCone5CaloJets+process.sisCone7CaloJets+process.kt4CaloJets+process.kt6CaloJets+process.kt6CaloJetsCentral+process.iterativeCone5CaloJets+process.ak5CaloJets+process.ak7CaloJets+process.gk5CaloJets+process.gk7CaloJets+process.ca4CaloJets+process.ca6CaloJets)


process.runTauEffTauPlusX = cms.Sequence(process.ElPrimaryVertexFilter+process.ElBestPV+process.selectedElectrons+process.ElectronsFromPV+process.idElectrons+process.trackElectrons+process.isolatedElectrons+process.ElGoodTracks+process.ElIsoTracks+process.ElTrackFromPV+process.ElTrackCands+process.ZeeCandElectronTrack+process.BestZee+process.ElZLegs)


process.seqL1EmulatorGmtQualityTests = cms.Sequence(process.l1EmulatorGmtQualityTests)


process.seqL1TriggerObjCenJetQualityTests = cms.Sequence(process.l1TriggerObjCenJetQualityTests)


process.seqL1EmulatorObjETTQualityTests = cms.Sequence(process.l1EmulatorObjETTQualityTests)


process.seqALCARECOTkAlCosmicsRegional0T = cms.Sequence(process.ALCARECOTkAlCosmicsRegional0T)


process.ALCARECOTkAlCosmicsInCollisionsDQM = cms.Sequence(process.ALCARECOTkAlCosmicsInCollisionsTrackingDQM+process.ALCARECOTkAlCosmicsInCollisionsTkAlDQM+process.ALCARECOTkAlCosmicsInCollisionsHLTDQM)


process.produceHPSPFTaus = cms.Sequence(process.hpsSelectionDiscriminator+process.hpsPFTauProducerSansRefs+process.hpsPFTauProducer)


process.deGt = cms.Sequence(process.valGtDigis)


process.ALCARECOTkAlJpsiMuMuDQM = cms.Sequence(process.ALCARECOTkAlJpsiMuMuTrackingDQM+process.ALCARECOTkAlJpsiMuMuTkAlDQM+process.ALCARECOTkAlJpsiMuMuHLTDQM)


process.seqALCARECOHcalCalMinBias = cms.Sequence(process.hcalminbiasHLT+process.hcalDigiAlCaMB+process.gtDigisAlCaMB+process.hbherecoNoise+process.hfrecoNoise+process.hfrecoMBspecial+process.horecoNoise)


process.RawToDigi_woGCT = cms.Sequence(process.csctfDigis+process.dttfDigis+process.gtDigis+process.gtEvmDigis+process.siPixelDigis+process.siStripDigis+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi)


process.sisCone5JTA = cms.Sequence(process.sisCone5JetTracksAssociatorAtVertex+process.sisCone5JetTracksAssociatorAtCaloFace+process.sisCone5JetExtender)


process.ValL1TechnicalTriggers = cms.Sequence(process.valRpcTechTrigDigis+process.valHcalTechTrigDigis)


process.hcalMonitorTasksOfflineSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalDetDiagNoiseMonitor+process.hcalLSbyLSMonitor+process.hcalNoiseMonitor)


process.seqALCARECOSiPixelLorentzAngle = cms.Sequence(process.ALCARECOSiPixelLorentzAngleHLTFilter)


process.multi5x5ClusteringSequence = cms.Sequence(process.multi5x5BasicClustersCleaned+process.multi5x5SuperClustersCleaned+process.multi5x5BasicClustersUncleaned+process.multi5x5SuperClustersUncleaned+process.multi5x5SuperClusters+process.multi5x5SuperClustersWithPreshower)


process.L1Reco_L1Extra = cms.Sequence(process.l1extraParticles)


process.muonIdProducerSequence = cms.Sequence(process.glbTrackQual+process.muons1stStep+process.calomuons+process.muonEcalDetIds+process.muonShowerInformation)


process.ctfTracksNoOverlaps = cms.Sequence(process.ckfTrackCandidatesNoOverlaps+process.ctfNoOverlaps)


process.rstracks = cms.Sequence(process.roadSearchSeeds+process.roadSearchClouds+process.rsTrackCandidates+process.rsWithMaterialTracks)


process.siStripElectronSequence = cms.Sequence(process.siStripElectrons+process.egammaCTFFinalFitWithMaterial+process.siStripElectronToTrackAssociator)


process.seqL1TriggerObjHfRingEtSumsQualityTests = cms.Sequence(process.l1TriggerObjHfRingEtSumsQualityTests)


process.L1Reco_L1Extra_L1GtRecord = cms.Sequence(process.l1extraParticles+process.l1GtRecord)


process.produceDenominatorRealData = cms.Sequence(process.kinematicSelectedPFJets+process.PFJetsId+process.CleanedPFJets)


process.seqL1TriggerObjTechTrigQualityTests = cms.Sequence(process.l1TriggerObjTechTrigQualityTests)


process.runTauEff = cms.Sequence(process.efficienciesRealData+process.efficienciesRealElectronsData+process.efficienciesRealMuonsData+process.normalizePlotsRealMuonsData)


process.seqALCARECODtCalib = cms.Sequence(process.primaryVertexFilter+process.noscraping+process.ALCARECODtCalibHLTFilter+process.DTCalibMuonSelection+process.dt4DSegmentsNoWire)


process.hybridClusteringSequence = cms.Sequence(process.cleanedHybridSuperClusters+process.uncleanedHybridSuperClusters+process.hybridSuperClusters+process.correctedHybridSuperClusters+process.uncleanedOnlyCorrectedHybridSuperClusters)


process.produceDenomsMultiJet = cms.Sequence(process.kinematicSelectedPFJets+process.PFJetsId+process.CleanedPFJets)


process.jetMETAnalyzerSequence = cms.Sequence(process.jetMETAnalyzer)


process.ALCARECOSiStripCalMinBiasDQM = cms.Sequence(process.ALCARECOSiStripCalMinBiasTrackingDQM+process.ALCARECOSiStripCalMinBiasTrackerDQM)


process.cosmicMuonQualityTests = cms.Sequence(process.ClientTrackEfficiencyTkTracks+process.ClientTrackEfficiencySTACosmicMuons+process.muonSourcesQualityTests+process.muTrackResidualsTest+process.muRecoTest+process.muonClientsQualityTests+process.muonComp2RefQualityTests+process.muonComp2RefKolmoQualityTests+process.muonCosmicTestSummary)


process.ValL1MuTrackFinders = cms.Sequence(process.valCsctfTrackDigis+process.valCsctfDigis+process.valDttfDigis)


process.doAlldEdXDiscriminators = cms.Sequence(process.dedxDiscrimProd+process.dedxDiscrimBTag+process.dedxDiscrimSmi+process.dedxDiscrimASmi)


process.seqALCARECOTkAlLAS = cms.Sequence(process.ALCARECOTkAlLASsiStripDigis+process.ALCARECOTkAlLASEventFilter+process.ALCARECOTkAlLAST0Producer)


process.seqALCARECOMuAlZMuMu = cms.Sequence(process.ALCARECOMuAlZMuMuHLT+process.ALCARECOMuAlZMuMuDCSFilter+process.ALCARECOMuAlZMuMu)


process.ALCARECOTkAlMinBiasHIDQM = cms.Sequence(process.ALCARECOTkAlMinBiasHITrackingDQM+process.ALCARECOTkAlMinBiasHITkAlDQM+process.ALCARECOTkAlMinBiasHIHLTDQM)


process.recopixelvertexing = cms.Sequence(process.pixelTracks+process.pixelVertices)


process.seqALCARECOHcalCalDijets = cms.Sequence(process.dijetsHLT+process.DiJProd)


process.l1TriggerClients = cms.Sequence(process.l1tGctClient+process.l1tDttfClient+process.l1tCsctfClient+process.l1tRpctfClient+process.l1tGmtClient+process.l1tOccupancyClient+process.l1tEventInfoClient)


process.seqALCARECOSiStripPCLHistos = cms.Sequence(process.MEtoEDMConvertSiStrip)


process.ALCARECOTkAlCosmicsCTF0TDQM = cms.Sequence(process.ALCARECOTkAlCosmicsCTF0TTrackingDQM+process.ALCARECOTkAlCosmicsCTF0TTkAlDQM+process.ALCARECOTkAlCosmicsCTF0THLTDQM)


process.btagging = cms.Sequence(process.impactParameterTagInfos+process.trackCountingHighEffBJetTags+process.trackCountingHighPurBJetTags+process.jetProbabilityBJetTags+process.jetBProbabilityBJetTags+process.secondaryVertexTagInfos+process.simpleSecondaryVertexHighEffBJetTags+process.simpleSecondaryVertexHighPurBJetTags+process.combinedSecondaryVertexBJetTags+process.combinedSecondaryVertexMVABJetTags+process.ghostTrackVertexTagInfos+process.ghostTrackBJetTags+process.softElectronCands+process.softElectronTagInfos+process.softElectronByIP3dBJetTags+process.softElectronByPtBJetTags+process.softMuonTagInfos+process.softMuonBJetTags+process.softMuonByIP3dBJetTags+process.softMuonByPtBJetTags)


process.seqL1EmulatorObjCenJetQualityTests = cms.Sequence(process.l1EmulatorObjCenJetQualityTests)


process.muoncosmicreco = cms.Sequence(process.muoncosmicreco2legsSTA+process.muoncosmicreco1legSTA)


process.RawToDigi = cms.Sequence(process.csctfDigis+process.dttfDigis+process.gctDigis+process.gtDigis+process.gtEvmDigis+process.siPixelDigis+process.siStripDigis+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi)


process.recoTauCommonSequence = cms.Sequence(process.ak5PFJetTracksAssociatorAtVertex+process.recoTauAK5PFJets08Region+process.recoTauPileUpVertices+process.pfRecoTauTagInfoProducer)


process.seqL1TriggerRpcQualityTests = cms.Sequence(process.l1TriggerRpcQualityTests)


process.TauValNumeratorAndDenominatorRealElectronsDataTauPlusX = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsDataTauPlusX+process.RunHPSValidationRealElectronsDataTauPlusX)


process.recoAllTrackJets = cms.Sequence(process.trackWithVertexRefSelector+process.trackRefsForJets+process.sisCone5TrackJets+process.sisCone7TrackJets+process.kt4TrackJets+process.kt6TrackJets+process.iterativeCone5TrackJets+process.ak5TrackJets+process.ak7TrackJets+process.gk5TrackJets+process.gk7TrackJets+process.ca4TrackJets+process.ca6TrackJets)


process.runTauEffDoubleElectron = cms.Sequence(process.ElPrimaryVertexFilter+process.ElBestPV+process.selectedElectrons+process.ElectronsFromPV+process.idElectrons+process.trackElectrons+process.isolatedElectrons+process.ElGoodTracks+process.ElIsoTracks+process.ElTrackFromPV+process.ElTrackCands+process.ZeeCandElectronTrack+process.BestZee+process.ElZLegs)


process.HLTTauPostSeq = cms.Sequence(process.HLTTauPostAnalysis_PFTaus+process.HLTTauPostAnalysis_Inclusive)


process.pixeltrackerlocalreco = cms.Sequence(process.siPixelClusters+process.siPixelRecHits)


process.deCsc = cms.Sequence(process.valCscTriggerPrimitiveDigis)


process.recoPFJets = cms.Sequence(process.kt4PFJets+process.kt6PFJets+process.kt6PFJetsCentralChargedPileUp+process.kt6PFJetsCentralNeutral+process.kt6PFJetsCentralNeutralTight+process.fixedGridRhoAll+process.fixedGridRhoFastjetAll+process.iterativeCone5PFJets+process.ak5PFJets+process.ak7PFJets)


process.seqALCARECOSiStripCalMinBias = cms.Sequence(process.ALCARECOSiStripCalMinBiasHLT+process.DCSStatusForSiStripCalMinBias+process.ALCARECOSiStripCalMinBias)


process.electronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons+process.gsfElectronCores+process.gsfElectrons)


process.particleFlowTrackWithNuclear = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfNuclear)


process.seqALCARECOPromptCalibProd = cms.Sequence(process.ALCARECOTkAlMinBiasFilterForBS+process.ALCARECOHltFilterForBS+process.alcaBeamSpotProducer)


process.particleFlowTrackWithV0 = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfV0)


process.seqALCARECOTkAlCosmicsCosmicTF = cms.Sequence(process.ALCARECOTkAlCosmicsCosmicTF)


process.ctfTracksCombinedSeeds = cms.Sequence(process.globalSeedsFromPairsWithVertices+process.globalSeedsFromTriplets+process.globalCombinedSeeds+process.ckfTrackCandidatesCombinedSeeds+process.ctfCombinedSeeds)


process.hpsTancTauDiscriminantSequence = cms.Sequence(process.hpsTancTausDiscriminationByTancRaw+process.hpsTancTausDiscriminationByTanc+process.hpsTancTausDiscriminationByTancVLoose+process.hpsTancTausDiscriminationByTancLoose+process.hpsTancTausDiscriminationByTancMedium+process.hpsTancTausDiscriminationByTancTight+process.hpsTancTausDiscriminationByVLooseIsolation+process.hpsTancTausDiscriminationByLooseIsolation+process.hpsTancTausDiscriminationByMediumIsolation+process.hpsTancTausDiscriminationByTightIsolation+process.hpsTancTausDiscriminationByLooseElectronRejection+process.hpsTancTausDiscriminationByMediumElectronRejection+process.hpsTancTausDiscriminationByTightElectronRejection+process.hpsTancTausDiscriminationByLooseMuonRejection+process.hpsTancTausDiscriminationByTightMuonRejection)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.TobTecStep = cms.Sequence(process.tobTecStepClusters+process.tobTecStepSeeds+process.tobTecStepTrackCandidates+process.tobTecStepTracks+process.tobTecStepSelector)


process.seqL1EmulatorHcalQualityTests = cms.Sequence(process.l1EmulatorHcalQualityTests)


process.seqL1TriggerObjHTTQualityTests = cms.Sequence(process.l1TriggerObjHTTQualityTests)


process.ALCARECOTkAlMuonIsolatedDQM = cms.Sequence(process.ALCARECOTkAlMuonIsolatedTrackingDQM+process.ALCARECOTkAlMuonIsolatedTkAlDQM+process.ALCARECOTkAlMuonIsolatedHLTDQM)


process.muonlocalreco_with_2DSegments = cms.Sequence(process.dtlocalreco_with_2DSegments+process.csclocalreco+process.rpcRecHits)


process.ecalClusters = cms.Sequence(process.hybridClusteringSequence+process.multi5x5ClusteringSequence+process.multi5x5PreshowerClusteringSequence)


process.seqALCARECOTkAlCosmicsCTF0T = cms.Sequence(process.ALCARECOTkAlCosmicsCTF0T)


process.recoPFMET = cms.Sequence(process.pfMet)


process.allConversionSequence = cms.Sequence(process.allConversions)


process.RawToDigi_noTk = cms.Sequence(process.csctfDigis+process.dttfDigis+process.gctDigis+process.gtDigis+process.gtEvmDigis+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi)


process.seldigis = cms.Sequence(process.selectDigi)


process.eIdSequence = cms.Sequence(process.eidRobustLoose+process.eidRobustTight+process.eidRobustHighEnergy+process.eidLoose+process.eidTight)


process.seqL1EmulatorObjHfBitCountsQualityTests = cms.Sequence(process.l1EmulatorObjHfBitCountsQualityTests)


process.siPixelOfflineDQM_cosmics_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource_Cosmics+process.dqmInfo)


process.topHLTDiMuonAnalyzer = cms.Sequence(process.topHLTDiMuonDQM)


process.recoAllJetIds = cms.Sequence(process.ak5JetID+process.ak7JetID+process.sc5JetID+process.sc7JetID+process.ic5JetID+process.kt4JetID+process.kt6JetID+process.ca4JetID+process.ca6JetID+process.gk5JetID+process.gk7JetID)


process.produceDenomsJet = cms.Sequence(process.kinematicSelectedPFJets+process.PFJetsId+process.CleanedPFJets)


process.seqL1EmulatorObjGtExternalQualityTests = cms.Sequence(process.l1EmulatorObjGtExternalQualityTests)


process.seqALCARECOTkAlCosmicsCosmicTFHLT = cms.Sequence(process.ALCARECOTkAlCosmicsHLT+process.seqALCARECOTkAlCosmicsCosmicTF)


process.produceShrinkingConeDiscriminationByTauNeuralClassifier = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNC+process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.cscSources = cms.Sequence(process.dqmCSCClient)


process.ALCARECOTkAlCosmicsCosmicTFDQM = cms.Sequence(process.ALCARECOTkAlCosmicsCosmicTFTrackingDQM+process.ALCARECOTkAlCosmicsCosmicTFTkAlDQM+process.ALCARECOTkAlCosmicsCosmicTFHLTDQM)


process.TauEfficienciesRealData = cms.Sequence(process.efficienciesRealData+process.normalizePlotsRealData)


process.hpsPFTauDiscriminationByIsolationSeq = cms.Sequence(process.hpsPFTauDiscriminationByVLooseIsolation+process.hpsPFTauDiscriminationByLooseIsolation+process.hpsPFTauDiscriminationByMediumIsolation+process.hpsPFTauDiscriminationByTightIsolation)


process.seqALCARECOMuAlGlobalCosmicsInCollisions = cms.Sequence(process.ALCARECOMuAlGlobalCosmicsInCollisionsHLT+process.ALCARECOMuAlGlobalCosmicsInCollisionsDCSFilter+process.ALCARECOMuAlGlobalCosmicsInCollisions)


process.SiStripDQMTier0Common = cms.Sequence(process.APVPhases+process.consecutiveHEs+process.siStripFEDCheck+process.siStripFEDMonitor+process.SiStripMonitorDigi+process.SiStripMonitorClusterBPTX+process.SiStripMonitorTrackCommon+process.dedxDQMHarm2SP+process.dedxDQMHarm2SO+process.dedxDQMHarm2PO+process.dEdxMonCommon+process.TrackerCollisionTrackMonCommon+process.TrackMonStep0+process.TrackMonStep1+process.TrackMonStep2+process.TrackMonStep3+process.TrackMonStep4+process.TrackMonStep5+process.TrackMonStep6+process.LocalRecoLogMessageMonCommon+process.ClusterizerLogMessageMonCommon+process.SeedingLogMessageMonCommon+process.TrackCandidateLogMessageMonCommon+process.TrackFinderLogMessageMonCommon+process.dqmInfoSiStrip)


process.interestingEgammaIsoDetIds = cms.Sequence(process.interestingEleIsoDetIdEB+process.interestingEleIsoDetIdEE+process.interestingGamIsoDetIdEB+process.interestingGamIsoDetIdEE)


process.seqALCARECOSiStripCalZeroBias = cms.Sequence(process.ALCARECOSiStripCalZeroBiasHLT+process.DCSStatusForSiStripCalZeroBias+process.calZeroBiasClusters+process.APVPhases+process.consecutiveHEs)


process.seqALCARECOEcalCalElectronRECO = cms.Sequence(process.alCaIsolatedElectrons)


process.uncleanedOnlyCkfTracksFromConversions = cms.Sequence(process.uncleanedOnlyConversionTrackCandidates+process.uncleanedOnlyCkfOutInTracksFromConversions+process.uncleanedOnlyCkfInOutTracksFromConversions)


process.recoJetIds = cms.Sequence(process.ak5JetID+process.ak7JetID+process.ic5JetID+process.kt4JetID+process.kt6JetID)


process.seqL1TriggerObjIsoEGQualityTests = cms.Sequence(process.l1TriggerObjIsoEGQualityTests)


process.SiStripDQMTier0MinBias = cms.Sequence(process.APVPhases+process.consecutiveHEs+process.siStripFEDCheck+process.siStripFEDMonitor+process.SiStripMonitorDigi+process.SiStripMonitorClusterBPTX+process.SiStripMonitorTrackMB+process.MonitorTrackResiduals+process.dedxDQMHarm2SP+process.dedxDQMHarm2SO+process.dedxDQMHarm2PO+process.dEdxMonMB+process.TrackerCollisionTrackMonMB+process.TrackMonStep0+process.TrackMonStep1+process.TrackMonStep2+process.TrackMonStep3+process.TrackMonStep4+process.TrackMonStep5+process.TrackMonStep6+process.LocalRecoLogMessageMonMB+process.ClusterizerLogMessageMonMB+process.SeedingLogMessageMonMB+process.TrackCandidateLogMessageMonMB+process.TrackFinderLogMessageMonMB+process.dqmInfoSiStrip)


process.seqL1EmulatorObjTauJetQualityTests = cms.Sequence(process.l1EmulatorObjTauJetQualityTests)


process.seqALCARECOEcalCalElectron = cms.Sequence(process.kt6PFJetsForRhoCorrection+process.seqALCARECOEcalCalElectronRECO)


process.seqL1EmulatorRpcQualityTests = cms.Sequence(process.l1EmulatorRpcQualityTests)


process.muIsoDeposits_ParamGlobalMuons = cms.Sequence(process.muParamGlobalIsoDepositTk+process.muParamGlobalIsoDepositCalByAssociatorTowers+process.muParamGlobalIsoDepositJets)


process.elecMetFilter = cms.Sequence(process.elecMet+process.elecMetCounter)


process.seqALCARECOHcalCalGammaJet = cms.Sequence(process.gammajetHLT+process.GammaJetProd)


process.seqL1EmulatorDttfQualityTests = cms.Sequence(process.l1EmulatorDttfQualityTests)


process.uncleanedOnlyPfTracking = cms.Sequence(process.uncleanedOnlyPfTrack+process.uncleanedOnlyPfConversions+process.uncleanedOnlyPfTrackElec)


process.seqL1EmulatorObjHfRingEtSumsQualityTests = cms.Sequence(process.l1EmulatorObjHfRingEtSumsQualityTests)


process.seqL1TriggerObjGtExternalQualityTests = cms.Sequence(process.l1TriggerObjGtExternalQualityTests)


process.vertexreco = cms.Sequence(process.offlinePrimaryVertices+process.offlinePrimaryVerticesWithBS+process.generalV0Candidates)


process.standAloneMuonSeeds = cms.Sequence(process.ancientMuonSeed)


process.seqL1TriggerDttfQualityTests = cms.Sequence(process.l1TriggerDttfQualityTests)


process.seqALCARECOHcalCalIsoTrk = cms.Sequence(process.isoHLT+process.IsoProd+process.TkAlIsoProd)


process.TauValNumeratorAndDenominatorRealDataAtJet = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtJet+process.RunHPSValidationRealDataAtJet)


process.seqL1TriggerHcalQualityTests = cms.Sequence(process.l1TriggerHcalQualityTests)


process.TauValNumeratorAndDenominatorRealDataAtSingleMu = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtSingleMu+process.RunHPSValidationRealDataAtSingleMu)


process.hpsPFTauDiscriminationByIsolationSeqDBSumPtCorr = cms.Sequence(process.hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByTightIsolationDBSumPtCorr)


process.dqmPhysicsHI = cms.Sequence(process.bphysicsOniaDQMHI)


process.pfTauRunDQMValidationDoubleElectron = cms.Sequence(process.TauValNumeratorAndDenominatorRealElectronsDataAtDoubleElectron+process.dqmInfoTauV)


process.muontracking = cms.Sequence(process.standAloneMuonSeeds+process.standAloneMuons+process.globalMuons+process.refittedStandAloneMuons)


process.ckfTracksFromConversions = cms.Sequence(process.conversionTrackCandidates+process.ckfOutInTracksFromConversions+process.ckfInOutTracksFromConversions)


process.ALCARECOTkAlUpsilonMuMuDQM = cms.Sequence(process.ALCARECOTkAlUpsilonMuMuTrackingDQM+process.ALCARECOTkAlUpsilonMuMuTkAlDQM+process.ALCARECOTkAlUpsilonMuMuHLTDQM)


process.bTagPlots = cms.Sequence(process.bTagAnalysis)


process.LowPtTripletStep = cms.Sequence(process.lowPtTripletStepClusters+process.lowPtTripletStepSeeds+process.lowPtTripletStepTrackCandidates+process.lowPtTripletStepTracks+process.lowPtTripletStepSelector)


process.siPixelOfflineDQM_source_woTrack = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.dqmInfo)


process.dqmPhysicsCosmics = cms.Sequence(process.bphysicsOniaDQM+process.ewkMuDQM+process.ewkElecDQM+process.ewkMuLumiMonitorDQM+process.qcdPhotonsCosmicDQM+process.topDiLeptonOfflineDQM+process.topSingleLeptonDQM+process.susyDQM+process.HiggsDQM)


process.muIsoDeposits_muons = cms.Sequence(process.muIsoDepositTk+process.muIsoDepositCalByAssociatorTowers+process.muIsoDepositJets)


process.deDttf = cms.Sequence(process.valCsctfTrackDigis+process.valDttfDigis+process.muonDtMon)


process.hltMuonOfflineAnalyzers = cms.Sequence(process.globalAnalyzer+process.trackerAnalyzer+process.tightAnalyzer+process.looseAnalyzer)


process.jetMETHLTOfflineAnalyzer = cms.Sequence(process.jetMETHLTOfflineSource)


process.reducedEcalRecHitsSequence = cms.Sequence(process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.seldigis+process.reducedEcalRecHitsES)


process.seqL1TriggerObjMuQualityTests = cms.Sequence(process.l1TriggerObjMuQualityTests)


process.ecalLocalRecoSequence_nopreshower = cms.Sequence(process.ecalGlobalUncalibRecHit+process.ecalRecHit)


process.ALCARECOMuAlBeamHaloOverlapsDQM = cms.Sequence(process.ALCARECOMuAlBeamHaloOverlapsTrackingDQM+process.ALCARECOMuAlBeamHaloOverlapsHLTDQM)


process.TauValNumeratorAndDenominatorRealData = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealData+process.RunHPSValidationRealData)


process.cosmicsMuonIdSequence = cms.Sequence(process.cosmicsVetoSeeds+process.cosmicsVetoTrackCandidates+process.cosmicsVetoTracksRaw+process.cosmicsVetoTracks+process.cosmicsVeto)


process.recoTrackJets = cms.Sequence(process.trackWithVertexRefSelector+process.trackRefsForJets+process.ak5TrackJets+process.kt4TrackJets)


process.TauValNumeratorAndDenominatorRealElectronsData = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealElectronsData+process.RunHPSValidationRealElectronsData)


process.hcalLocalRecoSequence = cms.Sequence(process.hbheprereco+process.hfreco+process.horeco+process.zdcreco)


process.ALCARECOMuAlGlobalCosmicsInCollisionsDQM = cms.Sequence(process.ALCARECOMuAlGlobalCosmicsInCollisionsTrackingDQM+process.ALCARECOMuAlGlobalCosmicsInCollisionsHLTDQM)


process.castorSources = cms.Sequence(process.castorOfflineMonitor)


process.calolocalreco = cms.Sequence(process.ecalLocalRecoSequence+process.hcalLocalRecoSequence)


process.TauValNumeratorAndDenominatorRealDataAtMultiJet = cms.Sequence(process.PFTausHighEfficiencyLeadingPionBothProngsRealDataAtMultiJet+process.RunHPSValidationRealDataAtMultiJet)


process.endOfProcess_withComparison = cms.Sequence(process.MEtoEDMConverter+process.MEtoMEComparitor)


process.alcaBeamMonitor = cms.Sequence(process.scalerBeamSpot+process.AlcaBeamMonitor)


process.ALCARECOTkAlLASDQM = cms.Sequence(process.ALCARECOTkAlLASDigiDQM)


process.electronAnalyzerSequence = cms.Sequence(process.mergedSuperClusters+process.dqmElectronGeneralAnalysis+process.dqmElectronAnalysisAllElectrons+process.dqmElectronAnalysisSelectionEt+process.dqmElectronAnalysisSelectionEtIso+process.dqmElectronTagProbeAnalysis)


process.seqL1EmulatorObjHTTQualityTests = cms.Sequence(process.l1EmulatorObjHTTQualityTests)


process.seqALCARECOTkAlCosmicsCosmicTF0THLT = cms.Sequence(process.ALCARECOTkAlCosmics0THLT+process.seqALCARECOTkAlCosmicsCosmicTF0T)


process.jetMETDQMOfflineSource = cms.Sequence(process.HBHENoiseFilterResultProducer+process.analyzecaloTowersDQM+process.AnalyzeSUSYDQM+process.jetMETAnalyzerSequence)


process.l1tGctSeq = cms.Sequence(process.l1tGct)


process.seqL1EmulatorRctQualityTests = cms.Sequence(process.l1EmulatorRctQualityTests)


process.jptRecoTauProducer = cms.Sequence(process.JPTeidTight+process.TCTauJetPlusTrackZSPCorJetAntiKt5+process.JPTAntiKt5JetTracksAssociatorAtVertex+process.caloRecoTauTagInfoProducer+process.JPTCaloRecoTauProducer)


process.SiStripDQMTier0 = cms.Sequence(process.APVPhases+process.consecutiveHEs+process.siStripFEDCheck+process.siStripFEDMonitor+process.SiStripMonitorDigi+process.SiStripMonitorClusterBPTX+process.SiStripMonitorTrackCommon+process.MonitorTrackResiduals+process.dedxDQMHarm2SP+process.dedxDQMHarm2SO+process.dedxDQMHarm2PO+process.dEdxMonCommon+process.TrackerCollisionTrackMonCommon+process.TrackMonStep0+process.TrackMonStep1+process.TrackMonStep2+process.TrackMonStep3+process.TrackMonStep4+process.TrackMonStep5+process.TrackMonStep6+process.LocalRecoLogMessageMonCommon+process.ClusterizerLogMessageMonCommon+process.SeedingLogMessageMonCommon+process.TrackCandidateLogMessageMonCommon+process.TrackFinderLogMessageMonCommon+process.dqmInfoSiStrip)


process.seqALCARECOTkAlCosmicsCTF = cms.Sequence(process.ALCARECOTkAlCosmicsCTF)


process.l1TdeRCTSeq = cms.Sequence(process.l1TdeRCT)


process.ALCARECOTkAlCosmicsCosmicTF0TDQM = cms.Sequence(process.ALCARECOTkAlCosmicsCosmicTF0TTrackingDQM+process.ALCARECOTkAlCosmicsCosmicTF0TTkAlDQM+process.ALCARECOTkAlCosmicsCosmicTF0THLTDQM)


process.pfClusteringECAL = cms.Sequence(process.particleFlowRecHitECAL+process.particleFlowClusterECAL)


process.deGct = cms.Sequence(process.valGctDigis)


process.trkmonootb = cms.Sequence(process.TrackMonStep0+process.TrackMonStep1+process.TrackMonStep2+process.TrackMonStep3+process.TrackMonStep4+process.TrackMonStep5+process.TrackMonStep6)


process.muonMonitors = cms.Sequence(process.muonTrackAnalyzers+process.dtSegmentsMonitor+process.cscMonitor+process.muonAnalyzer+process.muonIdDQM+process.dqmInfoMuons+process.muIsoDQM_seq)


process.ecalEndcapDefaultTasksSequence = cms.Sequence(process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapSelectiveReadoutTask+process.ecalEndcapRawDataTask+process.ecalEndcapLaserTask+process.ecalEndcapLedTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapPedestalTask+process.ecalEndcapTestPulseTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapTimingTask)


process.seqALCARECODtCalibCosmics = cms.Sequence(process.ALCARECODtCalibCosmicsHLTFilter)


process.caloglobalreco = cms.Sequence(process.hcalGlobalRecoSequence)


process.DQMOfflineJetMET = cms.Sequence(process.jetMETDQMOfflineSource)


process.deRpc = cms.Sequence(process.valRpcTriggerDigis)


process.ALCARECOMuAlZMuMuDQM = cms.Sequence(process.ALCARECOMuAlZMuMuTrackingDQM+process.ALCARECOMuAlZMuMuMuAlDQM+process.ALCARECOMuAlZMuMuHLTDQM)


process.l1tMonitorClientEndPathSeq = cms.Sequence(process.l1tsClient)


process.produceDenominatorRealElectronsData = cms.Sequence(process.ElPrimaryVertexFilter+process.ElBestPV+process.selectedElectrons+process.ElectronsFromPV+process.idElectrons+process.trackElectrons+process.isolatedElectrons+process.ElGoodTracks+process.ElIsoTracks+process.ElTrackFromPV+process.ElTrackCands+process.ZeeCandElectronTrack+process.BestZee+process.ElZLegs)


process.muonreco = cms.Sequence(process.muontracking+process.muonIdProducerSequence)


process.uncleanedOnlyConversionTrackProducers = cms.Sequence(process.uncleanedOnlyGeneralConversionTrackProducer+process.uncleanedOnlyInOutConversionTrackProducer+process.uncleanedOnlyOutInConversionTrackProducer+process.uncleanedOnlyGsfConversionTrackProducer)


process.l1EmulatorEventInfoClient = cms.Sequence(process.l1temuEventInfoClient)


process.dqmPhysics = cms.Sequence(process.bphysicsOniaDQM+process.ewkMuDQM+process.ewkElecDQM+process.ewkMuLumiMonitorDQM+process.qcdPhotonsDQM+process.topDiLeptonOfflineDQM+process.topSingleLeptonDQM+process.susyDQM+process.HiggsDQM)


process.muoncosmicreco1legHighLevel = cms.Sequence(process.globalCosmicMuons1Leg+process.muonsFromCosmics1Leg)


process.seqL1EmulatorEcalQualityTests = cms.Sequence(process.l1EmulatorEcalQualityTests)


process.photonIDSequence = cms.Sequence(process.PhotonIDProd)


process.produceAndDiscriminateFixedConePFTaus = cms.Sequence(process.fixedConePFTauProducer+process.fixedConePFTauDiscriminationByLeadingTrackFinding+process.fixedConePFTauDiscriminationByLeadingTrackPtCut+process.fixedConePFTauDiscriminationByLeadingPionPtCut+process.fixedConePFTauDiscriminationByIsolation+process.fixedConePFTauDiscriminationByTrackIsolation+process.fixedConePFTauDiscriminationByECALIsolation+process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationAgainstElectron+process.fixedConePFTauDiscriminationAgainstMuon)


process.egammareco_woConvPhotons = cms.Sequence(process.electronSequence+process.photonSequence)


process.pfTauRunDQMValidationJet = cms.Sequence(process.TauValNumeratorAndDenominatorRealDataAtJet+process.dqmInfoTauV)


process.rpcTier0Source = cms.Sequence(process.rpcdigidqm+process.rpcrechitprobability+process.rpcDcsInfo+process.rpcefficiency+process.rpcEventInfo+process.rpcFEDIntegrity)


process.seqALCARECOMuAlCalIsolatedMu = cms.Sequence(process.ALCARECOMuAlCalIsolatedMuHLT+process.ALCARECOMuAlCalIsolatedMu)


process.seqALCARECOEcalCalPi0Calib = cms.Sequence(process.ecalpi0CalibHLT+process.ecalPi0Corrected)


process.pfClusteringHCALall = cms.Sequence(process.particleFlowClusterHCAL+process.particleFlowClusterHFHAD+process.particleFlowClusterHFEM)


process.l1tMonitorEndPathSeq = cms.Sequence(process.l1s+process.l1tscalers)


process.conversionTrackMergers = cms.Sequence(process.inOutOutInConversionTrackMerger+process.generalConversionStepConversionTrackMerger+process.generalInOutOutInConversionTrackMerger+process.gsfGeneralInOutOutInConversionTrackMerger)


process.seqALCARECOMuAlGlobalCosmics = cms.Sequence(process.ALCARECOMuAlGlobalCosmicsHLT+process.ALCARECOMuAlGlobalCosmicsDCSFilter+process.ALCARECOMuAlGlobalCosmics)


process.l1ExpertDataVsEmulator = cms.Sequence(process.l1TdeGCT+process.l1TdeCSCTF+process.l1GtHwValidation+process.l1TdeRCTSeq)


process.seqALCARECOMuAlBeamHaloOverlaps = cms.Sequence(process.ALCARECOMuAlBeamHaloOverlapsHLT+process.ALCARECOMuAlBeamHaloOverlapsDCSFilter+process.ALCARECOMuAlBeamHaloOverlapsEnergyCut+process.ALCARECOMuAlBeamHaloOverlaps)


process.siPixelOfflineDQM_heavyions_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource_HeavyIons+process.SiPixelHitEfficiencySource_HeavyIons+process.dqmInfo)


process.seqALCARECOTkAlBeamHalo = cms.Sequence(process.ALCARECOTkAlBeamHaloDCSFilter+process.ALCARECOTkAlBeamHalo)


process.deRct = cms.Sequence(process.valRctDigis)


process.produceDenominator = cms.Sequence(process.MuPrimaryVertexFilter+process.MuBestPV+process.selectedMuons+process.selectedMuonsIso+process.MuonsFromPV+process.MuGoodTracks+process.MuIsoTracks+process.MuTrackFromPV+process.MuTrackCands+process.ZmmCandMuonTrack+process.BestZmm+process.MuZLegs)


process.ALCARECODTCalibSynchCosmicsDQM = cms.Sequence(process.dtPreCalibrationTaskAlcaCosmics+process.dtAlcaResolutionMonitorCosmics+process.ALCARECODtCalibCosmicsHLTDQM)


process.seqL1TriggerRctQualityTests = cms.Sequence(process.l1TriggerRctQualityTests)


process.pfTauRunDQMValidationTauPlusX = cms.Sequence(process.TauValNumeratorAndDenominatorRealElectronsDataTauPlusX+process.dqmInfoTauV)


process.elecMetSeq = cms.Sequence(process.WEnuHltFilter+process.ele_sequence+process.elecMetFilter+process.kt6PFJetsForRhoCorrection)


process.BeamHaloId = cms.Sequence(process.CSCHaloData+process.EcalHaloData+process.HcalHaloData+process.GlobalHaloData+process.BeamHaloSummary)


process.Zele_sequence = cms.Sequence(process.PassingVeryLooseId+process.PassingTightId)


process.deEcal = cms.Sequence(process.valEcalTriggerPrimitiveDigis)


process.seqL1EmulatorObjIsoEGQualityTests = cms.Sequence(process.l1EmulatorObjIsoEGQualityTests)


process.seqALCARECOTkAlUpsilonMuMu = cms.Sequence(process.ALCARECOTkAlUpsilonMuMuHLT+process.ALCARECOTkAlUpsilonMuMuDCSFilter+process.ALCARECOTkAlUpsilonMuMuGoodMuons+process.ALCARECOTkAlUpsilonMuMuRelCombIsoMuons+process.ALCARECOTkAlUpsilonMuMu)


process.TauEfficienciesRealElectronsData = cms.Sequence(process.efficienciesRealElectronsData+process.normalizePlotsRealElectronsData)


process.seqAPVCycleFilter = cms.Sequence(~process.PotentialTIBTECHugeEvents+~process.PotentialTIBTECFrameHeaderEventsFPeak+~process.PotentialTIBTECFrameHeaderEventsAdditionalPeak)


process.eb_dqm_source_offline = cms.Sequence(process.ecalBarrelMonitorModule+process.dqmInfoEcal+process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelRawDataTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelClusterTask+process.ecalBarrelHltTask+process.ecalBarrelClusterTaskExtras+process.ecalBarrelRecoSummary)


process.muontracking_with_SET = cms.Sequence(process.SETMuonSeed+process.standAloneSETMuons+process.globalSETMuons)


process.l1tRctSeq = cms.Sequence(process.l1tRct)


process.pfNoPileUpIsoSequence = cms.Sequence(process.pfPileUpIso+process.pfNoPileUpIso)


process.hfEMClusteringSequence = cms.Sequence(process.hfEMClusters+process.hfRecoEcalCandidate)


process.seqL1EmulatorObjHTMQualityTests = cms.Sequence(process.l1EmulatorObjHTMQualityTests)


process.egammareco = cms.Sequence(process.electronSequence+process.conversionSequence+process.photonSequence)


process.seqALCARECOHcalCalNoise = cms.Sequence(process.noiseHLT+process.prescaler+process.HcalNoiseProd)


process.GsfGlobalElectronTestSequence = cms.Sequence(process.CkfElectronCandidates+process.GsfGlobalElectronTest)


process.l1EmulatorMonitor = cms.Sequence(process.l1demon+process.l1ExpertDataVsEmulator)


process.eb_dqm_source_offline1 = cms.Sequence(process.ecalBarrelMonitorModule+process.dqmInfoEcal+process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelSelectiveReadoutTask+process.ecalBarrelRawDataTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelClusterTask+process.ecalBarrelHltTask+process.ecalBarrelClusterTaskExtras+process.ecalBarrelRecoSummary)


process.produceDenominatorRealMuonsData = cms.Sequence(process.MuPrimaryVertexFilter+process.MuBestPV+process.selectedMuons+process.selectedMuonsIso+process.MuonsFromPV+process.MuGoodTracks+process.MuIsoTracks+process.MuTrackFromPV+process.MuTrackCands+process.ZmmCandMuonTrack+process.BestZmm+process.MuZLegs)


process.seqL1TriggerCsctfQualityTests = cms.Sequence(process.l1TriggerCsctfQualityTests)


process.seqL1TriggerObjTauJetQualityTests = cms.Sequence(process.l1TriggerObjTauJetQualityTests)


process.jetGlobalReco = cms.Sequence(process.recoJets+process.recoJetIds+process.recoTrackJets)


process.muIsolation_ParamGlobalMuonsOld = cms.Sequence(process.muIsoDeposits_ParamGlobalMuonsOld)


process.ALCARECOMuAlCalIsolatedMuDQM = cms.Sequence(process.ALCARECOMuAlCalIsolatedMuTrackingDQM+process.ALCARECOMuAlCalIsolatedMuMuAlDQM+process.ALCARECOMuAlCalIsolatedMuHLTDQM)


process.seqALCARECOTkAlMuonIsolated = cms.Sequence(process.ALCARECOTkAlMuonIsolatedHLT+process.ALCARECOTkAlMuonIsolatedDCSFilter+process.ALCARECOTkAlMuonIsolatedGoodMuons+process.ALCARECOTkAlMuonIsolatedRelCombIsoMuons+process.ALCARECOTkAlMuonIsolated)


process.TCTau = cms.Sequence(process.caloRecoTauProducer+process.caloRecoTauDiscriminationByLeadingTrackFinding+process.caloRecoTauDiscriminationByLeadingTrackPtCut+process.caloRecoTauDiscriminationByTrackIsolation+process.caloRecoTauDiscriminationByECALIsolation+process.caloRecoTauDiscriminationByIsolation+process.caloRecoTauDiscriminationAgainstElectron+process.caloRecoTauDiscriminationAgainstMuon)


process.seqL1EmulatorCsctfQualityTests = cms.Sequence(process.l1EmulatorCsctfQualityTests)


process.tagGsfFilter = cms.Sequence(process.tagGsf+process.tagGsfCounter)


process.produceDenomsTauPlusX = cms.Sequence(process.ElPrimaryVertexFilter+process.ElBestPV+process.selectedElectrons+process.ElectronsFromPV+process.idElectrons+process.trackElectrons+process.isolatedElectrons+process.ElGoodTracks+process.ElIsoTracks+process.ElTrackFromPV+process.ElTrackCands+process.ZeeCandElectronTrack+process.BestZee+process.ElZLegs)


process.egammaIsolationSequence = cms.Sequence(process.electronEcalRecHitIsolationLcone+process.electronEcalRecHitIsolationScone+process.electronHcalTowerIsolationLcone+process.electronHcalDepth1TowerIsolationLcone+process.electronHcalDepth2TowerIsolationLcone+process.electronHcalTowerIsolationScone+process.electronHcalDepth1TowerIsolationScone+process.electronHcalDepth2TowerIsolationScone+process.electronTrackIsolationLcone+process.electronTrackIsolationScone)


process.ALCARECOTkAlMinBiasDQM = cms.Sequence(process.ALCARECOTkAlMinBiasTrackingDQM+process.ALCARECOTkAlMinBiasTkAlDQM+process.ALCARECOTkAlMinBiasHLTDQM+process.ALCARECOTkAlMinBiasNOTHLTDQM)


process.seqL1TriggerObjETMQualityTests = cms.Sequence(process.l1TriggerObjETMQualityTests)


process.egammarecoFull_woHFElectrons = cms.Sequence(process.egammareco+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence)


process.deCsctf = cms.Sequence(process.valCsctfTrackDigis+process.valCsctfDigis+process.muonCscMon)


process.JetPlusTrackCorrectionsIcone5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetIcone5)


process.electronPFIsolationDepositsSequence = cms.Sequence(process.elPFIsoDepositCharged+process.elPFIsoDepositChargedAll+process.elPFIsoDepositGamma+process.elPFIsoDepositNeutral+process.elPFIsoDepositPU)


process.seqL1EmulatorDttpgQualityTests = cms.Sequence(process.l1EmulatorDttpgQualityTests)


process.conversionTrackSequenceNoEcalSeeded = cms.Sequence(process.generalConversionTrackProducer+process.gsfConversionTrackProducer+process.gsfGeneralConversionTrackMerger)


process.seqALCARECOEcalCalPhiSym = cms.Sequence(process.ecalphiSymHLT+process.ecalPhiSymCorrected)


process.siPixelOfflineDQM_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource+process.SiPixelHitEfficiencySource+process.dqmInfo)


process.seqALCARECOTkAlMuonIsolatedPA = cms.Sequence(process.ALCARECOTkAlMuonIsolatedPAHLT+process.ALCARECOTkAlMuonIsolatedPADCSFilter+process.ALCARECOTkAlMuonIsolatedPA)


process.seqALCARECOHcalCalHOCosmics = cms.Sequence(process.ALCARECOHcalCalHOCosmicHLT+process.hoCalibCosmicsProducer)


process.ecalBarrelDefaultTasksSequence = cms.Sequence(process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelSelectiveReadoutTask+process.ecalBarrelRawDataTask+process.ecalBarrelLaserTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelPedestalTask+process.ecalBarrelTestPulseTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelTimingTask)


process.gsfElectronMergingSequence = cms.Sequence(process.gsfElectronCores+process.gsfElectrons)


process.recoTauHPSTancSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.hpsTancTauInitialSequence+process.hpsTancTauDiscriminantSequence)


process.doAlldEdXEstimators = cms.Sequence(process.dedxTruncated40+process.dedxHarmonic2+process.dedxDiscrimASmi)


process.muonPFIsolationDepositsSequence = cms.Sequence(process.muPFIsoDepositCharged+process.muPFIsoDepositChargedAll+process.muPFIsoDepositGamma+process.muPFIsoDepositNeutral+process.muPFIsoDepositPU)


process.pfClusteringHO = cms.Sequence(process.particleFlowRecHitHO+process.particleFlowClusterHO)


process.seqL1TriggerGmtQualityTests = cms.Sequence(process.l1TriggerGmtQualityTests)


process.uncleanedOnlyConversions = cms.Sequence(process.uncleanedOnlyCkfTracksFromConversions+process.uncleanedOnlyConversionTrackProducers+process.uncleanedOnlyConversionTrackMergers+process.uncleanedOnlyAllConversions)


process.seqALCARECOTkAlCosmicsRegionalHLT = cms.Sequence(process.ALCARECOTkAlCosmicsHLT+process.seqALCARECOTkAlCosmicsRegional)


process.egammarecoFull = cms.Sequence(process.egammareco+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence)


process.pfTauRunDQMValidationMultiJet = cms.Sequence(process.TauValNumeratorAndDenominatorRealDataAtMultiJet+process.dqmInfoTauV)


process.recoTauClassicShrinkingConeMVASequence = cms.Sequence(process.produceShrinkingConeDiscriminationByTauNeuralClassifier)


process.muoncosmichighlevelreco = cms.Sequence(process.muoncosmicreco2legsHighLevel+process.muoncosmicreco1legHighLevel+process.cosmicsMuonIdSequence)


process.ValL1Emulator = cms.Sequence(process.valEcalTriggerPrimitiveDigis+process.valHcalTriggerPrimitiveDigis+process.valHcalTTPDigis+process.valRctDigis+process.valGctDigis+process.ValL1MuTriggerPrimitives+process.ValL1MuTrackFinders+process.valRpcTriggerDigis+process.valGmtDigis+process.ValL1TechnicalTriggers+process.valGtDigis)


process.iterTracking = cms.Sequence(process.InitialStep+process.LowPtTripletStep+process.PixelPairStep+process.DetachedTripletStep+process.MixedTripletStep+process.PixelLessStep+process.TobTecStep+process.generalTracks+process.ConvStep+process.conversionStepTracks)


process.l1EmulatorObjectQualityTests = cms.Sequence(process.seqL1EmulatorObjTechTrigQualityTests+process.seqL1EmulatorObjGtExternalQualityTests+process.seqL1EmulatorObjHfRingEtSumsQualityTests+process.seqL1EmulatorObjHfBitCountsQualityTests+process.seqL1EmulatorObjHTMQualityTests+process.seqL1EmulatorObjHTTQualityTests+process.seqL1EmulatorObjETMQualityTests+process.seqL1EmulatorObjETTQualityTests+process.seqL1EmulatorObjTauJetQualityTests+process.seqL1EmulatorObjForJetQualityTests+process.seqL1EmulatorObjCenJetQualityTests+process.seqL1EmulatorObjIsoEGQualityTests+process.seqL1EmulatorObjNoIsoEGQualityTests+process.seqL1EmulatorObjMuQualityTests)


process.egammarecoWithID = cms.Sequence(process.egammareco+process.photonIDSequence+process.eIdSequence)


process.trackerlocalreco = cms.Sequence(process.pixeltrackerlocalreco+process.striptrackerlocalreco+process.clusterSummaryProducer)


process.egammareco_withPhotonID = cms.Sequence(process.egammareco+process.photonIDSequence)


process.localreco = cms.Sequence(process.trackerlocalreco+process.muonlocalreco+process.calolocalreco+process.castorreco)


process.egammaHighLevelRecoPostPF = cms.Sequence(process.gsfElectronMergingSequence+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence)


process.seqALCARECOTkAlCosmicsCTF0THLT = cms.Sequence(process.ALCARECOTkAlCosmics0THLT+process.seqALCARECOTkAlCosmicsCTF0T)


process.tagGsfSeq = cms.Sequence(process.ZEEHltFilter+process.Zele_sequence+process.tagGsfFilter)


process.produceAndDiscriminateHPSPFTaus = cms.Sequence(process.produceHPSPFTaus+process.hpsPFTauDiscriminationByDecayModeFinding+process.hpsPFTauDiscriminationByChargedIsolationSeq+process.hpsPFTauDiscriminationByIsolationSeq+process.hpsPFTauDiscriminationByIsolationSeqDBSumPtCorr+process.hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByCombinedIsolationSeqDBSumPtCorr+process.hpsPFTauDiscriminationByLooseElectronRejection+process.hpsPFTauDiscriminationByMediumElectronRejection+process.hpsPFTauDiscriminationByTightElectronRejection+process.hpsPFTauDiscriminationByMVAElectronRejection+process.hpsPFTauDiscriminationByLooseMuonRejection+process.hpsPFTauDiscriminationByMediumMuonRejection+process.hpsPFTauDiscriminationByTightMuonRejection)


process.muIsolation_muons = cms.Sequence(process.muIsoDeposits_muons)


process.ckftracks_wodEdX = cms.Sequence(process.iterTracking+process.electronSeedsSeq)


process.l1TriggerSystemQualityTests = cms.Sequence(process.seqL1TriggerEcalQualityTests+process.seqL1TriggerHcalQualityTests+process.seqL1TriggerRctQualityTests+process.seqL1TriggerGctQualityTests+process.seqL1TriggerDttfQualityTests+process.seqL1TriggerDttpgQualityTests+process.seqL1TriggerCsctfQualityTests+process.seqL1TriggerCsctpgQualityTests+process.seqL1TriggerRpcQualityTests+process.seqL1TriggerGmtQualityTests+process.seqL1TriggerGtQualityTests)


process.recoTauClassicShrinkingConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsRecoTauPiZeros+process.produceAndDiscriminateShrinkingConePFTaus)


process.l1TriggerObjectQualityTests = cms.Sequence(process.seqL1TriggerObjTechTrigQualityTests+process.seqL1TriggerObjGtExternalQualityTests+process.seqL1TriggerObjHfRingEtSumsQualityTests+process.seqL1TriggerObjHfBitCountsQualityTests+process.seqL1TriggerObjHTMQualityTests+process.seqL1TriggerObjHTTQualityTests+process.seqL1TriggerObjETMQualityTests+process.seqL1TriggerObjETTQualityTests+process.seqL1TriggerObjTauJetQualityTests+process.seqL1TriggerObjForJetQualityTests+process.seqL1TriggerObjCenJetQualityTests+process.seqL1TriggerObjIsoEGQualityTests+process.seqL1TriggerObjNoIsoEGQualityTests+process.seqL1TriggerObjMuQualityTests)


process.pfTauRunDQMValidation = cms.Sequence(process.TauValNumeratorAndDenominatorRealData+process.TauValNumeratorAndDenominatorRealElectronsData+process.TauValNumeratorAndDenominatorRealMuonsData+process.dqmInfoTauV)


process.calolocalrecoNZS = cms.Sequence(process.ecalLocalRecoSequence+process.hcalLocalRecoSequence+process.hcalLocalRecoSequenceNZS)


process.muonFullOfflineDQM = cms.Sequence(process.hltMuonOfflineAnalyzers+process.topHLTDiMuonAnalyzer)


process.seqFilters = cms.Sequence(process.seqAPVCycleFilter+process.seqMultiplicityFilter)


process.ecal_dqm_source_offline = cms.Sequence(process.eb_dqm_source_offline+process.ee_dqm_source_offline+process.ecalcalib_dqm_source_offline)


process.produceDenomsSingleMu = cms.Sequence(process.produceDenomsMultiJet+process.produceDenominatorRealMuonsData)


process.hcalOfflineDQMSource = cms.Sequence(process.hcalMonitor+process.hcalZDCMonitor+process.hcalMonitorTasksOfflineSequence+process.dqmInfoHcal)


process.jetPlusTrackZSPCorJetSiscone5 = cms.Sequence(process.JetPlusTrackCorrectionsSisCone5)


process.ckftracks = cms.Sequence(process.iterTracking+process.electronSeedsSeq+process.doAlldEdXEstimators)


process.GeneralMuSequenceAtSingleMu = cms.Sequence(process.TauValNumeratorAndDenominatorRealDataAtSingleMu+process.TauValNumeratorAndDenominatorRealMuonsDataAtSingleMu)


process.l1TriggerQualityTests = cms.Sequence(process.l1TriggerSystemQualityTests+process.l1TriggerObjectQualityTests+process.l1TriggerRateQualityTests+process.l1TriggerSyncQualityTests+process.l1TriggerOccupancyQualityTests)


process.egammareco_withElectronID = cms.Sequence(process.egammareco+process.eIdSequence)


process.uncleanedOnlyElectronSequence = cms.Sequence(process.uncleanedOnlyTracking+process.uncleanedOnlyConversions+process.uncleanedOnlyPfTracking+process.uncleanedOnlyElectrons)


process.DQMOfflinePrePOGMC = cms.Sequence(process.pvMonitor+process.bTagPlots+process.dqmPhysics)


process.egammaHighLevelRecoPrePF = cms.Sequence(process.gsfEcalDrivenElectronSequence+process.uncleanedOnlyElectronSequence+process.conversionSequence+process.photonSequence)


process.muIsolation = cms.Sequence(process.muIsolation_muons)


process.muonreco_with_SET = cms.Sequence(process.muontracking_with_SET)


process.runTauValidationBatchMode = cms.Sequence(process.produceDenominatorRealMuonsData+process.TauValNumeratorAndDenominatorRealMuonsData)


process.HLTTauDQMOfflineHarvesting = cms.Sequence(process.HLTTauPostSeq)


process.produceDenoms = cms.Sequence(process.produceDenomsMultiJet+process.produceDenomsTauPlusX+process.produceDenominatorRealMuonsData)


process.muIsolation_ParamGlobalMuons = cms.Sequence(process.muIsoDeposits_ParamGlobalMuons)


process.L1HardwareValidation = cms.Sequence(process.deEcal+process.deHcal+process.deRct+process.deGct+process.deDt+process.deDttf+process.deCsc+process.deCsctf+process.deRpc+process.deGmt+process.deGt+process.l1compare)


process.JPTJetsCollectionForTCTaus = cms.Sequence(process.jptRecoTauProducer)


process.pfTauRunDQMValidationSingleMu = cms.Sequence(process.TauValNumeratorAndDenominatorRealDataAtSingleMu+process.TauValNumeratorAndDenominatorRealMuonsDataAtSingleMu+process.dqmInfoTauV)


process.egammaDQMOffline = cms.Sequence(process.photonAnalysis+process.zmumugammaAnalysis+process.piZeroAnalysis+process.electronAnalyzerSequence)


process.seqALCARECOTkAlCosmicsRegional0THLT = cms.Sequence(process.ALCARECOTkAlCosmics0THLT+process.seqALCARECOTkAlCosmicsRegional0T)


process.ckftracks_plus_pixelless = cms.Sequence(process.ckftracks+process.ctfTracksPixelLess)


process.l1tMonitorOnline = cms.Sequence(process.l1tDttf+process.l1tCsctf+process.l1tRpctf+process.l1tGmt+process.l1tGt+process.l1ExtraDqmSeq+process.l1tRctSeq+process.l1tGctSeq)


process.WSkimSeq = cms.Sequence(process.WEnuHltFilter+process.ele_sequence+process.elecMetFilter)


process.reducedRecHits = cms.Sequence(process.reducedEcalRecHitsSequence+process.reducedHcalRecHitsSequence)


process.runTauValidation = cms.Sequence(process.runTauValidationBatchMode+process.TauEfficienciesRealMuonsData)


process.muontracking_with_TeVRefinement = cms.Sequence(process.muontracking+process.tevMuons)


process.conversionTrackSequence = cms.Sequence(process.ckfTracksFromConversions+process.conversionTrackProducers+process.conversionTrackMergers)


process.analyzecaloTowers = cms.Sequence(process.caloTowersMETOptRec+process.towerOptAnalyzer+process.towerSchemeBAnalyzer)


process.recoJetAssociations = cms.Sequence(process.ic5JetTracksAssociatorAtVertex+process.iterativeCone5JTA+process.kt4JTA+process.ak5JTA+process.ak7JTA)


process.l1EmulatorSystemQualityTests = cms.Sequence(process.seqL1EmulatorEcalQualityTests+process.seqL1EmulatorHcalQualityTests+process.seqL1EmulatorRctQualityTests+process.seqL1EmulatorGctQualityTests+process.seqL1EmulatorDttfQualityTests+process.seqL1EmulatorDttpgQualityTests+process.seqL1EmulatorCsctfQualityTests+process.seqL1EmulatorCsctpgQualityTests+process.seqL1EmulatorRpcQualityTests+process.seqL1EmulatorGmtQualityTests+process.seqL1EmulatorGtQualityTests)


process.jetPlusTrackZSPCorJetIcone5 = cms.Sequence(process.JetPlusTrackCorrectionsIcone5)


process.seqALCARECOTkAlCosmicsCTFHLT = cms.Sequence(process.ALCARECOTkAlCosmicsHLT+process.seqALCARECOTkAlCosmicsCTF)


process.DQMOfflineMuon = cms.Sequence(process.dtSources+process.rpcTier0Source+process.cscSources+process.muonMonitors)


process.l1TriggerOnline = cms.Sequence(process.l1tMonitorOnline+process.dqmEnvL1T)


process.muonPFIsolationSequence = cms.Sequence(process.muonPFIsolationDepositsSequence+process.muPFIsoValueCharged03+process.muPFIsoValueChargedAll03+process.muPFIsoValueGamma03+process.muPFIsoValueNeutral03+process.muPFIsoValueGammaHighThreshold03+process.muPFIsoValueNeutralHighThreshold03+process.muPFIsoValuePU03+process.muPFIsoValueCharged04+process.muPFIsoValueChargedAll04+process.muPFIsoValueGamma04+process.muPFIsoValueNeutral04+process.muPFIsoValueGammaHighThreshold04+process.muPFIsoValueNeutralHighThreshold04+process.muPFIsoValuePU04)


process.l1tMonitorClient = cms.Sequence(process.l1TriggerQualityTests+process.l1TriggerClients)


process.l1HwValEmulatorMonitor = cms.Sequence(process.L1HardwareValidation+process.l1EmulatorMonitor)


process.metreco = cms.Sequence(process.met+process.metNoHF+process.metHO+process.metNoHFHO+process.calotoweroptmaker+process.metOpt+process.metOptNoHF+process.calotoweroptmakerWithHO+process.metOptHO+process.metOptNoHFHO+process.htMetKT4+process.htMetKT6+process.htMetIC5+process.htMetAK5+process.htMetAK7+process.muonMETValueMapProducer+process.corMetGlobalMuons+process.muonTCMETValueMapProducer+process.tcMetSequence+process.BeamHaloId)


process.pfClusteringHCAL = cms.Sequence(process.particleFlowRecHitHCAL+process.pfClusteringHCALall)


process.pfParticleSelectionSequence = cms.Sequence(process.pfNoPileUpIsoSequence+process.pfSortByTypeSequence)


process.particleFlowCluster = cms.Sequence(process.towerMakerPF+process.pfClusteringECAL+process.pfClusteringHCAL+process.pfClusteringHO+process.pfClusteringPS)


process.egammareco_withIsolation_woConvPhotons = cms.Sequence(process.egammareco_woConvPhotons+process.egammaIsolationSequence)


process.ecalBarrelCosmicTasksSequence = cms.Sequence(process.ecalBarrelDefaultTasksSequence+process.ecalBarrelCosmicTask)


process.trackingGlobalReco = cms.Sequence(process.ckftracks+process.trackExtrapolator)


process.offlineHLTSource = cms.Sequence(process.hltResults+process.egHLTOffDQMSource+process.muonFullOfflineDQM+process.HLTTauDQMOffline+process.jetMETHLTOfflineAnalyzer+process.hltInclusiveVBFSource+process.TrackerCollisionTrackMonHLT+process.dqmEnvHLT)


process.DQMOfflineHcal = cms.Sequence(process.hcalOfflineDQMSource)


process.muonMonitorsAndQualityTests = cms.Sequence(process.muonMonitors+process.muonQualityTests)


process.recoTauClassicFixedConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsRecoTauPiZeros+process.produceAndDiscriminateFixedConePFTaus)


process.ecalEndcapCosmicTasksSequence = cms.Sequence(process.ecalEndcapDefaultTasksSequence+process.ecalEndcapCosmicTask)


process.DQMOfflinePhysics = cms.Sequence(process.dqmPhysics)


process.trkmon = cms.Sequence(process.trkmonootb)


process.seqALCARECOEcalCalZElectron = cms.Sequence(process.tagGsfSeq+process.seqALCARECOEcalCalElectron)


process.egammareco_withIsolation = cms.Sequence(process.egammareco+process.egammaIsolationSequence)


process.particleFlowClusterWithoutHO = cms.Sequence(process.towerMakerPF+process.pfClusteringECAL+process.pfClusteringHCAL+process.pfClusteringPS)


process.muonrecowith_TeVRefinemen = cms.Sequence(process.muontracking_with_TeVRefinement+process.muonIdProducerSequence)


process.l1TriggerOffline = cms.Sequence(process.l1TriggerOnline+process.l1TriggerRecoDQM+process.dqmEnvL1TriggerReco)


process.metrecoPlusHCALNoise = cms.Sequence(process.metreco+process.hcalnoise)


process.muonreco_plus_isolation_plus_SET = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muonreco_with_SET+process.muIsolation)


process.pfBasedElectronPhotonIsoSequence = cms.Sequence(process.pfParticleSelectionSequence+process.pfSelectedElectrons+process.electronPFIsolationDepositsSequence+process.elPFIsoValueCharged03PFId+process.elPFIsoValueChargedAll03PFId+process.elPFIsoValueGamma03PFId+process.elPFIsoValueNeutral03PFId+process.elPFIsoValuePU03PFId+process.elPFIsoValueCharged04PFId+process.elPFIsoValueChargedAll04PFId+process.elPFIsoValueGamma04PFId+process.elPFIsoValueNeutral04PFId+process.elPFIsoValuePU04PFId+process.elPFIsoValueCharged03NoPFId+process.elPFIsoValueChargedAll03NoPFId+process.elPFIsoValueGamma03NoPFId+process.elPFIsoValueNeutral03NoPFId+process.elPFIsoValuePU03NoPFId+process.elPFIsoValueCharged04NoPFId+process.elPFIsoValueChargedAll04NoPFId+process.elPFIsoValueGamma04NoPFId+process.elPFIsoValueNeutral04NoPFId+process.elPFIsoValuePU04NoPFId+process.pfSelectedPhotons+process.photonPFIsolationDepositsSequence+process.phPFIsoValueCharged03PFId+process.phPFIsoValueChargedAll03PFId+process.phPFIsoValueGamma03PFId+process.phPFIsoValueNeutral03PFId+process.phPFIsoValuePU03PFId+process.phPFIsoValueCharged04PFId+process.phPFIsoValueChargedAll04PFId+process.phPFIsoValueGamma04PFId+process.phPFIsoValueNeutral04PFId+process.phPFIsoValuePU04PFId)


process.pfElectronTranslatorSequence = cms.Sequence(process.pfBasedElectronPhotonIsoSequence+process.pfElectronTranslator+process.pfElectronInterestingEcalDetIdEB+process.pfElectronInterestingEcalDetIdEE)


process.l1EmulatorQualityTests = cms.Sequence(process.l1EmulatorSystemQualityTests+process.l1EmulatorObjectQualityTests)


process.ckftracks_woBH = cms.Sequence(process.iterTracking+process.electronSeedsSeq+process.doAlldEdXEstimators)


process.jetHighLevelReco = cms.Sequence(process.recoJetAssociations+process.recoPFJets+process.recoJPTJets)


process.muonrecoComplete = cms.Sequence(process.muonreco_plus_isolation_plus_SET+process.muonSelectionTypeSequence)


process.l1TriggerEmulatorOnline = cms.Sequence(process.l1HwValEmulatorMonitor+process.dqmEnvL1TEMU)


process.muonshighlevelreco = cms.Sequence(process.muonPFIsolationSequence+process.muons)


process.DQMOfflinePOGMC = cms.Sequence(process.DQMOfflinePrePOGMC+process.DQMMessageLogger)


process.triggerOfflineDQMSource = cms.Sequence(process.offlineHLTSource)


process.DQMOfflinePreDPG = cms.Sequence(process.dqmDcsInfo+process.ecal_dqm_source_offline+process.hcalOfflineDQMSource+process.SiStripDQMTier0+process.siPixelOfflineDQM_source+process.dtSources+process.rpcTier0Source+process.cscSources+process.es_dqm_source_offline+process.castorSources+process.HcalDQMOfflineSequence)


process.pfPhotonTranslatorSequence = cms.Sequence(process.pfBasedElectronPhotonIsoSequence+process.pfPhotonTranslator+process.pfPhotonInterestingEcalDetIdEB+process.pfPhotonInterestingEcalDetIdEE)


process.egammaGlobalReco = cms.Sequence(process.electronGsfTracking+process.conversionTrackSequence+process.allConversionSequence)


process.recoTauClassicHPSSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.produceAndDiscriminateHPSPFTaus)


process.localreco_HcalNZS = cms.Sequence(process.trackerlocalreco+process.muonlocalreco+process.calolocalrecoNZS+process.castorreco)


process.l1EmulatorMonitorClient = cms.Sequence(process.l1EmulatorQualityTests+process.l1EmulatorEventInfoClient)


process.muonrecoComplete_minus_SET_minus_muIDmaps = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muIsolation)


process.l1TriggerEmulatorOffline = cms.Sequence(process.l1TriggerEmulatorOnline)


process.muonreco_plus_isolation = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muIsolation)


process.ALCARECOSiStripCalZeroBiasDQM = cms.Sequence(process.seqFilters+process.SiStripCalZeroBiasMonitorCluster)


process.tautagging = cms.Sequence(process.JPTJetsCollectionForTCTaus+process.TCTau)


process.muonrecoComplete_minus_muIDmaps = cms.Sequence(process.muonreco_plus_isolation_plus_SET)


process.seqALCARECOEcalCalWElectron = cms.Sequence(process.WSkimSeq+process.seqALCARECOEcalCalElectron)


process.l1TriggerDqmOfflineClient = cms.Sequence(process.l1tMonitorClient+process.l1EmulatorMonitorClient)


process.DQMOfflineEcal = cms.Sequence(process.ecal_dqm_source_offline+process.es_dqm_source_offline)


process.muonreco_plus_isolation_plus_SET_plus_muIDmaps = cms.Sequence(process.muonreco_plus_isolation_plus_SET+process.muonSelectionTypeSequence)


process.particleFlowReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex+process.pfGsfElectronMVASelectionSequence+process.particleFlowBlock+process.particleFlowTmp+process.pfElectronTranslatorSequence+process.pfPhotonTranslatorSequence+process.pfParticleSelectionSequence)


process.globalreco = cms.Sequence(process.offlineBeamSpot+process.recopixelvertexing+process.trackingGlobalReco+process.hcalGlobalRecoSequence+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.egammaGlobalReco+process.jetGlobalReco+process.muonrecoComplete+process.pfTrackingGlobalReco+process.muoncosmicreco+process.CastorFullReco)


process.DQMOfflineDPG = cms.Sequence(process.DQMOfflinePreDPG+process.DQMMessageLogger)


process.globalreco_plusPL = cms.Sequence(process.globalreco+process.ctfTracksPixelLess)


process.globalreco_plusRS = cms.Sequence(process.globalreco+process.rstracks)


process.PFTau = cms.Sequence(process.recoTauCommonSequence+process.recoTauClassicShrinkingConeSequence+process.recoTauClassicHPSSequence+process.recoTauClassicShrinkingConeMVASequence+process.recoTauHPSTancSequence)


process.l1TriggerDqmOffline = cms.Sequence(process.l1TriggerOffline+process.l1TriggerEmulatorOffline)


process.DQMOfflinePrePOG = cms.Sequence(process.muonMonitors+process.jetMETDQMOfflineSource+process.egammaDQMOffline+process.l1TriggerDqmOffline+process.triggerOfflineDQMSource+process.pvMonitor+process.bTagPlots+process.alcaBeamMonitor+process.dqmPhysics+process.produceDenoms+process.pfTauRunDQMValidation)


process.reconstruction_fromRECO = cms.Sequence(process.siPixelRecHits+process.siStripMatchedRecHits+process.clusterSummaryProducer+process.dt4DSegments+process.dt4DCosmicSegments+process.cscSegments+process.offlineBeamSpot+process.recopixelvertexing+process.trackingGlobalReco+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.egammaGlobalReco+process.jetGlobalReco+process.muonrecoComplete+process.pfTrackingGlobalReco+process.muoncosmicreco+process.CastorFullReco+process.egammaHighLevelRecoPrePF+process.particleFlowReco+process.egammaHighLevelRecoPostPF+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.muonshighlevelreco+process.particleFlowLinks+process.jetHighLevelReco+process.tautagging+process.metreco+process.btagging+process.recoPFMET+process.PFTau+process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.reducedEcalRecHitsES+process.reducedHcalRecHitsSequence+process.logErrorHarvester)


process.reconstruction_noTracking = cms.Sequence(process.clusterSummaryProducer+process.muonlocalreco+process.calolocalreco+process.castorreco+process.offlineBeamSpot+process.pixelVertices+process.trackExtrapolator+process.hcalGlobalRecoSequence+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.ckfTracksFromConversions+process.conversionStepConversionTrackProducer+process.inOutConversionTrackProducer+process.outInConversionTrackProducer+process.inOutOutInConversionTrackMerger+process.generalConversionStepConversionTrackMerger+process.jetGlobalReco+process.muonrecoComplete+process.pfTrackingGlobalReco+process.muoncosmicreco+process.CastorFullReco+process.ecalDrivenGsfElectronCores+process.uncleanedOnlyCkfTracksFromConversions+process.uncleanedOnlyInOutConversionTrackProducer+process.uncleanedOnlyOutInConversionTrackProducer+process.uncleanedOnlyInOutOutInConversionTrackMerger+process.uncleanedOnlyPfConversions+process.conversionSequence+process.photonSequence+process.particleFlowReco+process.gsfElectronCores+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.muonshighlevelreco+process.particleFlowLinks+process.jetHighLevelReco+process.tautagging+process.metrecoPlusHCALNoise+process.btagging+process.recoPFMET+process.PFTau+process.reducedRecHits+process.logErrorHarvester)


process.reconstruction_fromRECO_noTracking = cms.Sequence(process.clusterSummaryProducer+process.dt4DSegments+process.dt4DCosmicSegments+process.cscSegments+process.offlineBeamSpot+process.pixelVertices+process.trackExtrapolator+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.ckfTracksFromConversions+process.conversionStepConversionTrackProducer+process.inOutConversionTrackProducer+process.outInConversionTrackProducer+process.inOutOutInConversionTrackMerger+process.generalConversionStepConversionTrackMerger+process.jetGlobalReco+process.muonrecoComplete+process.pfTrackingGlobalReco+process.muoncosmicreco+process.CastorFullReco+process.ecalDrivenGsfElectronCores+process.uncleanedOnlyCkfTracksFromConversions+process.uncleanedOnlyInOutConversionTrackProducer+process.uncleanedOnlyOutInConversionTrackProducer+process.uncleanedOnlyInOutOutInConversionTrackMerger+process.uncleanedOnlyPfConversions+process.conversionSequence+process.photonSequence+process.particleFlowReco+process.gsfElectronCores+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.muonshighlevelreco+process.particleFlowLinks+process.jetHighLevelReco+process.tautagging+process.metreco+process.btagging+process.recoPFMET+process.PFTau+process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.reducedEcalRecHitsES+process.reducedHcalRecHitsSequence+process.logErrorHarvester)


process.reconstruction_standard_candle = cms.Sequence(process.localreco+process.globalreco+process.vertexreco+process.recoJetAssociations+process.btagging+process.electronSequence+process.photonSequence)


process.reconstruction_fromRECO_noTrackingTest = cms.Sequence(process.clusterSummaryProducer+process.dt4DSegments+process.dt4DCosmicSegments+process.cscSegments+process.offlineBeamSpot+process.pixelVertices+process.trackExtrapolator+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.egammaGlobalReco+process.jetGlobalReco+process.muonrecoComplete+process.pfTrackingGlobalReco+process.muoncosmicreco+process.CastorFullReco+process.egammaHighLevelRecoPrePF+process.particleFlowReco+process.egammaHighLevelRecoPostPF+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.muonshighlevelreco+process.particleFlowLinks+process.jetHighLevelReco+process.tautagging+process.metreco+process.btagging+process.recoPFMET+process.PFTau+process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.reducedEcalRecHitsES+process.reducedHcalRecHitsSequence+process.logErrorHarvester)


process.DQMOfflineCommon = cms.Sequence(process.dqmDcsInfo+process.DQMMessageLogger+process.SiStripDQMTier0Common+process.siPixelOfflineDQM_source+process.l1TriggerDqmOffline+process.triggerOfflineDQMSource+process.alcaBeamMonitor+process.castorSources+process.dqmPhysics+process.pvMonitor+process.produceDenoms+process.pfTauRunDQMValidation)


process.DQMOfflinePOG = cms.Sequence(process.DQMOfflinePrePOG+process.DQMMessageLogger)


process.DQMOffline = cms.Sequence(process.DQMOfflinePreDPG+process.DQMOfflinePrePOG+process.DQMMessageLogger)


process.highlevelreco = cms.Sequence(process.egammaHighLevelRecoPrePF+process.particleFlowReco+process.egammaHighLevelRecoPostPF+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.muonshighlevelreco+process.particleFlowLinks+process.jetHighLevelReco+process.tautagging+process.metrecoPlusHCALNoise+process.btagging+process.recoPFMET+process.PFTau+process.reducedRecHits)


process.DQMOfflineCommonSiStripZeroBias = cms.Sequence(process.dqmDcsInfo+process.DQMMessageLogger+process.SiStripDQMTier0MinBias+process.siPixelOfflineDQM_source+process.l1TriggerDqmOffline+process.triggerOfflineDQMSource+process.alcaBeamMonitor+process.castorSources+process.dqmPhysics+process.pvMonitor+process.produceDenoms+process.pfTauRunDQMValidation)


process.reconstruction = cms.Sequence(process.localreco+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_HcalNZS = cms.Sequence(process.localreco_HcalNZS+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_withPixellessTk = cms.Sequence(process.localreco+process.globalreco_plusPL+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_woCosmicMuons = cms.Sequence(process.localreco+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_withRS = cms.Sequence(process.localreco+process.globalreco_plusRS+process.highlevelreco+process.logErrorHarvester)


process.raw2digi_step = cms.Path(process.RawToDigi)


process.L1Reco_step = cms.Path(process.L1Reco)


process.reconstruction_step = cms.Path(process.reconstruction+process.lumiProducer)


process.pathALCARECOHcalCalHOCosmics = cms.Path(process.seqALCARECOHcalCalHOCosmics)


process.pathALCARECOTkAlZMuMu = cms.Path(process.seqALCARECOTkAlZMuMu+process.ALCARECOTkAlZMuMuDQM)


process.pathALCARECOTkAlCosmicsCTF0T = cms.Path(process.seqALCARECOTkAlCosmicsCTF0T+process.ALCARECOTkAlCosmicsCTF0TDQM)


process.pathALCARECOMuAlBeamHalo = cms.Path(process.seqALCARECOMuAlBeamHalo+process.ALCARECOMuAlBeamHaloDQM)


process.pathALCARECOTkAlCosmicsCTF = cms.Path(process.seqALCARECOTkAlCosmicsCTF+process.ALCARECOTkAlCosmicsCTFDQM)


process.pathALCARECOMuAlGlobalCosmicsInCollisions = cms.Path(process.seqALCARECOMuAlGlobalCosmicsInCollisions+process.ALCARECOMuAlGlobalCosmicsInCollisionsDQM)


process.pathALCARECOHcalCalHO = cms.Path(process.seqALCARECOHcalCalHO+process.ALCARECOHcalCalHODQM)


process.pathALCARECOTkAlMuonIsolatedPA = cms.Path(process.seqALCARECOTkAlMuonIsolatedPA)


process.pathALCARECOTkAlCosmicsCTFHLT = cms.Path(process.seqALCARECOTkAlCosmicsCTFHLT+process.ALCARECOTkAlCosmicsCTFDQM)


process.pathALCARECODtCalib = cms.Path(process.seqALCARECODtCalib+process.ALCARECODTCalibSynchDQM)


process.pathALCARECOTkAlCosmicsCosmicTFHLT = cms.Path(process.seqALCARECOTkAlCosmicsCosmicTFHLT+process.ALCARECOTkAlCosmicsCosmicTFDQM)


process.pathALCARECOTkAlCosmicsRegionalHLT = cms.Path(process.seqALCARECOTkAlCosmicsRegionalHLT+process.ALCARECOTkAlCosmicsRegionalDQM)


process.pathALCARECOHcalCalMinBias = cms.Path(process.seqALCARECOHcalCalMinBias+process.ALCARECOHcalCalPhisymDQM)


process.pathALCARECOTkAlMuonIsolated = cms.Path(process.seqALCARECOTkAlMuonIsolated+process.ALCARECOTkAlMuonIsolatedDQM)


process.pathALCARECOTkAlCosmicsRegional = cms.Path(process.seqALCARECOTkAlCosmicsRegional+process.ALCARECOTkAlCosmicsRegionalDQM)


process.pathALCARECOEcalCalWElectron = cms.Path(process.seqALCARECOEcalCalWElectron)


process.pathALCARECOTkAlUpsilonMuMu = cms.Path(process.seqALCARECOTkAlUpsilonMuMu+process.ALCARECOTkAlUpsilonMuMuDQM)


process.pathALCARECOHcalCalDijets = cms.Path(process.seqALCARECOHcalCalDijets+process.ALCARECOHcalCalDiJetsDQM)


process.pathALCARECOMuAlZMuMu = cms.Path(process.seqALCARECOMuAlZMuMu+process.ALCARECOMuAlZMuMuDQM)


process.pathALCARECOEcalCalPi0Calib = cms.Path(process.seqALCARECOEcalCalPi0Calib+process.ALCARECOEcalCalPi0CalibDQM)


process.pathALCARECOTkAlBeamHalo = cms.Path(process.seqALCARECOTkAlBeamHalo+process.ALCARECOTkAlBeamHaloDQM)


process.pathALCARECOTkAlCosmicsRegional0T = cms.Path(process.seqALCARECOTkAlCosmicsRegional0T+process.ALCARECOTkAlCosmicsRegional0TDQM)


process.pathALCARECOSiPixelLorentzAngle = cms.Path(process.seqALCARECOSiPixelLorentzAngle)


process.pathALCARECOPromptCalibProd = cms.Path(process.seqALCARECOPromptCalibProd)


process.pathALCARECOTkAlCosmicsCosmicTF0T = cms.Path(process.seqALCARECOTkAlCosmicsCosmicTF0T+process.ALCARECOTkAlCosmicsCosmicTF0TDQM)


process.pathALCARECOTkAlCosmicsCTF0THLT = cms.Path(process.seqALCARECOTkAlCosmicsCTF0THLT+process.ALCARECOTkAlCosmicsCTF0TDQM)


process.pathALCARECOMuAlCalIsolatedMu = cms.Path(process.seqALCARECOMuAlCalIsolatedMu+process.ALCARECOMuAlCalIsolatedMuDQM+process.ALCARECODTCalibrationDQM)


process.pathALCARECOSiStripCalZeroBias = cms.Path(process.seqALCARECOSiStripCalZeroBias+process.ALCARECOSiStripCalZeroBiasDQM)


process.pathALCARECOEcalCalPhiSym = cms.Path(process.seqALCARECOEcalCalPhiSym+process.ALCARECOEcalCalPhisymDQM)


process.pathALCARECOEcalCalEtaCalib = cms.Path(process.seqALCARECOEcalCalEtaCalib+process.ALCARECOEcalCalEtaCalibDQM)


process.pathALCARECOHcalCalIsoTrk = cms.Path(process.seqALCARECOHcalCalIsoTrk+process.ALCARECOHcalCalIsoTrackDQM)


process.pathALCARECOSiStripCalMinBias = cms.Path(process.seqALCARECOSiStripCalMinBias+process.ALCARECOSiStripCalMinBiasDQM)


process.pathALCARECODQM = cms.Path(process.MEtoEDMConverter)


process.pathALCARECOTkAlCosmicsRegional0THLT = cms.Path(process.seqALCARECOTkAlCosmicsRegional0THLT+process.ALCARECOTkAlCosmicsRegional0TDQM)


process.pathALCARECOTkAlLAS = cms.Path(process.seqALCARECOTkAlLAS+process.ALCARECOTkAlLASDQM)


process.pathALCARECOTkAlMinBias = cms.Path(process.seqALCARECOTkAlMinBias+process.ALCARECOTkAlMinBiasDQM)


process.pathALCARECOEcalCalZElectron = cms.Path(process.seqALCARECOEcalCalZElectron)


process.pathALCARECOLumiPixels = cms.Path(process.seqALCARECOLumiPixels)


process.pathALCARECORpcCalHLT = cms.Path(process.seqALCARECORpcCalHLT)


process.pathALCARECOHcalCalGammaJet = cms.Path(process.seqALCARECOHcalCalGammaJet)


process.pathALCARECOMuAlBeamHaloOverlaps = cms.Path(process.seqALCARECOMuAlBeamHaloOverlaps+process.ALCARECOMuAlBeamHaloOverlapsDQM)


process.pathALCARECOTkAlCosmicsCosmicTF0THLT = cms.Path(process.seqALCARECOTkAlCosmicsCosmicTF0THLT+process.ALCARECOTkAlCosmicsCosmicTF0TDQM)


process.pathALCARECOTkAlCosmicsInCollisions = cms.Path(process.seqALCARECOTkAlCosmicsInCollisions+process.ALCARECOTkAlCosmicsInCollisionsDQM)


process.pathALCARECOHcalCalNoise = cms.Path(process.seqALCARECOHcalCalNoise)


process.pathALCARECOMuAlOverlaps = cms.Path(process.seqALCARECOMuAlOverlaps+process.ALCARECOMuAlOverlapsDQM)


process.pathALCARECOTkAlCosmicsCosmicTF = cms.Path(process.seqALCARECOTkAlCosmicsCosmicTF+process.ALCARECOTkAlCosmicsCosmicTFDQM)


process.pathALCARECODtCalibCosmics = cms.Path(process.seqALCARECODtCalibCosmics+process.ALCARECODTCalibSynchCosmicsDQM)


process.pathALCARECOMuAlGlobalCosmics = cms.Path(process.seqALCARECOMuAlGlobalCosmics+process.ALCARECOMuAlGlobalCosmicsDQM)


process.pathALCARECOSiStripPCLHistos = cms.Path(process.seqALCARECOSiStripPCLHistos)


process.pathALCARECOTkAlJpsiMuMu = cms.Path(process.seqALCARECOTkAlJpsiMuMu+process.ALCARECOTkAlJpsiMuMuDQM)


process.dqmoffline_step = cms.Path(process.DQMOffline)


process.endjob_step = cms.EndPath(process.endOfProcess)


process.DBService = cms.Service("DBService")


process.DQMStore = cms.Service("DQMStore")


process.DTDataIntegrityTask = cms.Service("DTDataIntegrityTask",
    processingMode = cms.untracked.string('Offline'),
    fedIntegrityFolder = cms.untracked.string('DT/FEDIntegrity'),
    getSCInfo = cms.untracked.bool(True)
)


process.FastTimerService = cms.Service("FastTimerService",
    dqmPath = cms.untracked.string('DQM/TimerService'),
    dqmModuleTimeRange = cms.untracked.double(40.0),
    luminosityProduct = cms.untracked.InputTag("scalersRawToDigi"),
    enableDQMbyLuminosity = cms.untracked.bool(True),
    enableTimingModules = cms.untracked.bool(False),
    enableDQMbyPathOverhead = cms.untracked.bool(False),
    enableDQMbyModule = cms.untracked.bool(False),
    dqmLuminosityResolution = cms.untracked.double(1e+31),
    enableTimingExclusive = cms.untracked.bool(False),
    skipFirstPath = cms.untracked.bool(False),
    enableDQMbyLumiSection = cms.untracked.bool(True),
    dqmPathTimeResolution = cms.untracked.double(10),
    dqmPathTimeRange = cms.untracked.double(10000),
    enableTimingSummary = cms.untracked.bool(False),
    dqmTimeRange = cms.untracked.double(10000),
    dqmLumiSectionsRange = cms.untracked.uint32(2500),
    enableDQMbyProcesses = cms.untracked.bool(False),
    enableDQMSummary = cms.untracked.bool(True),
    useRealTimeClock = cms.untracked.bool(False),
    enableDQMbyPathTotal = cms.untracked.bool(True),
    enableTimingPaths = cms.untracked.bool(False),
    enableDQMbyPathExclusive = cms.untracked.bool(False),
    dqmTimeResolution = cms.untracked.double(10),
    supportedProcesses = cms.untracked.vuint32(),
    dqmModuleTimeResolution = cms.untracked.double(0.2),
    dqmLuminosityRange = cms.untracked.double(1e+34),
    enableDQMbyPathActive = cms.untracked.bool(False),
    enableDQMbyPathDetails = cms.untracked.bool(True),
    enableDQM = cms.untracked.bool(True),
    enableDQMbyPathCounters = cms.untracked.bool(True)
)


process.MessageLogger = cms.Service("MessageLogger",
    suppressInfo = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    suppressDebug = cms.untracked.vstring(),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    cerr_stats = cms.untracked.PSet(
        threshold = cms.untracked.string('WARNING'),
        output = cms.untracked.string('cerr'),
        optionalPSet = cms.untracked.bool(True)
    ),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    cerr = cms.untracked.PSet(
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        noTimeStamps = cms.untracked.bool(False),
        FwkReport = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        threshold = cms.untracked.string('INFO'),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        FwkSummary = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    FrameworkJobReport = cms.untracked.PSet(
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        )
    ),
    suppressWarning = cms.untracked.vstring('particleFlowDisplacedVertexCandidate'),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    debugModules = cms.untracked.vstring(),
    infos = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        placeholder = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary'),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport')
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    horeco = cms.PSet(
        initialSeed = cms.untracked.uint32(541321),
        engineName = cms.untracked.string('TRandom3')
    ),
    paramMuons = cms.PSet(
        initialSeed = cms.untracked.uint32(54525),
        engineName = cms.untracked.string('TRandom3')
    ),
    saveFileName = cms.untracked.string(''),
    hbhereco = cms.PSet(
        initialSeed = cms.untracked.uint32(541321),
        engineName = cms.untracked.string('TRandom3')
    ),
    externalLHEProducer = cms.PSet(
        initialSeed = cms.untracked.uint32(234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    famosPileUp = cms.PSet(
        initialSeed = cms.untracked.uint32(918273),
        engineName = cms.untracked.string('TRandom3')
    ),
    simMuonDTDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    siTrackerGaussianSmearingRecHits = cms.PSet(
        initialSeed = cms.untracked.uint32(24680),
        engineName = cms.untracked.string('TRandom3')
    ),
    ecalPreshowerRecHit = cms.PSet(
        initialSeed = cms.untracked.uint32(6541321),
        engineName = cms.untracked.string('TRandom3')
    ),
    generator = cms.PSet(
        initialSeed = cms.untracked.uint32(123456789),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simMuonRPCDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    hiSignal = cms.PSet(
        initialSeed = cms.untracked.uint32(123456789),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simCastorDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(12345678),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    mix = cms.PSet(
        initialSeed = cms.untracked.uint32(12345),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    VtxSmeared = cms.PSet(
        initialSeed = cms.untracked.uint32(98765432),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    LHCTransport = cms.PSet(
        initialSeed = cms.untracked.uint32(87654321),
        engineName = cms.untracked.string('TRandom3')
    ),
    ecalRecHit = cms.PSet(
        initialSeed = cms.untracked.uint32(654321),
        engineName = cms.untracked.string('TRandom3')
    ),
    hfreco = cms.PSet(
        initialSeed = cms.untracked.uint32(541321),
        engineName = cms.untracked.string('TRandom3')
    ),
    simSiStripDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simEcalUnsuppressedDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    hiSignalG4SimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(11),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    famosSimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(13579),
        engineName = cms.untracked.string('TRandom3')
    ),
    MuonSimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(987346),
        engineName = cms.untracked.string('TRandom3')
    ),
    g4SimHits = cms.PSet(
        initialSeed = cms.untracked.uint32(11),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    hiSignalLHCTransport = cms.PSet(
        initialSeed = cms.untracked.uint32(88776655),
        engineName = cms.untracked.string('TRandom3')
    ),
    mixGenPU = cms.PSet(
        initialSeed = cms.untracked.uint32(918273),
        engineName = cms.untracked.string('TRandom3')
    ),
    l1ParamMuons = cms.PSet(
        initialSeed = cms.untracked.uint32(6453209),
        engineName = cms.untracked.string('TRandom3')
    ),
    simBeamSpotFilter = cms.PSet(
        initialSeed = cms.untracked.uint32(87654321),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simHcalUnsuppressedDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(11223344),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simMuonCSCDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(11223344),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    mixData = cms.PSet(
        initialSeed = cms.untracked.uint32(12345),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    simSiPixelDigis = cms.PSet(
        initialSeed = cms.untracked.uint32(1234567),
        engineName = cms.untracked.string('HepJamesRandom')
    )
)


process.SiStripDetInfoFileReader = cms.Service("SiStripDetInfoFileReader")


process.SimpleMemoryCheck = cms.Service("SimpleMemoryCheck",
    jobReportOutputOnly = cms.untracked.bool(True)
)


process.Timing = cms.Service("Timing",
    summaryOnly = cms.untracked.bool(True)
)


process.TkDetMap = cms.Service("TkDetMap")


process.UpdaterService = cms.Service("UpdaterService")


process.AnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnalyticalPropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.AnyDirectionAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnyDirectionAnalyticalPropagator'),
    PropagationDirection = cms.string('anyDirection')
)


process.AutoMagneticFieldESProducer = cms.ESProducer("AutoMagneticFieldESProducer",
    valueOverride = cms.int32(-1),
    nominalCurrents = cms.untracked.vint32(-1, 0, 9558, 14416, 16819, 
        18268, 19262),
    mapLabels = cms.untracked.vstring('090322_3_8t', 
        '0t', 
        '071212_2t', 
        '071212_3t', 
        '071212_3_5t', 
        '090322_3_8t', 
        '071212_4t'),
    label = cms.untracked.string('')
)


process.BeamHaloMPropagatorAlong = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('BeamHaloMPropagatorAlong'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(10000),
    useRungeKutta = cms.bool(True)
)


process.BeamHaloMPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('BeamHaloMPropagatorOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(10000),
    useRungeKutta = cms.bool(True)
)


process.BeamHaloPropagatorAlong = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorAlong'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorAlong')
)


process.BeamHaloPropagatorAny = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorAny'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorAny'),
    PropagationDirection = cms.string('anyDirection'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorAlong')
)


process.BeamHaloPropagatorOpposite = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorOpposite'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorOpposite')
)


process.BeamHaloSHPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorAlong'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.BeamHaloSHPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorAny'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.BeamHaloSHPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorOpposite'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string(''),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string(''),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerConstituentsMapBuilder = cms.ESProducer("CaloTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz')
)


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CastorDbProducer = cms.ESProducer("CastorDbProducer")


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.Chi2EstimatorForMuRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForMuRefit')
)


process.Chi2EstimatorForMuonTrackLoader = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForMuonTrackLoader')
)


process.Chi2EstimatorForRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForRefit')
)


process.Chi2MeasurementEstimator = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(30.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2')
)


process.Chi2MeasurementEstimatorForInOut = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2ForInOut')
)


process.Chi2MeasurementEstimatorForOutIn = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(500.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2ForOutIn')
)


process.CkfElectronTrajectoryBuilder = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('fwdElectronPropagator'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfElectronTrajectoryBuilder'),
    propagatorOpposite = cms.string('bwdElectronPropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('electronChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CkfTrajectoryBuilder = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('Chi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CkfTrajectoryBuilderBeamHalo = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('BeamHaloPropagatorAlong'),
    trajectoryFilterName = cms.string('ckfTrajectoryFilterBeamHaloMuon'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfTrajectoryBuilderBH'),
    propagatorOpposite = cms.string('BeamHaloPropagatorOpposite'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('Chi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CloseComponentsMerger5D = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger5D'),
    MaxComponents = cms.int32(12),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D')
)


process.CloseComponentsMerger_forPreId = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger_forPreId'),
    MaxComponents = cms.int32(4),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D')
)


process.ClusterShapeHitFilterESProducer = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('ClusterShapeHitFilter')
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.DummyDetLayerGeometry = cms.ESProducer("DetLayerGeometryESProducer",
    ComponentName = cms.string('DummyDetLayerGeometry')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.ElectronChi2 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(2000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('ElectronChi2')
)


process.ElectronMaterialEffects = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC6_O5.par'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    ComponentName = cms.string('ElectronMaterialEffects'),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator'),
    Mass = cms.double(0.000511),
    BetheHeitlerCorrection = cms.int32(2)
)


process.ElectronMaterialEffects_forPreId = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC3_O5.par'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    ComponentName = cms.string('ElectronMaterialEffects_forPreId'),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator'),
    Mass = cms.double(0.000511),
    BetheHeitlerCorrection = cms.int32(2)
)


process.EstimatorForSTA = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(1000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2STA')
)


process.FittingSmootherRKP5 = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(4),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('FittingSmootherRKP5'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.FlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('FlexibleKFFittingSmoother'),
    standardFitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    looperFitter = cms.string('LooperFittingSmoother')
)


process.GlbMuKFFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('GlbMuKFFitter'),
    Estimator = cms.string('Chi2EstimatorForMuRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    minHits = cms.int32(3)
)


process.GlobalDetLayerGeometry = cms.ESProducer("GlobalDetLayerGeometryESProducer",
    ComponentName = cms.string('GlobalDetLayerGeometry')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.GroupedCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('GroupedCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.GroupedCkfTrajectoryBuilderP5 = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilterP5'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('GroupedCkfTrajectoryBuilderP5'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.GsfElectronFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('GsfTrajectoryFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('GsfTrajectorySmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('GsfElectronFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.GsfTrajectoryFitter = cms.ESProducer("GsfTrajectoryFitterESProducer",
    Merger = cms.string('CloseComponentsMerger5D'),
    ComponentName = cms.string('GsfTrajectoryFitter'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator')
)


process.GsfTrajectoryFitter_forPreId = cms.ESProducer("GsfTrajectoryFitterESProducer",
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    ComponentName = cms.string('GsfTrajectoryFitter_forPreId'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator')
)


process.GsfTrajectorySmoother = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ErrorRescaling = cms.double(100.0),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Merger = cms.string('CloseComponentsMerger5D'),
    ComponentName = cms.string('GsfTrajectorySmoother'),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects')
)


process.GsfTrajectorySmoother_forPreId = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ErrorRescaling = cms.double(100.0),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    ComponentName = cms.string('GsfTrajectorySmoother_forPreId'),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId')
)


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.HcalTPGCoderULUT = cms.ESProducer("HcalTPGCoderULUT",
    read_FG_LUTs = cms.bool(False),
    FGLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/HBHE_FG_LUT.dat'),
    MaskBit = cms.int32(32768),
    read_Ascii_LUTs = cms.bool(False),
    read_XML_LUTs = cms.bool(False),
    RCalibFile = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/RecHit-TPG-calib.dat'),
    LUTGenerationMode = cms.bool(False),
    inputLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/inputLUTcoder_physics.dat')
)


process.HcalTopologyIdealEP = cms.ESProducer("HcalTopologyIdealEP")


process.KFFitterForRefitInsideOut = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    minHits = cms.int32(3)
)


process.KFFitterForRefitOutsideIn = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    minHits = cms.int32(3)
)


process.KFFittingSmootheForSTA = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterSTA'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmootherSTA'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFitterSmootherSTA'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherBeamHalo = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterBH'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmootherBH'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherBH'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherForInOut = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterForInOut'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('KFSmootherForInOut'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherForInOut'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFSmootherForMuonTrackLoader = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForMuonTrackLoader'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForMuonTrackLoaderL3 = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForMuonTrackLoaderL3'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForRefitInsideOut = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForRefitOutsideIn = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSwitching1DUpdatorESProducer = cms.ESProducer("KFSwitching1DUpdatorESProducer",
    ComponentName = cms.string('KFSwitching1DUpdator'),
    doEndCap = cms.bool(False)
)


process.KFTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterial'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterBeamHalo = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterBH'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('BeamHaloPropagatorAlong'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForInOut = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForInOut'),
    Estimator = cms.string('Chi2ForInOut'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('alongMomElePropagator'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForOutIn = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForOutIn'),
    Estimator = cms.string('Chi2ForOutIn'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('alongMomElePropagator'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForSTA = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterSTA'),
    Estimator = cms.string('Chi2STA'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SteppingHelixPropagatorAny'),
    minHits = cms.int32(3)
)


process.KFTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterial'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherBeamHalo = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherBH'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('BeamHaloPropagatorAlong'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherForInOut = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForInOut'),
    Estimator = cms.string('Chi2ForInOut'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('oppositeToMomElePropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherForSTA = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherSTA'),
    Estimator = cms.string('Chi2STA'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SteppingHelixPropagatorOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFUpdatorESProducer = cms.ESProducer("KFUpdatorESProducer",
    ComponentName = cms.string('KFUpdator')
)


process.KullbackLeiblerDistance5D = cms.ESProducer("DistanceBetweenComponentsESProducer5D",
    ComponentName = cms.string('KullbackLeiblerDistance5D'),
    DistanceMeasure = cms.string('KullbackLeibler')
)


process.L1DTConfigFromDB = cms.ESProducer("DTConfigDBProducer",
    DTTPGMap = cms.untracked.PSet(
        wh0st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se4 = cms.untracked.vint32(72, 48, 72, 18),
        whm2st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se3 = cms.untracked.vint32(72, 48, 72, 18),
        whm1st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        whm2st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        whm2st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        whm1st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm1st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh1st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm1st1se3 = cms.untracked.vint32(50, 48, 50, 13),
        whm1st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se4 = cms.untracked.vint32(60, 48, 60, 15),
        wh1st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        wh2st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        whm2st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        wh0st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh0st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh2st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        wh2st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh2st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm1st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se3 = cms.untracked.vint32(60, 48, 60, 15),
        whm1st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh0st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh0st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm1st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh1st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh1st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st1se4 = cms.untracked.vint32(50, 48, 50, 13),
        wh1st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh1st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se8 = cms.untracked.vint32(72, 58, 72, 18)
    ),
    DTTPGParameters = cms.PSet(
        SectCollParameters = cms.PSet(
            SCCSP5 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCECF4 = cms.bool(False),
            SCCSP1 = cms.int32(0),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCCSP4 = cms.int32(0),
            SCECF1 = cms.bool(False),
            Debug = cms.untracked.bool(False)
        ),
        Debug = cms.untracked.bool(False),
        TUParameters = cms.PSet(
            TracoParameters = cms.PSet(
                SPRGCOMP = cms.int32(2),
                FHTMSK = cms.int32(0),
                DD = cms.int32(18),
                SSLMSK = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                Debug = cms.untracked.int32(0),
                FSLMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SHTMSK = cms.int32(0),
                TRGENB3 = cms.int32(1),
                SHISM = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                FLTMSK = cms.int32(1),
                LTS = cms.int32(0),
                SLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                TRGENB9 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                FHTPRF = cms.int32(1),
                LTF = cms.int32(0),
                TRGENB1 = cms.int32(1),
                TRGENB0 = cms.int32(1),
                FHISM = cms.int32(0),
                TRGENB2 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                REUSEO = cms.int32(1),
                REUSEI = cms.int32(1),
                BTIC = cms.int32(32)
            ),
            TSPhiParameters = cms.PSet(
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSTREN9 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN0 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSMCCE2 = cms.bool(False),
                TSTREN19 = cms.bool(True),
                TSMCCE1 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSSMSK2 = cms.int32(312),
                TSTREN10 = cms.bool(True),
                TSMMSK2 = cms.int32(312),
                TSMMSK1 = cms.int32(312),
                TSMHSP = cms.int32(1),
                TSSNOE2 = cms.bool(False),
                TSSNOE1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSCCEC = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMHTE2 = cms.bool(False),
                Debug = cms.untracked.bool(False),
                TSSHTE2 = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSSHTE1 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSSNOEC = cms.bool(False),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSSHTEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSMHTEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSSGS2 = cms.int32(1),
                TSMNOEC = cms.bool(False),
                TSSGS1 = cms.int32(1),
                TSTREN18 = cms.bool(True),
                TSMHTE1 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            BtiParameters = cms.PSet(
                KACCTHETA = cms.int32(1),
                WEN8 = cms.int32(1),
                ACH = cms.int32(1),
                DEAD = cms.int32(31),
                ACL = cms.int32(2),
                PTMS20 = cms.int32(1),
                Debug = cms.untracked.int32(0),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                SET = cms.int32(7),
                RON = cms.bool(True),
                WEN2 = cms.int32(1),
                LL = cms.int32(2),
                LH = cms.int32(21),
                WEN3 = cms.int32(1),
                RE43 = cms.int32(2),
                WEN0 = cms.int32(1),
                RL = cms.int32(42),
                WEN1 = cms.int32(1),
                RH = cms.int32(61),
                LTS = cms.int32(3),
                CH = cms.int32(41),
                CL = cms.int32(22),
                PTMS15 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS10 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS12 = cms.int32(1),
                XON = cms.bool(False),
                WEN7 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS31 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS5 = cms.int32(1),
                PTMS4 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS1 = cms.int32(0),
                PTMS0 = cms.int32(0),
                PTMS3 = cms.int32(0),
                WEN6 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS9 = cms.int32(1),
                PTMS8 = cms.int32(1),
                ST43 = cms.int32(42),
                AC2 = cms.int32(3),
                AC1 = cms.int32(0),
                KMAX = cms.int32(64),
                PTMS21 = cms.int32(1)
            ),
            LutParameters = cms.PSet(
                WHEEL = cms.untracked.int32(-1),
                Debug = cms.untracked.bool(False),
                BTIC = cms.untracked.int32(0),
                XCN = cms.untracked.double(0),
                D = cms.untracked.double(0)
            )
        )
    ),
    debugBti = cms.int32(0),
    TracoLutsFromDB = cms.bool(True),
    debugSC = cms.bool(False),
    debugDB = cms.bool(False),
    debugLUTs = cms.bool(False),
    UseT0 = cms.bool(False),
    cfgConfig = cms.bool(False),
    debugTST = cms.bool(False),
    debugTSP = cms.bool(False),
    bxOffset = cms.int32(19),
    debug = cms.bool(False),
    debugPed = cms.bool(False),
    debugTU = cms.bool(False),
    finePhase = cms.double(25.0),
    UseBtiAcceptParam = cms.bool(True),
    debugTraco = cms.int32(0)
)


process.LooperFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('LooperFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('LooperSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('LooperFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.LooperTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('LooperFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    minHits = cms.int32(3)
)


process.LooperTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('LooperSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.MaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('PropagatorWithMaterial'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.MeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(cms.InputTag("siPixelDigis")),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('siPixelClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('siStripClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string(''),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    skipClusters = cms.InputTag(""),
    UseStripModuleQualityDB = cms.bool(True)
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.MuonTransientTrackingRecHitBuilderESProducer = cms.ESProducer("MuonTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('MuonRecHitBuilder')
)


process.OppositeAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnalyticalPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.OppositeMaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.PixelCPEGenericESProducer = cms.ESProducer("PixelCPEGenericESProducer",
    EdgeClusterErrorX = cms.double(50.0),
    DoCosmics = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    UseErrorsFromTemplates = cms.bool(True),
    eff_charge_cut_highX = cms.double(1.0),
    TruncatePixelCharge = cms.bool(True),
    size_cutY = cms.double(3.0),
    size_cutX = cms.double(3.0),
    inflate_all_errors_no_trk_angle = cms.bool(False),
    IrradiationBiasCorrection = cms.bool(False),
    TanLorentzAnglePerTesla = cms.double(0.106),
    inflate_errors = cms.bool(False),
    eff_charge_cut_lowX = cms.double(0.0),
    eff_charge_cut_highY = cms.double(1.0),
    ClusterProbComputationFlag = cms.int32(0),
    EdgeClusterErrorY = cms.double(85.0),
    ComponentName = cms.string('PixelCPEGeneric'),
    eff_charge_cut_lowY = cms.double(0.0),
    PixelErrorParametrization = cms.string('NOTcmsim'),
    Alpha2Order = cms.bool(True)
)


process.PropagatorWithMaterialForLoopers = cms.ESProducer("PropagatorWithMaterialESProducer",
    useOldAnalPropLogic = cms.bool(False),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialForLoopers'),
    Mass = cms.double(0.1396),
    ptMin = cms.double(-1),
    MaxDPhi = cms.double(4.0),
    useRungeKutta = cms.bool(False)
)


process.PropagatorWithMaterialForLoopersOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    useOldAnalPropLogic = cms.bool(False),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialForLoopersOpposite'),
    Mass = cms.double(0.1396),
    ptMin = cms.double(-1),
    MaxDPhi = cms.double(4.0),
    useRungeKutta = cms.bool(False)
)


process.RK1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RK1DFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('RK1DSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RK1DFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RK1DTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('RK1DFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFSwitching1DUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(3)
)


process.RK1DTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('RK1DSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFSwitching1DUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.RKFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RKOutliers1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RK1DFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('RK1DSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKOutliers1DFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('RKFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(3)
)


process.RKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('RKSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.RPCConeBuilder = cms.ESProducer("RPCConeBuilder",
    towerEnd = cms.int32(16),
    towerBeg = cms.int32(0)
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    useDDD = cms.untracked.bool(False),
    compatibiltyWith11 = cms.untracked.bool(True)
)


process.RungeKuttaTrackerPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('RungeKuttaTrackerPropagator'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(True)
)


process.RungeKuttaTrackerPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(True)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0)
)


process.SlaveField0 = cms.ESProducer("UniformMagneticFieldESProducer",
    ZFieldInTesla = cms.double(0.0),
    label = cms.untracked.string('slave_0')
)


process.SlaveField20 = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('2_0T')
    ),
    label = cms.untracked.string('slave_20')
)


process.SlaveField30 = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('3_0T')
    ),
    label = cms.untracked.string('slave_30')
)


process.SlaveField35 = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('3_5T')
    ),
    label = cms.untracked.string('slave_35')
)


process.SlaveField38 = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('3_8T')
    ),
    label = cms.untracked.string('slave_38')
)


process.SlaveField40 = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('4_0T')
    ),
    label = cms.untracked.string('slave_40')
)


process.SmartPropagator = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterial'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagator')
)


process.SmartPropagatorAny = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterial'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorAny')
)


process.SmartPropagatorAnyOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyOpposite')
)


process.SmartPropagatorAnyRK = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyRK')
)


process.SmartPropagatorAnyRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyRKOpposite')
)


process.SmartPropagatorOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorOpposite')
)


process.SmartPropagatorRK = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorRK')
)


process.SmartPropagatorRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorRKOpposite')
)


process.SteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlong'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorAlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlongNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAny'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorAnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAnyNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2Along = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Along'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2AlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2AlongNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorL2Any = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Any'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2AnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2AnyNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorL2Opposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Opposite'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2OppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2OppositeNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOpposite'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorOppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOppositeNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.StraightLinePropagator = cms.ESProducer("StraightLinePropagatorESProducer",
    ComponentName = cms.string('StraightLinePropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.StripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('SimpleStripCPE')
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle')
)


process.TTRHBuilderAngleAndTemplate = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPETemplateReco'),
    ComponentName = cms.string('WithAngleAndTemplate')
)


process.TrackerDigiGeometryESModule = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.TrackerGeometricDetESModule = cms.ESProducer("TrackerGeometricDetESModule",
    fromDDD = cms.bool(False)
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TrajectoryBuilderForConversions = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('alongMomElePropagator'),
    trajectoryFilterName = cms.string('TrajectoryFilterForConversions'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('TrajectoryBuilderForConversions'),
    propagatorOpposite = cms.string('oppositeToMomElePropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('eleLooseChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.TrajectoryBuilderForElectrons = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('fwdGsfElectronPropagator'),
    trajectoryFilterName = cms.string('TrajectoryFilterForElectrons'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('TrajectoryBuilderForElectrons'),
    propagatorOpposite = cms.string('bwdGsfElectronPropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('ElectronChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(90.0)
)


process.TrajectoryCleanerBySharedHitsForConversions = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('TrajectoryCleanerBySharedHitsForConversions'),
    fractionShared = cms.double(0.5),
    ValidHitBonus = cms.double(5.0),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    allowSharedFirstHit = cms.bool(True)
)


process.TrajectoryFilterForConversions = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minimumNumberOfHits = cms.int32(3),
        minHitsMinPt = cms.int32(-1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(-1),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minPt = cms.double(0.9)
    ),
    ComponentName = cms.string('TrajectoryFilterForConversions')
)


process.TrajectoryFilterForElectrons = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minimumNumberOfHits = cms.int32(5),
        minHitsMinPt = cms.int32(-1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(-1),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minPt = cms.double(2.0)
    ),
    ComponentName = cms.string('TrajectoryFilterForElectrons')
)


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VBF0 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(),
    overrideMasterSector = cms.bool(True),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(),
    label = cms.untracked.string('0t'),
    version = cms.string('grid_1103l_071212_2t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_0'),
    geometryVersion = cms.int32(71212),
    cacheLastVolume = cms.untracked.bool(True)
)


process.VBF20 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(),
    overrideMasterSector = cms.bool(True),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(),
    label = cms.untracked.string('071212_2t'),
    version = cms.string('grid_1103l_071212_2t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_20'),
    geometryVersion = cms.int32(71212),
    cacheLastVolume = cms.untracked.bool(True)
)


process.VBF30 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(),
    overrideMasterSector = cms.bool(True),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(),
    label = cms.untracked.string('071212_3t'),
    version = cms.string('grid_1103l_071212_3t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_30'),
    geometryVersion = cms.int32(71212),
    cacheLastVolume = cms.untracked.bool(True)
)


process.VBF35 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(),
    overrideMasterSector = cms.bool(True),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(),
    label = cms.untracked.string('071212_3_5t'),
    version = cms.string('grid_1103l_071212_3_5t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_35'),
    geometryVersion = cms.int32(71212),
    cacheLastVolume = cms.untracked.bool(True)
)


process.VBF38 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    overrideMasterSector = cms.bool(False),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991),
    label = cms.untracked.string('090322_3_8t'),
    version = cms.string('grid_1103l_090322_3_8t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_38'),
    geometryVersion = cms.int32(90322),
    cacheLastVolume = cms.untracked.bool(True)
)


process.VBF40 = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(),
    overrideMasterSector = cms.bool(True),
    useParametrizedTrackerField = cms.bool(True),
    scalingFactors = cms.vdouble(),
    label = cms.untracked.string('071212_4t'),
    version = cms.string('grid_1103l_071212_4t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('slave_40'),
    geometryVersion = cms.int32(71212),
    cacheLastVolume = cms.untracked.bool(True)
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.ak5CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.ak5CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.ak5CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2Relative')
)


process.ak5CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L3Absolute')
)


process.ak5CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ak5CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ak5CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak5JPTL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.ak5JPTL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1Offset')
)


process.ak5JPTL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2Relative')
)


process.ak5JPTL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L3Absolute')
)


process.ak5JPTResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2L3Residual')
)


process.ak5L1JPTOffset = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    offsetService = cms.string('ak5CaloL1Offset'),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset')
)


process.ak5PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6PFJets","rho"),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet')
)


process.ak5PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset')
)


process.ak5PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2Relative')
)


process.ak5PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L3Absolute')
)


process.ak5PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ak5PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ak5PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.ak5TrackL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L2Relative')
)


process.ak5TrackL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.ak7CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.ak7CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L2Relative')
)


process.ak7CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ak7CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak7CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ak7CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak7JPTL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7JPTL1Fastjet', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.ak7JPTL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7JPTL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.ak7JPTL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7L1JPTOffset = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    offsetService = cms.string('ak5CaloL1Offset'),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset')
)


process.ak7PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6PFJets","rho"),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet')
)


process.ak7PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset')
)


process.ak7PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L2Relative')
)


process.ak7PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L3Absolute')
)


process.ak7PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ak7PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak7PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ak7PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.alongMomElePropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('alongMomElePropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.beamHaloNavigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('BeamHaloNavigationSchool')
)


process.bwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('bwdAnalyticalPropagator'),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.bwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('bwdElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.bwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('bwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.chi2CutForConversionTrajectoryBuilder = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('eleLooseChi2')
)


process.ckfBaseInOutTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.9),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseInOutTrajectoryFilter')
)


process.ckfBaseTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.9),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseTrajectoryFilter')
)


process.ckfBaseTrajectoryFilterP5 = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.5),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(4),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseTrajectoryFilterP5')
)


process.ckfTrajectoryFilterBeamHaloMuon = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(3),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(2),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(4)
    ),
    ComponentName = cms.string('ckfTrajectoryFilterBeamHaloMuon')
)


process.combinedMVA = cms.ESProducer("CombinedMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('CombinedMVA'),
    jetTagComputers = cms.VPSet(cms.PSet(
        discriminator = cms.bool(True),
        variables = cms.bool(False),
        jetTagComputer = cms.string('jetProbability')
    ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('combinedSecondaryVertex')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softMuon')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softElectron')
        ))
)


process.combinedSecondaryVertex = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVRecoVertex', 
        'CombinedSVPseudoVertex', 
        'CombinedSVNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.combinedSecondaryVertexMVA = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVMVARecoVertex', 
        'CombinedSVMVAPseudoVertex', 
        'CombinedSVMVANoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.compositeTrajectoryFilterESProducer = cms.ESProducer("CompositeTrajectoryFilterESProducer",
    filterNames = cms.vstring(),
    ComponentName = cms.string('compositeTrajectoryFilter')
)


process.convCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('convCkfTrajectoryFilter'),
    maxCand = cms.int32(2),
    ComponentName = cms.string('convCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    clustersToSkip = cms.InputTag("convClusters"),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(3),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.convCkfTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('convCkfTrajectoryFilter')
)


process.convLayerPairs = cms.ESProducer("SeedingLayersESProducer",
    TOB5 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    ),
    TOB4 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    ),
    TIB1 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    TOB6 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    ),
    TOB1 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    TOB3 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    ),
    TID3 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("convClusters"),
        maxRing = cms.int32(2)
    ),
    TOB2 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    ComponentName = cms.string('convLayerPairs'),
    TEC = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        skipClusters = cms.InputTag("convClusters"),
        maxRing = cms.int32(7),
        minRing = cms.int32(1)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix2+BPix3', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg', 
        'BPix3+TIB1', 
        'BPix3+TIB2', 
        'TIB1+TID1_pos', 
        'TIB1+TID1_neg', 
        'TIB1+TID2_pos', 
        'TIB1+TID2_neg', 
        'TIB1+TIB2', 
        'TIB1+TIB3', 
        'TIB2+TID1_pos', 
        'TIB2+TID1_neg', 
        'TIB2+TID2_pos', 
        'TIB2+TID2_neg', 
        'TIB2+TIB3', 
        'TIB2+TIB4', 
        'TIB3+TIB4', 
        'TIB3+TOB1', 
        'TIB3+TID1_pos', 
        'TIB3+TID1_neg', 
        'TIB4+TOB1', 
        'TIB4+TOB2', 
        'TOB1+TOB2', 
        'TOB1+TOB3', 
        'TOB1+TEC1_pos', 
        'TOB1+TEC1_neg', 
        'TOB2+TOB3', 
        'TOB2+TOB4', 
        'TOB2+TEC1_pos', 
        'TOB2+TEC1_neg', 
        'TID1_pos+TID2_pos', 
        'TID2_pos+TID3_pos', 
        'TID3_pos+TEC1_pos', 
        'TID1_neg+TID2_neg', 
        'TID2_neg+TID3_neg', 
        'TID3_neg+TEC1_neg', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC4_pos+TEC5_pos', 
        'TEC5_pos+TEC6_pos', 
        'TEC6_pos+TEC7_pos', 
        'TEC7_pos+TEC8_pos', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC4_neg+TEC5_neg', 
        'TEC5_neg+TEC6_neg', 
        'TEC6_neg+TEC7_neg', 
        'TEC7_neg+TEC8_neg'),
    TID2 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("convClusters"),
        maxRing = cms.int32(2)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("convClusters"),
        hitErrorRPhi = cms.double(0.0051)
    ),
    TIB2 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    TIB4 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    ),
    TID1 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("convClusters"),
        maxRing = cms.int32(2)
    ),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("convClusters"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    TIB3 = cms.PSet(
        skipClusters = cms.InputTag("convClusters"),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
    )
)


process.convStepFitterSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(30),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('convStepRKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('convStepFitterSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.convStepRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('convStepRKSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.cosmicsNavigationSchoolESProducer = cms.ESProducer("SkippingLayerCosmicNavigationSchoolESProducer",
    noPXB = cms.bool(False),
    noTID = cms.bool(False),
    noPXF = cms.bool(False),
    noTIB = cms.bool(False),
    ComponentName = cms.string('CosmicNavigationSchool'),
    allSelf = cms.bool(True),
    noTEC = cms.bool(False),
    noTOB = cms.bool(False),
    selfSearch = cms.bool(True)
)


process.detachedTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(9.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('detachedTripletStepChi2Est')
)


process.detachedTripletStepSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True),
        skipClusters = cms.InputTag("detachedTripletStepClusters")
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True),
        skipClusters = cms.InputTag("detachedTripletStepClusters")
    ),
    ComponentName = cms.string('detachedTripletStepSeedLayers')
)


process.detachedTripletStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('detachedTripletStepTrajectoryFilter'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(2),
    clustersToSkip = cms.InputTag("detachedTripletStepClusters"),
    alwaysUseInvalidHits = cms.bool(False),
    minNrOfHitsForRebuild = cms.int32(5),
    ComponentName = cms.string('detachedTripletStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    estimator = cms.string('detachedTripletStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.detachedTripletStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.075),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(0.701),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('detachedTripletStepTrajectoryFilter')
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.ecalNextToDeadChannelESProducer = cms.ESProducer("EcalNextToDeadChannelESProducer",
    channelStatusThresholdForDead = cms.int32(12)
)


process.ecalSeverityLevel = cms.ESProducer("EcalSeverityLevelESProducer",
    dbstatusMask = cms.PSet(
        kRecovered = cms.vuint32(),
        kGood = cms.vuint32(0),
        kTime = cms.vuint32(),
        kWeird = cms.vuint32(),
        kBad = cms.vuint32(11, 12, 13, 14, 15, 
            16),
        kProblematic = cms.vuint32(1, 2, 3, 4, 5, 
            6, 7, 8, 9, 10)
    ),
    timeThresh = cms.double(2.0),
    flagMask = cms.PSet(
        kRecovered = cms.vstring('kLeadingEdgeRecovered', 
            'kTowerRecovered'),
        kGood = cms.vstring('kGood'),
        kTime = cms.vstring('kOutOfTime'),
        kWeird = cms.vstring('kWeird', 
            'kDiWeird'),
        kBad = cms.vstring('kFaultyHardware', 
            'kDead', 
            'kKilled'),
        kProblematic = cms.vstring('kPoorReco', 
            'kPoorCalib', 
            'kNoisy', 
            'kSaturated')
    )
)


process.electronChi2 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('electronChi2')
)


process.electronTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('electronTrajectoryCleanerBySharedHits'),
    fractionShared = cms.double(0.19),
    ValidHitBonus = cms.double(1000.0),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(0.0),
    allowSharedFirstHit = cms.bool(True)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.fwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('fwdAnalyticalPropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.fwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('fwdElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.fwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('fwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.ghostTrack = cms.ESProducer("GhostTrackESProducer",
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    calibrationRecords = cms.vstring('GhostTrackRecoVertex', 
        'GhostTrackPseudoVertex', 
        'GhostTrackNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcalRecAlgos = cms.ESProducer("HcalRecAlgoESProducer",
    RecoveredRecHitBits = cms.vstring('TimingAddedBit', 
        'TimingSubtractedBit'),
    SeverityLevels = cms.VPSet(cms.PSet(
        RecHitFlags = cms.vstring(''),
        ChannelStatus = cms.vstring(''),
        Level = cms.int32(0)
    ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellCaloTowerProb'),
            Level = cms.int32(1)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HSCP_R1R2', 
                'HSCP_FracLeader', 
                'HSCP_OuterEnergy', 
                'HSCP_ExpFit', 
                'ADCSaturationBit', 
                'HBHEIsolatedNoise'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(5)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HBHEHpdHitMultiplicity', 
                'HBHEPulseShape', 
                'HOBit', 
                'HFInTimeWindow', 
                'ZDCBit', 
                'CalibrationBit', 
                'TimingErrorBit', 
                'HBHETriangleNoise', 
                'HBHETS4TS5Noise'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(8)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HFLongShort', 
                'HFPET', 
                'HFS8S1Ratio', 
                'HFDigiTime'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(11)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HBHEFlatNoise', 
                'HBHESpikeNoise'),
            ChannelStatus = cms.vstring('HcalCellCaloTowerMask'),
            Level = cms.int32(12)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellHot'),
            Level = cms.int32(15)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellOff', 
                'HcalCellDead'),
            Level = cms.int32(20)
        )),
    DropChannelStatusBits = cms.vstring('HcalCellMask', 
        'HcalCellOff', 
        'HcalCellDead')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    file = cms.untracked.string(''),
    dump = cms.untracked.vstring('')
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.ic5CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.ic5CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.ic5CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L2Relative')
)


process.ic5CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L3Absolute')
)


process.ic5CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ic5CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ic5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ic5CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ic5PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6PFJets","rho"),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet')
)


process.ic5PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset')
)


process.ic5PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L2Relative')
)


process.ic5PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L3Absolute')
)


process.ic5PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("ic5PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ic5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.ic5PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string('fakeForIdeal'),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(False)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.impactParameterMVAComputer = cms.ESProducer("GenericMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('ImpactParameterMVA')
)


process.initialStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(30.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('initialStepChi2Est')
)


process.initialStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('initialStepTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('initialStepTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    maxPtForLooperReconstruction = cms.double(0.7),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('initialStepChi2Est'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.initialStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.2),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('initialStepTrajectoryFilter')
)


process.jetBProbability = cms.ESProducer("JetBProbabilityESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    maximumDecayLength = cms.double(5.0)
)


process.jetProbability = cms.ESProducer("JetProbabilityESProducer",
    deltaR = cms.double(0.3),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    maximumDecayLength = cms.double(5.0)
)


process.kt4CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.kt4CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.kt4CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L2Relative')
)


process.kt4CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L3Absolute')
)


process.kt4CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("kt4CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt4CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.kt4CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt4PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6PFJets","rho"),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet')
)


process.kt4PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset')
)


process.kt4PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L2Relative')
)


process.kt4PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L3Absolute')
)


process.kt4PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("kt4PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt4PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.kt4PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.kt6CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet')
)


process.kt6CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset')
)


process.kt6CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L2Relative')
)


process.kt6CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L3Absolute')
)


process.kt6CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("kt6CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt6CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.kt6CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt6PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    srcRho = cms.InputTag("kt6PFJets","rho"),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet')
)


process.kt6PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset')
)


process.kt6PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L2Relative')
)


process.kt6PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L3Absolute')
)


process.kt6PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    srcBTagInfoElectron = cms.InputTag("kt6PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt6PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB')
)


process.kt6PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.lowPtTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(9.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('lowPtTripletStepChi2Est')
)


process.lowPtTripletStepSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True),
        skipClusters = cms.InputTag("lowPtTripletStepClusters")
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True),
        skipClusters = cms.InputTag("lowPtTripletStepClusters")
    ),
    ComponentName = cms.string('lowPtTripletStepSeedLayers')
)


process.lowPtTripletStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('lowPtTripletStepTrajectoryFilter'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(3),
    clustersToSkip = cms.InputTag("lowPtTripletStepClusters"),
    alwaysUseInvalidHits = cms.bool(True),
    minNrOfHitsForRebuild = cms.int32(5),
    ComponentName = cms.string('lowPtTripletStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    estimator = cms.string('lowPtTripletStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.lowPtTripletStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.075),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('lowPtTripletStepTrajectoryFilter')
)


process.mixedTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(16.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('mixedTripletStepChi2Est')
)


process.mixedTripletStepPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('mixedTripletStepPropagator'),
    Mass = cms.double(0.105),
    ptMin = cms.double(0.1),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.mixedTripletStepPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('mixedTripletStepPropagatorOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(0.1),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.mixedTripletStepSeedLayersA = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        skipClusters = cms.InputTag("mixedTripletStepClusters"),
        hitErrorRPhi = cms.double(0.0051)
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'BPix2+FPix1_pos+FPix2_pos', 
        'BPix2+FPix1_neg+FPix2_neg', 
        'FPix1_pos+FPix2_pos+TEC1_pos', 
        'FPix1_neg+FPix2_neg+TEC1_neg', 
        'FPix2_pos+TEC2_pos+TEC3_pos', 
        'FPix2_neg+TEC2_neg+TEC3_neg'),
    TEC = cms.PSet(
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("mixedTripletStepClusters"),
        maxRing = cms.int32(1)
    ),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        skipClusters = cms.InputTag("mixedTripletStepClusters"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    ComponentName = cms.string('mixedTripletStepSeedLayersA')
)


process.mixedTripletStepSeedLayersB = cms.ESProducer("SeedingLayersESProducer",
    ComponentName = cms.string('mixedTripletStepSeedLayersB'),
    layerList = cms.vstring('BPix2+BPix3+TIB1', 
        'BPix2+BPix3+TIB2'),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        skipClusters = cms.InputTag("mixedTripletStepClusters"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    TIB = cms.PSet(
        skipClusters = cms.InputTag("mixedTripletStepClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.mixedTripletStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('mixedTripletStepPropagator'),
    trajectoryFilterName = cms.string('mixedTripletStepTrajectoryFilter'),
    propagatorOpposite = cms.string('mixedTripletStepPropagatorOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(2),
    clustersToSkip = cms.InputTag("mixedTripletStepClusters"),
    alwaysUseInvalidHits = cms.bool(True),
    minNrOfHitsForRebuild = cms.int32(5),
    ComponentName = cms.string('mixedTripletStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    estimator = cms.string('mixedTripletStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.mixedTripletStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('mixedTripletStepTrajectoryFilter')
)


process.mixedlayerpairs = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg', 
        'FPix2_pos+TEC1_pos', 
        'FPix2_pos+TEC2_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'FPix2_neg+TEC1_neg', 
        'FPix2_neg+TEC2_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(1)
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('MixedLayerPairs')
)


process.mixedlayertriplets = cms.ESProducer("SeedingLayersESProducer",
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'BPix1+BPix2+TIB1', 
        'BPix1+BPix3+TIB1', 
        'BPix2+BPix3+TIB1', 
        'BPix1+FPix1_pos+TID1_pos', 
        'BPix1+FPix1_neg+TID1_neg', 
        'BPix1+FPix1_pos+TID2_pos', 
        'BPix1+FPix1_neg+TID2_neg', 
        'FPix1_pos+FPix2_pos+TEC1_pos', 
        'FPix1_neg+FPix2_neg+TEC1_neg', 
        'FPix1_pos+FPix2_pos+TEC2_pos', 
        'FPix1_neg+FPix2_neg+TEC2_neg'),
    ComponentName = cms.string('MixedLayerTriplets'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TID = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TIB = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    includeBadChambers = cms.bool(False),
    etaBinSize = cms.double(0.125),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.myTTRHBuilderWithoutAngle = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('PixelTTRHBuilderWithoutAngle')
)


process.myTTRHBuilderWithoutAngle4MixedPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedPairs')
)


process.myTTRHBuilderWithoutAngle4MixedTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedTriplets')
)


process.myTTRHBuilderWithoutAngle4PixelPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelPairs')
)


process.myTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelTriplets')
)


process.navigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('SimpleNavigationSchool')
)


process.negativeTrackCounting3D2nd = cms.ESProducer("NegativeTrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(2)
)


process.negativeTrackCounting3D3rd = cms.ESProducer("NegativeTrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(3)
)


process.oppositeToMomElePropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('oppositeToMomElePropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.pixelLessLayerPairs4PixelLessTracking = cms.ESProducer("SeedingLayersESProducer",
    TIB3 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TIB2 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TIB1 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TID1 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(3),
        minRing = cms.int32(1)
    ),
    TID3 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1)
    ),
    TID2 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(3),
        minRing = cms.int32(1)
    ),
    ComponentName = cms.string('pixelLessLayerPairs4PixelLessTracking'),
    TEC = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(2),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched")
    ),
    layerList = cms.vstring('TIB1+TIB2', 
        'TIB1+TIB3', 
        'TIB2+TIB3', 
        'TIB1+TID1_pos', 
        'TIB1+TID1_neg', 
        'TIB2+TID1_pos', 
        'TIB2+TID1_neg', 
        'TIB1+TID2_pos', 
        'TIB1+TID2_neg', 
        'TID1_pos+TID2_pos', 
        'TID2_pos+TID3_pos', 
        'TID3_pos+TEC2_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TID1_neg+TID2_neg', 
        'TID2_neg+TID3_neg', 
        'TID3_neg+TEC2_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg')
)


process.pixelLessStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(16.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('pixelLessStepChi2Est')
)


process.pixelLessStepSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    TID = cms.PSet(
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelLessStepClusters"),
        maxRing = cms.int32(2)
    ),
    ComponentName = cms.string('pixelLessStepSeedLayers'),
    layerList = cms.vstring('TIB1+TIB2', 
        'TID1_pos+TID2_pos', 
        'TID2_pos+TID3_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC3_pos+TEC5_pos', 
        'TEC4_pos+TEC5_pos', 
        'TID1_neg+TID2_neg', 
        'TID2_neg+TID3_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC3_neg+TEC5_neg', 
        'TEC4_neg+TEC5_neg'),
    TEC = cms.PSet(
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelLessStepClusters"),
        maxRing = cms.int32(2)
    ),
    TIB = cms.PSet(
        skipClusters = cms.InputTag("pixelLessStepClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.pixelLessStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('pixelLessStepTrajectoryFilter'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(2),
    clustersToSkip = cms.InputTag("pixelLessStepClusters"),
    alwaysUseInvalidHits = cms.bool(False),
    minNrOfHitsForRebuild = cms.int32(4),
    ComponentName = cms.string('pixelLessStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    estimator = cms.string('pixelLessStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.pixelLessStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(4),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('pixelLessStepTrajectoryFilter')
)


process.pixelPairElectronSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("tripletElectronClusterMask"),
        hitErrorRPhi = cms.double(0.0051)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("tripletElectronClusterMask"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    ComponentName = cms.string('pixelPairElectronSeedLayers')
)


process.pixelPairStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(9.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('pixelPairStepChi2Est')
)


process.pixelPairStepSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("pixelPairStepClusters"),
        hitErrorRPhi = cms.double(0.0051)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("pixelPairStepClusters"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    ComponentName = cms.string('pixelPairStepSeedLayers')
)


process.pixelPairStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('pixelPairStepTrajectoryFilter'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(2),
    clustersToSkip = cms.InputTag("pixelPairStepClusters"),
    alwaysUseInvalidHits = cms.bool(True),
    minNrOfHitsForRebuild = cms.int32(5),
    ComponentName = cms.string('pixelPairStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    estimator = cms.string('pixelPairStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.pixelPairStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(999),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(3),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('pixelPairStepTrajectoryFilter')
)


process.pixellayerpairs = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('PixelLayerPairs')
)


process.pixellayertriplets = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('PixelLayerTriplets')
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.rings = cms.ESProducer("RingMakerESProducer",
    DumpDetIds = cms.untracked.bool(False),
    ComponentName = cms.string(''),
    RingAsciiFileName = cms.untracked.string('rings.dat'),
    DetIdsDumpFileName = cms.untracked.string('tracker_detids.dat'),
    WriteOutRingsToAsciiFile = cms.untracked.bool(False),
    Configuration = cms.untracked.string('FULL')
)


process.roads = cms.ESProducer("RoadMapMakerESProducer",
    GeometryStructure = cms.string('FullDetector'),
    ComponentName = cms.string(''),
    RingsLabel = cms.string(''),
    WriteOutRoadMapToAsciiFile = cms.untracked.bool(False),
    SeedingType = cms.string('FourRingSeeds'),
    RoadMapAsciiFile = cms.untracked.string('roads.dat')
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiPixelQualityFromDbRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        ))
)


process.siPixelTemplateDBObjectESProducer = cms.ESProducer("SiPixelTemplateDBObjectESProducer")


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    printDebug = cms.untracked.bool(False),
    appendToDataLabel = cms.string(''),
    APVGain = cms.VPSet(cms.PSet(
        Record = cms.string('SiStripApvGainRcd'),
        NormalizationFactor = cms.untracked.double(1.0),
        Label = cms.untracked.string('')
    ), 
        cms.PSet(
            Record = cms.string('SiStripApvGain2Rcd'),
            NormalizationFactor = cms.untracked.double(1.0),
            Label = cms.untracked.string('')
        )),
    AutomaticNormalization = cms.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        record = cms.string('SiStripLatencyRcd'),
        label = cms.untracked.string('')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        record = cms.string('SiStripLorentzAngleRcd'),
        label = cms.untracked.string('deconvolution')
    ),
    LorentzAnglePeakMode = cms.PSet(
        record = cms.string('SiStripLorentzAngleRcd'),
        label = cms.untracked.string('peak')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    appendToDataLabel = cms.string(''),
    PrintDebugOutput = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetVOffRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        ))
)


process.siStripQualityESProducerUnbiased = cms.ESProducer("SiStripQualityESProducer",
    appendToDataLabel = cms.string('unbiased'),
    PrintDebugOutput = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetCablingRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ))
)


process.simpleSecondaryVertex2Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.simpleSecondaryVertex3Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.softElectron = cms.ESProducer("ElectronTaggerESProducer",
    ipSign = cms.string('any')
)


process.softLeptonByIP3d = cms.ESProducer("LeptonTaggerByIPESProducer",
    use3d = cms.bool(True),
    ipSign = cms.string('any')
)


process.softLeptonByPt = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('any')
)


process.softMuon = cms.ESProducer("MuonTaggerESProducer",
    ipSign = cms.string('any')
)


process.softMuonNoIP = cms.ESProducer("MuonTaggerNoIPESProducer",
    ipSign = cms.string('any')
)


process.stripPairElectronSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    TID = cms.PSet(
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("tripletElectronClusterMask"),
        maxRing = cms.int32(2)
    ),
    ComponentName = cms.string('stripPairElectronSeedLayers'),
    layerList = cms.vstring('TIB1+TIB2', 
        'TIB1+TID1_pos', 
        'TIB1+TID1_neg', 
        'TID2_pos+TID3_pos', 
        'TID2_neg+TID3_neg', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC3_pos+TEC5_pos', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC3_neg+TEC5_neg'),
    TEC = cms.PSet(
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("tripletElectronClusterMask"),
        maxRing = cms.int32(2)
    ),
    TIB = cms.PSet(
        skipClusters = cms.InputTag("tripletElectronClusterMask"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.templates = cms.ESProducer("PixelCPETemplateRecoESProducer",
    DoCosmics = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    ComponentName = cms.string('PixelCPETemplateReco'),
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    speed = cms.int32(-2),
    UseClusterSplitter = cms.bool(False)
)


process.tobTecFlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('tobTecFlexibleKFFittingSmoother'),
    standardFitter = cms.string('tobTecStepFitterSmoother'),
    looperFitter = cms.string('tobTecStepFitterSmootherForLoopers')
)


process.tobTecStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(16.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('tobTecStepChi2Est')
)


process.tobTecStepFitterSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(30),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('tobTecStepRKFitter'),
    MinNumberOfHits = cms.int32(8),
    Smoother = cms.string('tobTecStepRKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('tobTecStepFitterSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.tobTecStepFitterSmootherForLoopers = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(30),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('tobTecStepRKFitterForLoopers'),
    MinNumberOfHits = cms.int32(8),
    Smoother = cms.string('tobTecStepRKSmootherForLoopers'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('tobTecStepFitterSmootherForLoopers'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.tobTecStepInOutTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(4),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('tobTecStepInOutTrajectoryFilter')
)


process.tobTecStepRKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('tobTecStepRKFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(8)
)


process.tobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('tobTecStepRKFitterForLoopers'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    minHits = cms.int32(8)
)


process.tobTecStepRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(8),
    ComponentName = cms.string('tobTecStepRKSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.tobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(8),
    ComponentName = cms.string('tobTecStepRKSmootherForLoopers'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.tobTecStepSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    TOB = cms.PSet(
        skipClusters = cms.InputTag("tobTecStepClusters"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    ComponentName = cms.string('tobTecStepSeedLayers'),
    layerList = cms.vstring('TOB1+TOB2', 
        'TOB1+TEC1_pos', 
        'TOB1+TEC1_neg', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC4_pos+TEC5_pos', 
        'TEC5_pos+TEC6_pos', 
        'TEC6_pos+TEC7_pos', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC4_neg+TEC5_neg', 
        'TEC5_neg+TEC6_neg', 
        'TEC6_neg+TEC7_neg'),
    TEC = cms.PSet(
        minRing = cms.int32(5),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("tobTecStepClusters"),
        maxRing = cms.int32(5)
    )
)


process.tobTecStepTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('tobTecStepTrajectoryFilter'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    maxPtForLooperReconstruction = cms.double(0.7),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    lockHits = cms.bool(True),
    useSameTrajFilter = cms.bool(False),
    bestHitOnly = cms.bool(True),
    maxCand = cms.int32(2),
    clustersToSkip = cms.InputTag("tobTecStepClusters"),
    alwaysUseInvalidHits = cms.bool(False),
    minNrOfHitsForRebuild = cms.int32(4),
    ComponentName = cms.string('tobTecStepTrajectoryBuilder'),
    intermediateCleaning = cms.bool(True),
    inOutTrajectoryFilterName = cms.string('tobTecStepInOutTrajectoryFilter'),
    estimator = cms.string('tobTecStepChi2Est'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    requireSeedHitsInRebuild = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.tobTecStepTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
        minPt = cms.double(0.1),
        minNumberOfHits = cms.int32(13),
        minHitsMinPt = cms.int32(3),
        maxLostHitsFraction = cms.double(0.1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        nSigmaMinPt = cms.double(5.0),
        minNumberOfHitsPerLoop = cms.int32(4),
        minimumNumberOfHits = cms.int32(6),
        constantValueForLostHitsFractionFilter = cms.double(1.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('tobTecStepTrajectoryFilter')
)


process.trackCounting3D2nd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(2)
)


process.trackCounting3D3rd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(3)
)


process.trajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('TrajectoryCleanerBySharedHits'),
    fractionShared = cms.double(0.19),
    ValidHitBonus = cms.double(5.0),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    allowSharedFirstHit = cms.bool(True)
)


process.tripletElectronSeedLayers = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        skipClusters = cms.InputTag("pixelLessStepSeedClusterMask"),
        hitErrorRPhi = cms.double(0.0051)
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        skipClusters = cms.InputTag("pixelLessStepSeedClusterMask"),
        hitErrorRPhi = cms.double(0.0027)
    ),
    ComponentName = cms.string('tripletElectronSeedLayers')
)


process.ttrhbwor = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('Fake'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('Fake'),
    ComponentName = cms.string('WithoutRefit')
)


process.ttrhbwr = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('WithTrackAngle')
)


process.BTagRecord = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('JetTagComputerRecord'),
    firstValid = cms.vuint32(1)
)


process.CaloTPGTranscoder = cms.ESSource("CaloTPGTranscoderULUTs",
    read_Ascii_Compression_LUTs = cms.bool(False),
    LUTfactor = cms.vint32(1, 2, 5, 0),
    ietaLowerBound = cms.vint32(1, 18, 27, 29),
    hcalLUT1 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/outputLUTtranscoder_physics.dat'),
    hcalLUT2 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/TPGcalcDecompress2.txt'),
    read_Ascii_RCT_LUTs = cms.bool(False),
    ietaUpperBound = cms.vint32(17, 26, 28, 32),
    RCTLSB = cms.double(0.25),
    nominal_gain = cms.double(0.177),
    ZS = cms.vint32(4, 2, 1, 0)
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        authenticationSystem = cms.untracked.int32(0),
        connectionRetrialPeriod = cms.untracked.int32(10)
    ),
    BlobStreamerName = cms.untracked.string('TBufferBlobStreamingService'),
    toGet = cms.VPSet(),
    connect = cms.string('frontier://FrontierProd/CMS_COND_31X_GLOBALTAG'),
    globaltag = cms.string('GR_P_V43D::All')
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.eegeom = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd'),
    firstValid = cms.vuint32(1)
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    toGet = cms.untracked.vstring('GainWidths')
)


process.essourceEcalNextToDead = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalNextToDeadChannelRcd'),
    firstValid = cms.vuint32(1)
)


process.essourceEcalSev = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalSeverityLevelAlgoRcd'),
    firstValid = cms.vuint32(1)
)


process.essourceSev = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('HcalSeverityLevelComputerRcd'),
    firstValid = cms.vuint32(1)
)


process.magfield = cms.ESSource("XMLIdealGeometryESSource",
    geomXMLFiles = cms.vstring('Geometry/CMSCommonData/data/normal/cmsextent.xml', 
        'Geometry/CMSCommonData/data/cms.xml', 
        'Geometry/CMSCommonData/data/cmsMagneticField.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1103l.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldParameters_07_2pi.xml', 
        'Geometry/CMSCommonData/data/materials.xml'),
    rootNodeName = cms.string('cmsMagneticField:MAGF')
)


process.rpcconesrc = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1RPCConeBuilderRcd'),
    firstValid = cms.vuint32(1)
)


process.tpparams12 = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalTPGPhysicsConstRcd'),
    firstValid = cms.vuint32(1)
)


process.prefer("magfield")

process.ALCARECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_ALCARECOTkAlMuonIsolatedPA_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_pfMet_*_*', 
        'keep *_kt6PFJetsForRhoCorrection_rho_*', 
        'keep *_kt6PFJets_rho_*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *BeamSpot_offlineBeamSpot_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_conversions_*_*', 
        'keep *GsfTrack*_*_*_*', 
        'keep *_generator_*_*', 
        'keep *_addPileupInfo_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGsfElectron*_gsfElectron*_*_*', 
        'keep recoCaloClusters_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep recoPreshowerCluster*_*_*_*', 
        'drop reco*Clusters_hfEMClusters_*_*', 
        'drop reco*Clusters_pfPhotonTranslator_*_*', 
        'drop *_*Unclean*_*_*', 
        'drop *_*unclean*_*_*', 
        'drop *_*_*Unclean*_*', 
        'drop *_*_*unclean*_*', 
        'keep *_*_*_HLT', 
        'keep recoTracks_generalTracks_*_*', 
        'drop *EcalRecHit*_ecalRecHit_*_*', 
        'drop *EcalrecHit*_*ecalPreshowerRecHit*_*EcalRecHitsES*_*', 
        'drop *EcalRecHit*_reducedEcalRecHitsE*_*_*', 
        'keep *EcalRecHit*_alCaIsolatedElectrons_*_*', 
        'keep *EcalRecHit*_reducedEcalRecHitsES_alCaRecHitsES_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*', 
        'keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_GammaJetProd_*_*', 
        'keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_IsoProd_*_*', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*', 
        'keep *_hoCalibProducer_*_*', 
        'keep HOCalibVariabless_*_*_*', 
        'keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT', 
        'keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*', 
        'keep *_siPixelClustersForLumi_*_*', 
        'keep *_TriggerResults_*_HLT', 
        'drop *_MEtoEDMConverter_*_*' ) )
)

process.AODEventContent = cms.PSet(
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'drop L1GlobalTriggerObjectMapRecord_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.AODSIMEventContent = cms.PSet(
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'drop L1GlobalTriggerObjectMapRecord_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.AnomalousCellParameters = cms.PSet(
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BtiParametersBlock = cms.PSet(
    BtiParameters = cms.PSet(
        KACCTHETA = cms.int32(1),
        WEN8 = cms.int32(1),
        ACH = cms.int32(1),
        DEAD = cms.int32(31),
        ACL = cms.int32(2),
        PTMS20 = cms.int32(1),
        Debug = cms.untracked.int32(0),
        PTMS22 = cms.int32(1),
        PTMS23 = cms.int32(1),
        PTMS24 = cms.int32(1),
        PTMS25 = cms.int32(1),
        PTMS26 = cms.int32(1),
        PTMS27 = cms.int32(1),
        PTMS28 = cms.int32(1),
        PTMS29 = cms.int32(1),
        SET = cms.int32(7),
        RON = cms.bool(True),
        WEN2 = cms.int32(1),
        LL = cms.int32(2),
        LH = cms.int32(21),
        WEN3 = cms.int32(1),
        RE43 = cms.int32(2),
        WEN0 = cms.int32(1),
        RL = cms.int32(42),
        WEN1 = cms.int32(1),
        RH = cms.int32(61),
        LTS = cms.int32(3),
        CH = cms.int32(41),
        CL = cms.int32(22),
        PTMS15 = cms.int32(1),
        PTMS14 = cms.int32(1),
        PTMS17 = cms.int32(1),
        PTMS16 = cms.int32(1),
        PTMS11 = cms.int32(1),
        PTMS10 = cms.int32(1),
        PTMS13 = cms.int32(1),
        PTMS12 = cms.int32(1),
        XON = cms.bool(False),
        WEN7 = cms.int32(1),
        WEN4 = cms.int32(1),
        WEN5 = cms.int32(1),
        PTMS19 = cms.int32(1),
        PTMS18 = cms.int32(1),
        PTMS31 = cms.int32(0),
        PTMS30 = cms.int32(0),
        PTMS5 = cms.int32(1),
        PTMS4 = cms.int32(1),
        PTMS7 = cms.int32(1),
        PTMS6 = cms.int32(1),
        PTMS1 = cms.int32(0),
        PTMS0 = cms.int32(0),
        PTMS3 = cms.int32(0),
        WEN6 = cms.int32(1),
        PTMS2 = cms.int32(0),
        PTMS9 = cms.int32(1),
        PTMS8 = cms.int32(1),
        ST43 = cms.int32(42),
        AC2 = cms.int32(3),
        AC1 = cms.int32(0),
        KMAX = cms.int32(64),
        PTMS21 = cms.int32(1)
    )
)

process.CSCCommonTrigger = cms.PSet(
    MaxBX = cms.int32(9),
    MinBX = cms.int32(3)
)

process.CSCSegAlgoDF = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoDF'),
    parameters_per_chamber_type = cms.vint32(3, 1, 2, 2, 1, 
        2, 1, 2, 1),
    algo_psets = cms.VPSet(cms.PSet(
        tanThetaMax = cms.double(1.2),
        maxRatioResidualPrune = cms.double(3.0),
        dPhiFineMax = cms.double(0.025),
        tanPhiMax = cms.double(0.5),
        dXclusBoxMax = cms.double(8.0),
        preClustering = cms.untracked.bool(False),
        chi2Max = cms.double(5000.0),
        minHitsPerSegment = cms.int32(3),
        minHitsForPreClustering = cms.int32(10),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(8.0),
        nHitsPerClusterIsShower = cms.int32(20),
        CSCSegmentDebug = cms.untracked.bool(False),
        Pruning = cms.untracked.bool(False),
        dYclusBoxMax = cms.double(8.0)
    ), 
        cms.PSet(
            tanThetaMax = cms.double(2.0),
            maxRatioResidualPrune = cms.double(3.0),
            dPhiFineMax = cms.double(0.025),
            tanPhiMax = cms.double(0.8),
            dXclusBoxMax = cms.double(8.0),
            preClustering = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            minHitsPerSegment = cms.int32(3),
            minHitsForPreClustering = cms.int32(10),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(12.0),
            nHitsPerClusterIsShower = cms.int32(20),
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            dYclusBoxMax = cms.double(12.0)
        ), 
        cms.PSet(
            tanThetaMax = cms.double(1.2),
            maxRatioResidualPrune = cms.double(3.0),
            dPhiFineMax = cms.double(0.025),
            tanPhiMax = cms.double(0.5),
            dXclusBoxMax = cms.double(8.0),
            preClustering = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            minHitsPerSegment = cms.int32(3),
            minHitsForPreClustering = cms.int32(30),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(8.0),
            nHitsPerClusterIsShower = cms.int32(20),
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            dYclusBoxMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoSK = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoSK'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        dPhiFineMax = cms.double(0.025),
        verboseInfo = cms.untracked.bool(True),
        chi2Max = cms.double(99999.0),
        dPhiMax = cms.double(0.003),
        wideSeg = cms.double(3.0),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(8.0),
        dRPhiMax = cms.double(8.0)
    ), 
        cms.PSet(
            dPhiFineMax = cms.double(0.025),
            verboseInfo = cms.untracked.bool(True),
            chi2Max = cms.double(99999.0),
            dPhiMax = cms.double(0.025),
            wideSeg = cms.double(3.0),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoST = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1', 
        'ME4/2'),
    algo_name = cms.string('CSCSegAlgoST'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        maxRatioResidualPrune = cms.double(3),
        yweightPenalty = cms.double(1.5),
        maxRecHitsInCluster = cms.int32(20),
        preClusteringUseChaining = cms.bool(True),
        ForceCovariance = cms.bool(False),
        hitDropLimit6Hits = cms.double(0.3333),
        NormChi2Cut2D = cms.double(20.0),
        BPMinImprovement = cms.double(10000.0),
        Covariance = cms.double(0.0),
        tanPhiMax = cms.double(0.5),
        onlyBestSegment = cms.bool(False),
        SeedBig = cms.double(0.0015),
        dRPhiFineMax = cms.double(8.0),
        SeedSmall = cms.double(0.0002),
        curvePenalty = cms.double(2.0),
        dXclusBoxMax = cms.double(4.0),
        BrutePruning = cms.bool(True),
        curvePenaltyThreshold = cms.double(0.85),
        CorrectTheErrors = cms.bool(True),
        hitDropLimit4Hits = cms.double(0.6),
        useShowering = cms.bool(False),
        CSCDebug = cms.untracked.bool(False),
        yweightPenaltyThreshold = cms.double(1.0),
        tanThetaMax = cms.double(1.2),
        NormChi2Cut3D = cms.double(10.0),
        minHitsPerSegment = cms.int32(3),
        ForceCovarianceAll = cms.bool(False),
        dPhiFineMax = cms.double(0.025),
        prePrunLimit = cms.double(3.17),
        hitDropLimit5Hits = cms.double(0.8),
        preClustering = cms.bool(True),
        prePrun = cms.bool(True),
        maxDPhi = cms.double(999.0),
        maxDTheta = cms.double(999.0),
        Pruning = cms.bool(True),
        dYclusBoxMax = cms.double(8.0)
    ), 
        cms.PSet(
            maxRatioResidualPrune = cms.double(3),
            yweightPenalty = cms.double(1.5),
            maxRecHitsInCluster = cms.int32(24),
            preClusteringUseChaining = cms.bool(True),
            ForceCovariance = cms.bool(False),
            hitDropLimit6Hits = cms.double(0.3333),
            NormChi2Cut2D = cms.double(20.0),
            BPMinImprovement = cms.double(10000.0),
            Covariance = cms.double(0.0),
            tanPhiMax = cms.double(0.5),
            onlyBestSegment = cms.bool(False),
            SeedBig = cms.double(0.0015),
            dRPhiFineMax = cms.double(8.0),
            SeedSmall = cms.double(0.0002),
            curvePenalty = cms.double(2.0),
            dXclusBoxMax = cms.double(4.0),
            BrutePruning = cms.bool(True),
            curvePenaltyThreshold = cms.double(0.85),
            CorrectTheErrors = cms.bool(True),
            hitDropLimit4Hits = cms.double(0.6),
            useShowering = cms.bool(False),
            CSCDebug = cms.untracked.bool(False),
            yweightPenaltyThreshold = cms.double(1.0),
            tanThetaMax = cms.double(1.2),
            NormChi2Cut3D = cms.double(10.0),
            minHitsPerSegment = cms.int32(3),
            ForceCovarianceAll = cms.bool(False),
            dPhiFineMax = cms.double(0.025),
            prePrunLimit = cms.double(3.17),
            hitDropLimit5Hits = cms.double(0.8),
            preClustering = cms.bool(True),
            prePrun = cms.bool(True),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            Pruning = cms.bool(True),
            dYclusBoxMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoTC = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoTC'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        dPhiFineMax = cms.double(0.02),
        verboseInfo = cms.untracked.bool(True),
        SegmentSorting = cms.int32(1),
        chi2Max = cms.double(6000.0),
        dPhiMax = cms.double(0.003),
        chi2ndfProbMin = cms.double(0.0001),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(6.0),
        dRPhiMax = cms.double(1.2)
    ), 
        cms.PSet(
            dPhiFineMax = cms.double(0.013),
            verboseInfo = cms.untracked.bool(True),
            SegmentSorting = cms.int32(1),
            chi2Max = cms.double(6000.0),
            dPhiMax = cms.double(0.00198),
            chi2ndfProbMin = cms.double(0.0001),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(0.6)
        ))
)

process.CSCTimingExtractorBlock = cms.PSet(
    CSCTimingParameters = cms.PSet(
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTsegments = cms.InputTag("dt4DSegments"),
            DTradius = cms.double(0.01),
            TightMatchDT = cms.bool(False),
            TightMatchCSC = cms.bool(True)
        ),
        CSCsegments = cms.InputTag("csc2DSegments"),
        CSCStripTimeOffset = cms.double(0.0),
        CSCStripError = cms.double(7.0),
        UseStripTime = cms.bool(True),
        debug = cms.bool(False),
        CSCWireError = cms.double(8.6),
        CSCWireTimeOffset = cms.double(0.0),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite'),
            RPCLayers = cms.bool(True)
        ),
        PruneCut = cms.double(9.0),
        UseWireTime = cms.bool(True)
    )
)

process.ChargeSignificanceTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ChargeSignificanceTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0)
)

process.CkfBaseTrajectoryFilter_block = cms.PSet(
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minNumberOfHits = cms.int32(13),
    minHitsMinPt = cms.int32(3),
    maxLostHitsFraction = cms.double(0.1),
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    maxLostHits = cms.int32(999),
    maxNumberOfHits = cms.int32(100),
    maxConsecLostHits = cms.int32(1),
    nSigmaMinPt = cms.double(5.0),
    minNumberOfHitsPerLoop = cms.int32(4),
    minimumNumberOfHits = cms.int32(5),
    constantValueForLostHitsFractionFilter = cms.double(1.0),
    chargeSignificance = cms.double(-1.0)
)

process.CombIsoCuts = cms.PSet(
    IsCombinedIso = cms.untracked.bool(True),
    IsoCut03 = cms.untracked.double(0.15),
    IsRelativeIso = cms.untracked.bool(True),
    ptThreshold = cms.untracked.double(0.0)
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CompositeTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet()
)

process.CondDBSetup = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        authenticationSystem = cms.untracked.int32(0),
        connectionRetrialPeriod = cms.untracked.int32(10)
    )
)

process.DATAMIXEREventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep CaloTowersSorted_calotoweroptmaker_*_*', 
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*', 
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*', 
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*', 
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*', 
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*', 
        'keep HBHEDataFramesSorted_hcalDigis_*_*', 
        'keep HFDataFramesSorted_hcalDigis_*_*', 
        'keep HODataFramesSorted_hcalDigis_*_*', 
        'keep ZDCDataFramesSorted_hcalDigis_*_*', 
        'keep CastorDataFramesSorted_castorDigis_*_*', 
        'keep EBDigiCollection_ecalDigis_*_*', 
        'keep EEDigiCollection_ecalDigis_*_*', 
        'keep ESDigiCollection_ecalPreshowerDigis_*_*')
)

process.DF_ME1234_1 = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(1.2),
    tanPhiMax = cms.double(0.5),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(10),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(8.0)
)

process.DF_ME1234_2 = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(2.0),
    tanPhiMax = cms.double(0.8),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(10),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(12.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(12.0)
)

process.DF_ME1A = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(1.2),
    tanPhiMax = cms.double(0.5),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(30),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(8.0)
)

process.DQMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConverter_*_*')
)

process.DTCombinatorialPatternReco2DAlgo_LinearDriftFromDB = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        perform_delta_rejecting = cms.bool(True),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco')
)

process.DTCombinatorialPatternReco2DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        perform_delta_rejecting = cms.bool(False),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(100.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(100.0),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco')
)

process.DTCombinatorialPatternReco4DAlgo_LinearDriftFromDB = cms.PSet(
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(True),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(True),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string(''),
                    doWirePropCorrection = cms.bool(True),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(2),
            perform_delta_rejecting = cms.bool(True),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(1.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(0.9),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        perform_delta_rejecting = cms.bool(True),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    )
)

process.DTCombinatorialPatternReco4DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(False),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(False),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string('cosmics'),
                    doWirePropCorrection = cms.bool(False),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(1),
            perform_delta_rejecting = cms.bool(False),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(100.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(100.0),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        perform_delta_rejecting = cms.bool(False),
        nSharedHitsMax = cms.int32(2),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    )
)

process.DTLinearDriftAlgo_CosmicData = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        debug = cms.untracked.bool(False),
        maxTime = cms.double(420.0),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        )
    ),
    recAlgo = cms.string('DTLinearDriftAlgo')
)

process.DTLinearDriftFromDBAlgo = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(True),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(True),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string(''),
            doWirePropCorrection = cms.bool(True),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo')
)

process.DTLinearDriftFromDBAlgo_CosmicData = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(False),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo')
)

process.DTTPGMapBlock = cms.PSet(
    DTTPGMap = cms.untracked.PSet(
        wh0st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se4 = cms.untracked.vint32(72, 48, 72, 18),
        whm2st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se3 = cms.untracked.vint32(72, 48, 72, 18),
        whm1st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        whm2st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        whm2st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        whm1st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm1st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        whm2st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh1st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm1st1se3 = cms.untracked.vint32(50, 48, 50, 13),
        whm1st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se4 = cms.untracked.vint32(60, 48, 60, 15),
        wh1st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        wh1st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        wh2st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        whm2st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se1 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se2 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se4 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        wh0st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh0st4se4 = cms.untracked.vint32(72, 0, 72, 18),
        wh0st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh2st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        wh2st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh2st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh2st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se5 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se7 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st4se8 = cms.untracked.vint32(92, 0, 92, 23),
        whm1st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        whm1st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se7 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st1se8 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st1se11 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se10 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se12 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st4se6 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st1se5 = cms.untracked.vint32(50, 58, 50, 13),
        whm1st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se3 = cms.untracked.vint32(60, 48, 60, 15),
        whm1st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se7 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se6 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se4 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se2 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se1 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh2st2se9 = cms.untracked.vint32(60, 58, 60, 15),
        wh2st2se8 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh0st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh0st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        whm1st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        whm2st1se3 = cms.untracked.vint32(50, 58, 50, 13),
        wh0st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st4se10 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st4se11 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh1st4se13 = cms.untracked.vint32(72, 0, 72, 18),
        wh1st4se14 = cms.untracked.vint32(60, 0, 60, 15),
        wh1st1se4 = cms.untracked.vint32(50, 48, 50, 13),
        wh1st1se7 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se6 = cms.untracked.vint32(50, 58, 50, 13),
        wh1st1se9 = cms.untracked.vint32(50, 58, 50, 13),
        whm2st3se10 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st2se3 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st3se11 = cms.untracked.vint32(72, 58, 72, 18),
        whm2st3se12 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se12 = cms.untracked.vint32(92, 0, 92, 23),
        wh1st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st4se9 = cms.untracked.vint32(48, 0, 48, 12),
        wh1st3se8 = cms.untracked.vint32(72, 58, 72, 18),
        wh0st4se2 = cms.untracked.vint32(96, 0, 96, 24),
        wh2st3se1 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se2 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se3 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se4 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se5 = cms.untracked.vint32(72, 58, 72, 18),
        wh2st3se6 = cms.untracked.vint32(72, 58, 72, 18),
        wh1st4se3 = cms.untracked.vint32(96, 0, 96, 24),
        whm2st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        wh1st4se1 = cms.untracked.vint32(96, 0, 96, 24),
        whm1st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se11 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se10 = cms.untracked.vint32(60, 58, 60, 15),
        whm2st2se12 = cms.untracked.vint32(60, 58, 60, 15),
        wh0st2se5 = cms.untracked.vint32(60, 58, 60, 15),
        whm1st3se9 = cms.untracked.vint32(72, 58, 72, 18),
        whm1st3se8 = cms.untracked.vint32(72, 58, 72, 18)
    )
)

process.DTTPGParametersBlock = cms.PSet(
    DTTPGParameters = cms.PSet(
        SectCollParameters = cms.PSet(
            SCCSP5 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCECF4 = cms.bool(False),
            SCCSP1 = cms.int32(0),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCCSP4 = cms.int32(0),
            SCECF1 = cms.bool(False),
            Debug = cms.untracked.bool(False)
        ),
        Debug = cms.untracked.bool(False),
        TUParameters = cms.PSet(
            TracoParameters = cms.PSet(
                SPRGCOMP = cms.int32(2),
                FHTMSK = cms.int32(0),
                DD = cms.int32(18),
                SSLMSK = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                Debug = cms.untracked.int32(0),
                FSLMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SHTMSK = cms.int32(0),
                TRGENB3 = cms.int32(1),
                SHISM = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                FLTMSK = cms.int32(1),
                LTS = cms.int32(0),
                SLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                TRGENB9 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                FHTPRF = cms.int32(1),
                LTF = cms.int32(0),
                TRGENB1 = cms.int32(1),
                TRGENB0 = cms.int32(1),
                FHISM = cms.int32(0),
                TRGENB2 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                REUSEO = cms.int32(1),
                REUSEI = cms.int32(1),
                BTIC = cms.int32(32)
            ),
            TSPhiParameters = cms.PSet(
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSTREN9 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN0 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSMCCE2 = cms.bool(False),
                TSTREN19 = cms.bool(True),
                TSMCCE1 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSSMSK2 = cms.int32(312),
                TSTREN10 = cms.bool(True),
                TSMMSK2 = cms.int32(312),
                TSMMSK1 = cms.int32(312),
                TSMHSP = cms.int32(1),
                TSSNOE2 = cms.bool(False),
                TSSNOE1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSCCEC = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMHTE2 = cms.bool(False),
                Debug = cms.untracked.bool(False),
                TSSHTE2 = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSSHTE1 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSSNOEC = cms.bool(False),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSSHTEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSMHTEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSSGS2 = cms.int32(1),
                TSMNOEC = cms.bool(False),
                TSSGS1 = cms.int32(1),
                TSTREN18 = cms.bool(True),
                TSMHTE1 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            BtiParameters = cms.PSet(
                KACCTHETA = cms.int32(1),
                WEN8 = cms.int32(1),
                ACH = cms.int32(1),
                DEAD = cms.int32(31),
                ACL = cms.int32(2),
                PTMS20 = cms.int32(1),
                Debug = cms.untracked.int32(0),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                SET = cms.int32(7),
                RON = cms.bool(True),
                WEN2 = cms.int32(1),
                LL = cms.int32(2),
                LH = cms.int32(21),
                WEN3 = cms.int32(1),
                RE43 = cms.int32(2),
                WEN0 = cms.int32(1),
                RL = cms.int32(42),
                WEN1 = cms.int32(1),
                RH = cms.int32(61),
                LTS = cms.int32(3),
                CH = cms.int32(41),
                CL = cms.int32(22),
                PTMS15 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS10 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS12 = cms.int32(1),
                XON = cms.bool(False),
                WEN7 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS31 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS5 = cms.int32(1),
                PTMS4 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS1 = cms.int32(0),
                PTMS0 = cms.int32(0),
                PTMS3 = cms.int32(0),
                WEN6 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS9 = cms.int32(1),
                PTMS8 = cms.int32(1),
                ST43 = cms.int32(42),
                AC2 = cms.int32(3),
                AC1 = cms.int32(0),
                KMAX = cms.int32(64),
                PTMS21 = cms.int32(1)
            ),
            LutParameters = cms.PSet(
                WHEEL = cms.untracked.int32(-1),
                Debug = cms.untracked.bool(False),
                BTIC = cms.untracked.int32(0),
                XCN = cms.untracked.double(0),
                D = cms.untracked.double(0)
            )
        )
    )
)

process.DTTimingExtractorBlock = cms.PSet(
    DTTimingParameters = cms.PSet(
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTsegments = cms.InputTag("dt4DSegments"),
            DTradius = cms.double(0.01),
            TightMatchDT = cms.bool(False),
            TightMatchCSC = cms.bool(True)
        ),
        HitError = cms.double(6.0),
        DoWireCorr = cms.bool(True),
        PruneCut = cms.double(10000.0),
        DTsegments = cms.InputTag("dt4DSegments"),
        DropTheta = cms.bool(True),
        RequireBothProjections = cms.bool(False),
        HitsMin = cms.int32(3),
        DTTimeOffset = cms.double(0.0),
        debug = cms.bool(False),
        UseSegmentT0 = cms.bool(False),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite'),
            RPCLayers = cms.bool(True)
        )
    )
)

process.DefaultAlgorithms = cms.PSet(
    CutToAvoidSignal = cms.double(2.0),
    slopeY = cms.int32(4),
    slopeX = cms.int32(3),
    PedestalSubtractionFedMode = cms.bool(False),
    Fraction = cms.double(0.2),
    minStripsToFit = cms.uint32(4),
    consecThreshold = cms.uint32(5),
    hitStripThreshold = cms.uint32(40),
    Deviation = cms.uint32(25),
    CommonModeNoiseSubtractionMode = cms.string('IteratedMedian'),
    filteredBaselineDerivativeSumSquare = cms.double(30),
    ApplyBaselineCleaner = cms.bool(True),
    doAPVRestore = cms.bool(True),
    TruncateInSuppressor = cms.bool(True),
    restoreThreshold = cms.double(0.5),
    APVInspectMode = cms.string('BaselineFollower'),
    ForceNoRestore = cms.bool(False),
    useRealMeanCM = cms.bool(False),
    ApplyBaselineRejection = cms.bool(True),
    DeltaCMThreshold = cms.uint32(20),
    nSigmaNoiseDerTh = cms.uint32(4),
    nSaturatedStrip = cms.uint32(2),
    SiStripFedZeroSuppressionMode = cms.uint32(4),
    useCMMeanMap = cms.bool(False),
    SelfSelectRestoreAlgo = cms.bool(False),
    distortionThreshold = cms.uint32(20),
    filteredBaselineMax = cms.double(6),
    Iterations = cms.int32(3),
    CleaningSequence = cms.uint32(1),
    nSmooth = cms.uint32(9),
    APVRestoreMode = cms.string('BaselineFollower'),
    MeanCM = cms.int32(0)
)

process.DefaultClusterizer = cms.PSet(
    ChannelThreshold = cms.double(2.0),
    MaxSequentialBad = cms.uint32(1),
    Algorithm = cms.string('ThreeThresholdAlgorithm'),
    MaxSequentialHoles = cms.uint32(0),
    MaxAdjacentBad = cms.uint32(0),
    QualityLabel = cms.string(''),
    SeedThreshold = cms.double(3.0),
    RemoveApvShots = cms.bool(True),
    ClusterThreshold = cms.double(5.0)
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*')
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*')
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*')
)

process.FEVTDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*' ) )
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*', 
        'keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*', 
        'keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.FEVTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*' ) )
)

process.FEVTHLTALLEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep *_*_*_HLT' ) )
)

process.FEVTSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*' ) )
)

process.GENRAWEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_logErrorHarvester_*_*')
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceLHE = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_externalLHEProducer_LHEScriptOutput_*')
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GenericTriggerSelectionParameters = cms.PSet(
    andOrHlt = cms.bool(True),
    hltPaths = cms.vstring('HLT_IsoMu*_eta*_LooseIsoPFTau*_v*', 
        'HLT_DoubleIsoPFTau*_Trk*_eta*_v*'),
    andOr = cms.bool(False),
    hltInputTag = cms.InputTag("TriggerResults","","HLT"),
    errorReplyHlt = cms.bool(False),
    verbosityLevel = cms.uint32(0),
    dbLabel = cms.string('PFTauDQMTrigger')
)

process.GlobalMuonRefitter = cms.PSet(
    TrackerSkipSection = cms.int32(-1),
    MuonHitsOption = cms.int32(1),
    Smoother = cms.string('KFSmootherForRefitInsideOut'),
    RefitDirection = cms.string('insideOut'),
    CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    TrackerSkipSystem = cms.int32(-1),
    DoPredictionsOnly = cms.bool(False),
    Chi2ProbabilityCut = cms.double(30.0),
    PropDirForCosmics = cms.bool(False),
    HitThreshold = cms.int32(1),
    TrackerRecHitBuilder = cms.string('WithTrackAngle'),
    DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
    Chi2CutCSC = cms.double(1.0),
    Chi2CutRPC = cms.double(1.0),
    Fitter = cms.string('KFFitterForRefitInsideOut'),
    RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    DYTthrs = cms.vint32(10, 5),
    RefitRPCHits = cms.bool(True),
    Chi2CutDT = cms.double(30.0),
    PtCut = cms.double(1.0),
    SkipStation = cms.int32(-1)
)

process.GlobalMuonTrackMatcher = cms.PSet(
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    )
)

process.GlobalTrajectoryBuilderCommon = cms.PSet(
    MuonTrackingRegionBuilder = cms.PSet(
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        OnDemand = cms.double(-1.0),
        Rescale_Dz = cms.double(3.0),
        Eta_min = cms.double(0.1),
        Rescale_phi = cms.double(3.0),
        Eta_fixed = cms.double(0.2),
        DeltaZ_Region = cms.double(15.9),
        MeasurementTrackerName = cms.string(''),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        vertexCollection = cms.InputTag("pixelVertices"),
        Phi_fixed = cms.double(0.2),
        DeltaR = cms.double(0.2),
        EscapePt = cms.double(1.5),
        UseFixedRegion = cms.bool(False),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        Rescale_eta = cms.double(3.0),
        Phi_min = cms.double(0.1),
        UseVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    ),
    ScaleTECyFactor = cms.double(-1.0),
    GlbRefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        MuonHitsOption = cms.int32(1),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('GlbMuKFFitter'),
        DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        DYTthrs = cms.vint32(30, 15),
        Chi2CutCSC = cms.double(150.0),
        Chi2CutDT = cms.double(10.0),
        RefitRPCHits = cms.bool(True),
        PtCut = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        SkipStation = cms.int32(-1),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ScaleTECxFactor = cms.double(-1.0),
    TrackerRecHitBuilder = cms.string('WithTrackAngle'),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    RefitRPCHits = cms.bool(True),
    PCut = cms.double(2.5),
    TrackTransformer = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True)
    ),
    PtCut = cms.double(1.0),
    TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
)

process.HLTDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep *_logErrorHarvester_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = cms.vstring( ('drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = cms.vstring( ('drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'drop L1GlobalTriggerObjectMapRecord_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HcalNoiseParameterSet = cms.PSet(
    lMinRatio = cms.double(-999.0),
    lMaxHighEHitTime = cms.double(9999.0),
    pMinHighEHitTime = cms.double(-4.0),
    lMaxLowEHitTime = cms.double(9999.0),
    TS4TS5EnergyThreshold = cms.double(50),
    lMinHPDHits = cms.int32(17),
    tMinRBXHits = cms.int32(50),
    TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400, 4000),
    minEZeros = cms.double(10.0),
    pMinRBXHits = cms.int32(20),
    tMinHPDHits = cms.int32(16),
    minRecHitE = cms.double(1.5),
    hlMaxRBXEMF = cms.double(0.01),
    pMinEEMF = cms.double(10.0),
    pMaxRatio = cms.double(0.85),
    minEEMF = cms.double(50.0),
    pMaxHighEHitTime = cms.double(5.0),
    pMaxLowEHitTime = cms.double(6.0),
    minHighHitE = cms.double(25.0),
    lMinZeros = cms.int32(10),
    lMinRBXHits = cms.int32(999),
    tMaxRatio = cms.double(999.0),
    minLowHitE = cms.double(10.0),
    pMinRatio = cms.double(0.75),
    pMaxRBXEMF = cms.double(0.02),
    pMinE = cms.double(40.0),
    pMaxHPDEMF = cms.double(0.02),
    tMinHighEHitTime = cms.double(-7.0),
    TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.4, -0.2, -0.08, 
        0, 0.1),
    lMaxRatio = cms.double(999.0),
    lMinHighEHitTime = cms.double(-9999.0),
    pMinEZeros = cms.double(5.0),
    pMinERatio = cms.double(25.0),
    pMinZeros = cms.int32(4),
    tMinRatio = cms.double(-999.0),
    TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72, 0.72),
    pMinLowEHitTime = cms.double(-6.0),
    pMinHPDHits = cms.int32(10),
    lMinLowEHitTime = cms.double(-9999.0),
    tMinHPDNoOtherHits = cms.int32(9),
    minERatio = cms.double(50.0),
    tMinLowEHitTime = cms.double(-9999.0),
    tMaxHighEHitTime = cms.double(6.0),
    tMinZeros = cms.int32(8),
    lMinHPDNoOtherHits = cms.int32(10),
    TS4TS5LowerThreshold = cms.vdouble(100, 120, 150, 200, 300, 
        400, 500),
    tMaxLowEHitTime = cms.double(9999.0),
    pMinHPDNoOtherHits = cms.int32(7),
    hlMaxHPDEMF = cms.double(-9999.0)
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.JPTZSPCorrectorICone5 = cms.PSet(
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(0),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True)
)

process.JetIDParams = cms.PSet(
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True)
)

process.L1ExtraInputTagSet = cms.PSet(
    L1ExtraInputTags = cms.PSet(
        TagL1ExtraMuon = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraEtMissMET = cms.InputTag("dqmL1ExtraParticles","MET"),
        TagL1ExtraNoIsoEG = cms.InputTag("dqmL1ExtraParticles","NonIsolated"),
        TagL1ExtraTauJet = cms.InputTag("dqmL1ExtraParticles","Tau"),
        TagL1ExtraForJet = cms.InputTag("dqmL1ExtraParticles","Forward"),
        TagL1ExtraEtMissHTM = cms.InputTag("dqmL1ExtraParticles","MHT"),
        TagL1ExtraHFRings = cms.InputTag("dqmL1ExtraParticles"),
        TagL1ExtraCenJet = cms.InputTag("dqmL1ExtraParticles","Central"),
        TagL1ExtraIsoEG = cms.InputTag("dqmL1ExtraParticles","Isolated")
    )
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*')
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*')
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.LHEEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_externalLHEProducer_LHEScriptOutput_*')
)

process.LutParametersBlock = cms.PSet(
    LutParameters = cms.PSet(
        WHEEL = cms.untracked.int32(-1),
        Debug = cms.untracked.bool(False),
        BTIC = cms.untracked.int32(0),
        XCN = cms.untracked.double(0),
        D = cms.untracked.double(0)
    )
)

process.METSignificance_params = cms.PSet(
    resolutionsEra = cms.string('Spring10'),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    PF_PhiResType1 = cms.vdouble(0.002),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MIXINGMODULEEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_cfWriter_*_*')
)

process.MIdIsoExtractorPSetBlock = cms.PSet(
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    ecalDepositName = cms.string('ecal'),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    hcalDepositName = cms.string('hcal'),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    trackDepositName = cms.string('tracker'),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho')
)

process.MIsoCaloExtractorByAssociatorHitsBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    DR_Max = cms.double(1.0),
    DepositInstanceLabels = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    Noise_HE = cms.double(0.2),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Threshold_H = cms.double(0.1),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Noise_HO = cms.double(0.2),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    DepositLabel = cms.untracked.string('Cal'),
    UseRecHitsFlag = cms.bool(True),
    Threshold_HO = cms.double(0.1),
    Noise_EE = cms.double(0.1),
    Noise_EB = cms.double(0.025),
    DR_Veto_H = cms.double(0.1),
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    Noise_HB = cms.double(0.2),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_HO = cms.double(0.1),
    Threshold_E = cms.double(0.025)
)

process.MIsoCaloExtractorByAssociatorTowersBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    DR_Max = cms.double(1.0),
    DepositInstanceLabels = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    Noise_HE = cms.double(0.2),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Threshold_H = cms.double(0.5),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Noise_HO = cms.double(0.2),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    DepositLabel = cms.untracked.string('Cal'),
    UseRecHitsFlag = cms.bool(False),
    Threshold_HO = cms.double(0.5),
    Noise_EE = cms.double(0.1),
    Noise_EB = cms.double(0.025),
    DR_Veto_H = cms.double(0.1),
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    Noise_HB = cms.double(0.2),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_HO = cms.double(0.1),
    Threshold_E = cms.double(0.2)
)

process.MIsoCaloExtractorEcalBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(1.0),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(0.0)
)

process.MIsoCaloExtractorHLTBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(1.5),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(1.0)
)

process.MIsoCaloExtractorHcalBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(0.0),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(1.0)
)

process.MIsoDepositGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("globalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('TrackCollection')
)

process.MIsoDepositGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("globalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('TrackCollection')
)

process.MIsoDepositParamGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("muons1stStep"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoJetExtractorBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(0.5),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.5),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    ExcludeMuonVeto = cms.bool(True),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    ComponentName = cms.string('JetExtractor'),
    DR_Max = cms.double(1.0),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    JetCollectionLabel = cms.InputTag("ak5CaloJets"),
    DR_Veto = cms.double(0.1),
    Threshold = cms.double(5.0)
)

process.MIsoTrackAssociatorDefault = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackAssociatorHits = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    )
)

process.MIsoTrackAssociatorJets = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(0.5),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.5),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackAssociatorTowers = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackExtractorBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("generalTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MIsoTrackExtractorCtfBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("generalTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MIsoTrackExtractorGsBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MaxConsecLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxConsecLostHitsTrajectoryFilter'),
    maxConsecLostHits = cms.int32(1)
)

process.MaxHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxHitsTrajectoryFilter'),
    maxNumberOfHits = cms.int32(100)
)

process.MaxLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxLostHitsTrajectoryFilter'),
    maxLostHits = cms.int32(1)
)

process.MinHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinHitsTrajectoryFilter'),
    minimumNumberOfHits = cms.int32(5)
)

process.MinPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinPtTrajectoryFilter'),
    nSigmaMinPt = cms.double(5.0),
    minHitsMinPt = cms.int32(3),
    minPt = cms.double(1.0)
)

process.MuonCaloCompatibilityBlock = cms.PSet(
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    )
)

process.MuonCosmicCompatibilityParameters = cms.PSet(
    CosmicCompFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        deltaPt = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        offTimeNegTight = cms.double(-20.0),
        maxvertRho = cms.double(5),
        ipCut = cms.double(0.02),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        angleCut = cms.double(0.1),
        hIpTrvProb = cms.double(0.5),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons1stStep")),
        maxdxyTight = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        maxdxyTightMult = cms.double(1.0),
        corrTimeNeg = cms.double(-10),
        offTimePosTight = cms.double(25.0),
        maxdzLooseMult = cms.double(0.1),
        maxvertZ = cms.double(20),
        nChamberMatches = cms.int32(1),
        corrTimePos = cms.double(5),
        offTimeNegLoose = cms.double(-15.0),
        maxdxyLooseMult = cms.double(0.01),
        offTimePosTightMult = cms.double(25.0),
        offTimePosLoose = cms.double(15.0),
        largedxyMult = cms.double(3.0),
        largedxy = cms.double(2.0),
        nTrackThreshold = cms.int32(3),
        maxdzTightMult = cms.double(10.0),
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        minvProb = cms.double(0.001),
        hIpTrdxy = cms.double(0.02),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        offTimePosLooseMult = cms.double(15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        sharedHits = cms.int32(5),
        maxdxyLoose = cms.double(0.01),
        offTimeNegTightMult = cms.double(-20.0)
    )
)

process.MuonSegmentMatcher = cms.PSet(
    MatchParameters = cms.PSet(
        CSCsegments = cms.InputTag("cscSegments"),
        DTsegments = cms.InputTag("dt4DSegments"),
        DTradius = cms.double(0.01),
        TightMatchDT = cms.bool(False),
        TightMatchCSC = cms.bool(True)
    )
)

process.MuonServiceProxy = cms.PSet(
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)

process.MuonShowerParameters = cms.PSet(
    MuonShowerInformationFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
    )
)

process.MuonTrackLoaderForCosmic = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    )
)

process.MuonTrackLoaderForGLB = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    )
)

process.MuonTrackLoaderForL2 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("hltOfflineBeamSpot"),
        VertexConstraint = cms.bool(True)
    )
)

process.MuonTrackLoaderForL3 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTkTrackIntoEvent = cms.untracked.bool(True),
        beamSpot = cms.InputTag("hltOfflineBeamSpot"),
        SmoothTkTrack = cms.untracked.bool(False),
        MuonSeededTracksInstance = cms.untracked.string('L2Seeded'),
        Smoother = cms.string('KFSmootherForMuonTrackLoaderL3'),
        VertexConstraint = cms.bool(False),
        DoSmoothing = cms.bool(True)
    )
)

process.MuonTrackLoaderForSTA = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    )
)

process.MuonTrackingRegionCommon = cms.PSet(
    MuonTrackingRegionBuilder = cms.PSet(
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        OnDemand = cms.double(-1.0),
        Rescale_Dz = cms.double(3.0),
        Eta_min = cms.double(0.1),
        Rescale_phi = cms.double(3.0),
        Eta_fixed = cms.double(0.2),
        DeltaZ_Region = cms.double(15.9),
        MeasurementTrackerName = cms.string(''),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        vertexCollection = cms.InputTag("pixelVertices"),
        Phi_fixed = cms.double(0.2),
        DeltaR = cms.double(0.2),
        EscapePt = cms.double(1.5),
        UseFixedRegion = cms.bool(False),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        Rescale_eta = cms.double(3.0),
        Phi_min = cms.double(0.1),
        UseVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)

process.MuonUpdatorAtVertex = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorOpposite'),
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
    )
)

process.MuonUpdatorAtVertexAnyDirection = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
    )
)

process.NoVertexGeneratorBlock = cms.PSet(
    VertexGenerator = cms.PSet(
        type = cms.string('None')
    )
)

process.OneProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZero'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngTwoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZero'),
    decayModeIndices = cms.vint32(2)
)

process.OneProngTwoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZeroIso'),
    decayModeIndices = cms.vint32(2)
)

process.OutALCARECODtCalib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECODtCalibCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalibCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECODtCalibCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalibCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECODtCalibHI = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalibHI')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep *_hiSelectedVertex_*_*')
)

process.OutALCARECODtCalibHI_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalibHI')
    ),
    outputCommands = cms.untracked.vstring('keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep *_hiSelectedVertex_*_*')
)

process.OutALCARECODtCalib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalib')
    ),
    outputCommands = cms.untracked.vstring('keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECOEcalCalElectron = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalZElectron', 
            'pathALCARECOEcalCalWElectron')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_pfMet_*_*', 
        'keep *_kt6PFJetsForRhoCorrection_rho_*', 
        'keep *_kt6PFJets_rho_*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *BeamSpot_offlineBeamSpot_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_conversions_*_*', 
        'keep *GsfTrack*_*_*_*', 
        'keep *_generator_*_*', 
        'keep *_addPileupInfo_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGsfElectron*_gsfElectron*_*_*', 
        'keep recoCaloClusters_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep recoPreshowerCluster*_*_*_*', 
        'drop reco*Clusters_hfEMClusters_*_*', 
        'drop reco*Clusters_pfPhotonTranslator_*_*', 
        'drop *_*Unclean*_*_*', 
        'drop *_*unclean*_*_*', 
        'drop *_*_*Unclean*_*', 
        'drop *_*_*unclean*_*', 
        'keep *_*_*_HLT', 
        'keep recoTracks_generalTracks_*_*', 
        'drop *EcalRecHit*_ecalRecHit_*_*', 
        'drop *EcalrecHit*_*ecalPreshowerRecHit*_*EcalRecHitsES*_*', 
        'drop *EcalRecHit*_reducedEcalRecHitsE*_*_*', 
        'keep *EcalRecHit*_alCaIsolatedElectrons_*_*', 
        'keep *EcalRecHit*_reducedEcalRecHitsES_alCaRecHitsES_*')
)

process.OutALCARECOEcalCalElectron_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalZElectron', 
            'pathALCARECOEcalCalWElectron')
    ),
    outputCommands = cms.untracked.vstring('keep *_pfMet_*_*', 
        'keep *_kt6PFJetsForRhoCorrection_rho_*', 
        'keep *_kt6PFJets_rho_*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *BeamSpot_offlineBeamSpot_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_conversions_*_*', 
        'keep *GsfTrack*_*_*_*', 
        'keep *_generator_*_*', 
        'keep *_addPileupInfo_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGsfElectron*_gsfElectron*_*_*', 
        'keep recoCaloClusters_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep recoPreshowerCluster*_*_*_*', 
        'drop reco*Clusters_hfEMClusters_*_*', 
        'drop reco*Clusters_pfPhotonTranslator_*_*', 
        'drop *_*Unclean*_*_*', 
        'drop *_*unclean*_*_*', 
        'drop *_*_*Unclean*_*', 
        'drop *_*_*unclean*_*', 
        'keep *_*_*_HLT', 
        'keep recoTracks_generalTracks_*_*', 
        'drop *EcalRecHit*_ecalRecHit_*_*', 
        'drop *EcalrecHit*_*ecalPreshowerRecHit*_*EcalRecHitsES*_*', 
        'drop *EcalRecHit*_reducedEcalRecHitsE*_*_*', 
        'keep *EcalRecHit*_alCaIsolatedElectrons_*_*', 
        'keep *EcalRecHit*_reducedEcalRecHitsES_alCaRecHitsES_*')
)

process.OutALCARECOEcalCalEtaCalib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalEtaCalib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*')
)

process.OutALCARECOEcalCalEtaCalib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalEtaCalib')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*')
)

process.OutALCARECOEcalCalPhiSym = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPhiSym')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*')
)

process.OutALCARECOEcalCalPhiSym_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPhiSym')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*')
)

process.OutALCARECOEcalCalPi0Calib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPi0Calib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*')
)

process.OutALCARECOEcalCalPi0Calib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPi0Calib')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*')
)

process.OutALCARECOHcalCalDijets = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalDijets')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalDijets_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalDijets')
    ),
    outputCommands = cms.untracked.vstring('keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalGammaJet = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalGammaJet')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_GammaJetProd_*_*')
)

process.OutALCARECOHcalCalGammaJet_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalGammaJet')
    ),
    outputCommands = cms.untracked.vstring('keep *_GammaJetProd_*_*')
)

process.OutALCARECOHcalCalHO = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHO')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_hoCalibProducer_*_*')
)

process.OutALCARECOHcalCalHOCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHOCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep HOCalibVariabless_*_*_*')
)

process.OutALCARECOHcalCalHOCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHOCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep HOCalibVariabless_*_*_*')
)

process.OutALCARECOHcalCalHO_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHO')
    ),
    outputCommands = cms.untracked.vstring('keep *_hoCalibProducer_*_*')
)

process.OutALCARECOHcalCalIsoTrk = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrk')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalIsoTrkNoHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrkNoHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_IsoProd_*_*')
)

process.OutALCARECOHcalCalIsoTrkNoHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrkNoHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_IsoProd_*_*')
)

process.OutALCARECOHcalCalIsoTrk_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrk')
    ),
    outputCommands = cms.untracked.vstring('keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBiasHI = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbhereco_*_*', 
        'keep HORecHitsSorted_horeco_*_*', 
        'keep HFRecHitsSorted_hfreco_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBiasHI_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbhereco_*_*', 
        'keep HORecHitsSorted_horeco_*_*', 
        'keep HFRecHitsSorted_hfreco_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalNoise = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalNoise')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT')
)

process.OutALCARECOHcalCalNoise_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalNoise')
    ),
    outputCommands = cms.untracked.vstring('keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT')
)

process.OutALCARECOLumiPixels = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOLumiPixels')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_siPixelClustersForLumi_*_*', 
        'keep *_TriggerResults_*_HLT')
)

process.OutALCARECOLumiPixels_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOLumiPixels')
    ),
    outputCommands = cms.untracked.vstring('keep *_siPixelClustersForLumi_*_*', 
        'keep *_TriggerResults_*_HLT')
)

process.OutALCARECOMuAlBeamHalo = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHaloOverlaps = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHaloOverlaps')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHaloOverlaps_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHaloOverlaps')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHalo_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlCalIsolatedMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlCalIsolatedMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlCalIsolatedMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlCalIsolatedMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmicsInCollisions = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmicsInCollisions_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlOverlaps = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlOverlaps')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlOverlaps_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlOverlaps')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlStandAloneCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlStandAloneCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlStandAloneCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlStandAloneCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlZMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlZMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOPromptCalibProd = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOPromptCalibProd')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_alcaBeamSpotProducer_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOPromptCalibProd_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOPromptCalibProd')
    ),
    outputCommands = cms.untracked.vstring('keep *_alcaBeamSpotProducer_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECORpcCalHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECORpcCalHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*')
)

process.OutALCARECORpcCalHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECORpcCalHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*')
)

process.OutALCARECOSiPixelLorentzAngle = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiPixelLorentzAngle')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_globalMuons_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'drop *_*_*_HLT')
)

process.OutALCARECOSiPixelLorentzAngle_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiPixelLorentzAngle')
    ),
    outputCommands = cms.untracked.vstring('keep *_globalMuons_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'drop *_*_*_HLT')
)

process.OutALCARECOSiStripCalMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalZeroBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalZeroBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalZeroBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalZeroBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripPCLHistos = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripPCLHistos')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOSiStripPCLHistos_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripPCLHistos')
    ),
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOTkAlBeamHalo = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlBeamHalo_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF', 
            'pathALCARECOTkAlCosmicsCosmicTF', 
            'pathALCARECOTkAlCosmicsRegional')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0T = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0T', 
            'pathALCARECOTkAlCosmicsCosmicTF0T', 
            'pathALCARECOTkAlCosmicsRegional0T')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0THLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0THLT', 
            'pathALCARECOTkAlCosmicsCosmicTF0THLT', 
            'pathALCARECOTkAlCosmicsRegional0THLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0THLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0THLT', 
            'pathALCARECOTkAlCosmicsCosmicTF0THLT', 
            'pathALCARECOTkAlCosmicsRegional0THLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0T_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0T', 
            'pathALCARECOTkAlCosmicsCosmicTF0T', 
            'pathALCARECOTkAlCosmicsRegional0T')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTFHLT', 
            'pathALCARECOTkAlCosmicsCosmicTFHLT', 
            'pathALCARECOTkAlCosmicsRegionalHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTFHLT', 
            'pathALCARECOTkAlCosmicsCosmicTFHLT', 
            'pathALCARECOTkAlCosmicsRegionalHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsInCollisions = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsInCollisions_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF', 
            'pathALCARECOTkAlCosmicsCosmicTF', 
            'pathALCARECOTkAlCosmicsRegional')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsRegional_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlJpsiMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlJpsiMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlJpsiMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlJpsiMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlLAS = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlLAS')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlLAS_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlLAS')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBiasHI = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBiasHI')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMinBiasHI_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_hiSelectedVertex_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBiasHI_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBiasHI')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMinBiasHI_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_hiSelectedVertex_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMuonIsolated = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolated')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlMuonIsolatedPA = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolatedPA')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMuonIsolatedPA_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlMuonIsolatedPA_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolatedPA')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMuonIsolatedPA_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlMuonIsolated_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolated')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlUpsilonMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlUpsilonMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlUpsilonMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlUpsilonMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlZMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.OutALCARECOTkAlZMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*')
)

process.PFTauQualityCuts = cms.PSet(
    isolationQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(8),
        minTrackVertexWeight = cms.double(-1),
        minTrackPt = cms.double(1.0),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(1.5),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    ),
    pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
    primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
    signalQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(3),
        minTrackVertexWeight = cms.double(-1),
        minTrackPt = cms.double(0.5),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(0.5),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    )
)

process.PixelFitterByHelixProjections = cms.PSet(
    ComponentName = cms.string('PixelFitterByHelixProjections'),
    TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
)

process.PixelTrackReconstructionBlock = cms.PSet(
    useFilterWithES = cms.bool(False),
    FilterPSet = cms.PSet(
        chi2 = cms.double(1000.0),
        nSigmaTipMaxTolerance = cms.double(0.0),
        ComponentName = cms.string('PixelTrackFilterByKinematics'),
        nSigmaInvPtTolerance = cms.double(0.0),
        ptMin = cms.double(0.1),
        tipMax = cms.double(1.0)
    ),
    FitterPSet = cms.PSet(
        ComponentName = cms.string('PixelFitterByHelixProjections'),
        TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            nSigmaZ = cms.double(4.0),
            originRadius = cms.double(0.2),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    CleanerPSet = cms.PSet(
        ComponentName = cms.string('PixelTrackCleanerBySharedHits')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037),
            ComponentName = cms.string('PixelTripletHLTGenerator')
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    )
)

process.PixelTripletHLTGenerator = cms.PSet(
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    maxElement = cms.uint32(100000),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    extraHitRPhitolerance = cms.double(0.032),
    useMultScattering = cms.bool(True),
    phiPreFiltering = cms.double(0.3),
    extraHitRZtolerance = cms.double(0.037),
    ComponentName = cms.string('PixelTripletHLTGenerator')
)

process.PixelTripletHLTGeneratorWithFilter = cms.PSet(
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    maxElement = cms.uint32(100000),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
    ),
    extraHitRPhitolerance = cms.double(0.032),
    useMultScattering = cms.bool(True),
    phiPreFiltering = cms.double(0.3),
    extraHitRZtolerance = cms.double(0.037),
    ComponentName = cms.string('PixelTripletHLTGenerator')
)

process.PixelTripletLargeTipGenerator = cms.PSet(
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    maxElement = cms.uint32(100000),
    ComponentName = cms.string('PixelTripletLargeTipGenerator'),
    extraHitRPhitolerance = cms.double(0.0),
    useMultScattering = cms.bool(True),
    phiPreFiltering = cms.double(0.3),
    extraHitRZtolerance = cms.double(0.0)
)

process.RAWDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*')
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.RAWEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.RAWRECODEBUGHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*' ) )
)

process.RAWRECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*' ) )
)

process.RAWRECOSIMHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.RAWSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*')
)

process.RAWSIMHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltAlCaEtaEBUncalibrator_*_*', 
        'keep *_hltAlCaEtaEEUncalibrator_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaEtaRecHitsFilterEEonly_etaEcalRecHitsES_*', 
        'keep *_hltAlCaEtaRecHitsFilter_*_*', 
        'keep *_hltAlCaPhiSymStream_*_*', 
        'keep *_hltAlCaPhiSymUncalibrator_*_*', 
        'keep *_hltAlCaPi0EBUncalibrator_*_*', 
        'keep *_hltAlCaPi0EEUncalibrator_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*', 
        'keep *_hltAlCaPi0RecHitsFilterEEonly_pi0EcalRecHitsES_*', 
        'keep *_hltAlCaPi0RecHitsFilter_*_*', 
        'keep *_hltAntiKT5CaloJets_*_*', 
        'keep *_hltAntiKT5PFJetsForTaus_*_*', 
        'keep *_hltAntiKT5PFJets_*_*', 
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 
        'keep *_hltBSoftMuonMu5L3_*_*', 
        'keep *_hltCaloJetCorrectedRegional_*_*', 
        'keep *_hltCaloJetCorrected_*_*', 
        'keep *_hltCaloJetL1FastJetCorrected_*_*', 
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 
        'keep *_hltConvPFTausTightIso_*_*', 
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 
        'keep *_hltConvPFTausTrackFinding_*_*', 
        'keep *_hltConvPFTaus_*_*', 
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltCsc2DRecHits_*_*', 
        'keep *_hltCscSegments_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltDoublePFTau25TrackPt5_*_*', 
        'keep *_hltDoublePFTau25_*_*', 
        'keep *_hltDoublePFTauTightIso45Track5_*_*', 
        'keep *_hltDoublePFTauTightIso45Track_*_*', 
        'keep *_hltDt4DSegments_*_*', 
        'keep *_hltEcalRecHitAll_*_*', 
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*', 
        'keep *_hltEle27WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltEle32WP80PixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltFastPVPixelTracksMerger_*_*', 
        'keep *_hltFastPVPixelTracksRecover_*_*', 
        'keep *_hltFastPVPixelTracks_*_*', 
        'keep *_hltFastPVPixelVertices3D_*_*', 
        'keep *_hltFastPVPixelVertices_*_*', 
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*', 
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*', 
        'keep *_hltHICaloJetCorrected_*_*', 
        'keep *_hltHICaloJetIDPassed_*_*', 
        'keep *_hltHIGoodLooseTracks_*_*', 
        'keep *_hltHIPixel3PrimTracks_*_*', 
        'keep *_hltHISelectedVertex_*_*', 
        'keep *_hltHISiPixelClusters_*_*', 
        'keep *_hltHITIPTCorrectorHB_*_*', 
        'keep *_hltHITIPTCorrectorHE_*_*', 
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*', 
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*', 
        'keep *_hltHiIslandSuperClustersHI_*_*', 
        'keep *_hltIsolPixelTrackProdHB_*_*', 
        'keep *_hltIsolPixelTrackProdHE_*_*', 
        'keep *_hltIter1Merged_*_*', 
        'keep *_hltIter2Merged_*_*', 
        'keep *_hltIter3Merged_*_*', 
        'keep *_hltIter4Merged_*_*', 
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*', 
        'keep *_hltL1IsoElectronTrackIsol_*_*', 
        'keep *_hltL1NonIsoElectronTrackIsol_*_*', 
        'keep *_hltL1SeededRecoEcalCandidate_*_*', 
        'keep *_hltL1extraParticlesCentral_*_*', 
        'keep *_hltL1extraParticlesNonIsolated_*_*', 
        'keep *_hltL1extraParticlesTau_*_*', 
        'keep *_hltL1extraParticles_*_*', 
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*', 
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*', 
        'keep *_hltL1sL1EG18er_*_*', 
        'keep *_hltL1sL1ETM36ORETM40_*_*', 
        'keep *_hltL1sL1Jet52ETM30_*_*', 
        'keep *_hltL1sL1SingleEG12_*_*', 
        'keep *_hltL1sL1SingleEG15_*_*', 
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*', 
        'keep *_hltL1sL1SingleMu10_*_*', 
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*', 
        'keep *_hltL1sMu16Eta2p1_*_*', 
        'keep *_hltL2MuonCandidatesNoVtx_*_*', 
        'keep *_hltL2MuonCandidates_*_*', 
        'keep *_hltL2MuonSeeds_*_*', 
        'keep *_hltL2Muons_*_*', 
        'keep *_hltL2TauJets_*_*', 
        'keep *_hltL3MuonCandidatesNoVtx_*_*', 
        'keep *_hltL3MuonCandidates_*_*', 
        'keep *_hltL3MuonsIOHit_*_*', 
        'keep *_hltL3MuonsLinksCombination_*_*', 
        'keep *_hltL3MuonsOIHit_*_*', 
        'keep *_hltL3MuonsOIState_*_*', 
        'keep *_hltL3Muons_*_*', 
        'keep *_hltL3TkFromL2OICombination_*_*', 
        'keep *_hltL3TkTracksFromL2IOHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIHit_*_*', 
        'keep *_hltL3TkTracksFromL2OIState_*_*', 
        'keep *_hltL3TkTracksFromL2_*_*', 
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 
        'keep *_hltL3TrackCandidateFromL2OIState_*_*', 
        'keep *_hltL3TrajSeedIOHit_*_*', 
        'keep *_hltL3TrajSeedOIHit_*_*', 
        'keep *_hltL3TrajSeedOIState_*_*', 
        'keep *_hltL3TrajectorySeed_*_*', 
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*', 
        'keep *_hltMetForHf_*_*', 
        'keep *_hltMet_*_*', 
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*', 
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 
        'keep *_hltMuonCSCDigis_*_*', 
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*', 
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*', 
        'keep *_hltMuonDTDigis_*_*', 
        'keep *_hltMuonRPCDigis_*_*', 
        'keep *_hltOnlineBeamSpot_*_*', 
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*', 
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*', 
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*', 
        'keep *_hltPFTau15TrackLooseIso_*_*', 
        'keep *_hltPFTau15Track_*_*', 
        'keep *_hltPFTau15_*_*', 
        'keep *_hltPFTau20IsoMuVertex_*_*', 
        'keep *_hltPFTau20TrackLooseIso_*_*', 
        'keep *_hltPFTau20Track_*_*', 
        'keep *_hltPFTau20_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*', 
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*', 
        'keep *_hltPFTau25TrackPt5_*_*', 
        'keep *_hltPFTau25_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*', 
        'keep *_hltPFTau35TrackPt20LooseIso_*_*', 
        'keep *_hltPFTau35TrackPt20_*_*', 
        'keep *_hltPFTau35Track_*_*', 
        'keep *_hltPFTau35_*_*', 
        'keep *_hltPFTauEleVertex20_*_*', 
        'keep *_hltPFTauJetTracksAssociator_*_*', 
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*', 
        'keep *_hltPFTauMediumIso20Track_*_*', 
        'keep *_hltPFTauMediumIso20_*_*', 
        'keep *_hltPFTauMediumIso35Track_*_*', 
        'keep *_hltPFTauMediumIso35_*_*', 
        'keep *_hltPFTauTagInfo_*_*', 
        'keep *_hltPFTauTightIso20TrackTightIso_*_*', 
        'keep *_hltPFTauTightIso20Track_*_*', 
        'keep *_hltPFTauTightIso20_*_*', 
        'keep *_hltParticleFlowForTaus_*_*', 
        'keep *_hltParticleFlow_*_*', 
        'keep *_hltPixelMatch3HitElectronsActivity_*_*', 
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*', 
        'keep *_hltPixelMatchElectronsActivity_*_*', 
        'keep *_hltPixelMatchElectronsL1Iso_*_*', 
        'keep *_hltPixelMatchElectronsL1NonIso_*_*', 
        'keep *_hltPixelMatchElectronsL1Seeded_*_*', 
        'keep *_hltPixelTracks_*_*', 
        'keep *_hltPixelVertices3DbbPhi_*_*', 
        'keep *_hltPixelVertices_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*', 
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*', 
        'keep *_hltRpcRecHits_*_*', 
        'keep *_hltSelector4JetsL1FastJet_*_*', 
        'keep *_hltSelectorJets20L1FastJet_*_*', 
        'keep *_hltSiStripRawToClustersFacility_*_*', 
        'keep *_hltSingleMu15L3Filtered15_*_*', 
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*', 
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*', 
        'keep *_hltTowerMakerForAll_*_*', 
        'keep *_hltTowerMakerForMuons_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'keep *_hltTriggerSummaryRAW_*_*', 
        'keep DcsStatuss_hltScalersRawToDigi_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep L1MuGMTCands_hltGtDigis_*_*', 
        'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*', 
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*', 
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*', 
        'keep LumiScalerss_hltScalersRawToDigi_*_*', 
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*', 
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*', 
        'keep TrackingRecHitsOwned_hltL3Muons_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep recoCaloJets_*_*_*', 
        'keep recoCaloMETs_*_*_*', 
        'keep recoCaloMETs_hltMet_*_*', 
        'keep recoCompositeCandidates_*_*_*', 
        'keep recoElectrons_*_*_*', 
        'keep recoIsolatedPixelTrackCandidates_*_*_*', 
        'keep recoMETs_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoPFTaus_*_*_*', 
        'keep recoRecoChargedCandidates_*_*_*', 
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*', 
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 
        'keep recoRecoEcalCandidates_*_*_*', 
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*', 
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3MuonsOIHit_*_*', 
        'keep recoTracks_hltHIL3MuonsOIState_*_*', 
        'keep recoTracks_hltHIL3Muons_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*', 
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*', 
        'keep triggerTriggerEventWithRefs_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep triggerTriggerFilterObjectWithRefs_*_*_*' ) )
)

process.RECODEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*' ) )
)

process.RECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*' ) )
)

process.RECOSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring( ('drop *', 
        'drop *', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 
        'keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*', 
        'keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep *_l1L1GtObjectMap_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep PileupSummaryInfos_*_*_*' ) )
)

process.REDIGIEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('drop *', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'drop *_randomEngineStateProducer_*_*')
)

process.REGENEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('drop *_genParticles_*_*', 
        'drop *_genParticlesForJets_*_*', 
        'drop *_kt4GenJets_*_*', 
        'drop *_kt6GenJets_*_*', 
        'drop *_iterativeCone5GenJets_*_*', 
        'drop *_ak5GenJets_*_*', 
        'drop *_ak7GenJets_*_*', 
        'drop *_genCandidatesForMET_*_*', 
        'drop *_genParticlesForMETAllVisible_*_*', 
        'drop *_genMetCalo_*_*', 
        'drop *_genMetCaloAndNonPrompt_*_*', 
        'drop *_genMetTrue_*_*', 
        'drop *_genMetIC5GenJs_*_*')
)

process.REPACKRAWEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'drop FEDRawDataCollection_source_*_*', 
        'drop FEDRawDataCollection_rawDataCollector_*_*')
)

process.REPACKRAWSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'drop FEDRawDataCollection_source_*_*', 
        'drop FEDRawDataCollection_rawDataCollector_*_*')
)

process.RESIMEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring('drop *', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep LHERunInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*')
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep *_reducedEcalRecHitsEB_*_*', 
        'keep *_reducedEcalRecHitsEE_*_*', 
        'keep *_reducedEcalRecHitsES_*_*', 
        'keep *_interestingEcalDetId*_*_*', 
        'keep *_ecalWeightUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep *_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5*_*_*', 
        'keep *_correctedMulti5x5*_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*')
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*')
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_gsfElectronCores_*_*', 
        'keep *_gsfElectrons_*_*', 
        'keep *_uncleanedOnlyGsfElectronCores_*_*', 
        'keep *_uncleanedOnlyGsfElectrons_*_*', 
        'keep *_eidRobustLoose_*_*', 
        'keep *_eidRobustTight_*_*', 
        'keep *_eidRobustHighEnergy_*_*', 
        'keep *_eidLoose_*_*', 
        'keep *_eidTight_*_*', 
        'keep *_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep *_photonCore_*_*', 
        'keep *_photons_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_ckfOutInTracksFromConversions_*_*', 
        'keep *_ckfInOutTracksFromConversions_*_*', 
        'keep *_uncleanedOnlyAllConversions_*_*', 
        'keep *_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep *_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*', 
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep recoConversions_uncleanedOnlyAllConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*')
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloJets_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoTrackJets_*_*_*', 
        'keep recoJPTJets_*_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_sisCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_sisCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_sisCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_sc5JetID_*_*', 
        'keep *_sc7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_ic7JetID_*_*', 
        'keep *_gk5JetID_*_*', 
        'keep *_gk7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ca4JetID_*_*', 
        'keep *_ca6JetID_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep *_fixedGridRho*_*_*')
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep double_kt6CaloJetsCentral_*_*', 
        'keep double_kt6PFJetsCentralChargedPileUp_*_*', 
        'keep double_kt6PFJetsCentralNeutral_*_*', 
        'keep double_kt6PFJetsCentralNeutralTight_*_*', 
        'keep *_fixedGridRho*_*_*')
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep HcalUnpackerReport_*_*_*')
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalGlobalUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*')
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep HcalUnpackerReport_*_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*')
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*')
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*')
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep DetIdedmEDCollection_siPixelDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_clusterSummaryProducer_*_*')
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*')
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*')
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muParamGlobalIsoDepositGsTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalEcal_*_*', 
        'keep *_muParamGlobalIsoDepositCalHcal_*_*', 
        'keep *_muParamGlobalIsoDepositCtfTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muParamGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep *_muons_*_*', 
        'keep *_*_muons_*', 
        'drop *_muons_muons1stStep2muonsMap_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoTracks_refittedStandAloneMuons_*_*', 
        'keep recoTrackExtras_refittedStandAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep recoPhotonCores_pfPhotonTranslator_*_*', 
        'keep recoConversions_pfPhotonTranslator_*_*')
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterHFEM_*_*', 
        'keep recoPFClusters_particleFlowClusterHFHAD_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*')
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHO_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFCandidates_particleFlowTmp_electrons_*', 
        'keep recoPFCandidates_particleFlowTmp_*_*', 
        'drop recoPFCandidates_particleFlowTmp__*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_particleFlow_electrons_*', 
        'keep *_particleFlow_photons_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*')
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep recoTracks_conversionStepTracks_*_*', 
        'keep recoTrackExtras_conversionStepTracks_*_*', 
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices__*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RegionPSetBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        originHalfLength = cms.double(21.2),
        originZPos = cms.double(0.0),
        originYPos = cms.double(0.0),
        ptMin = cms.double(0.9),
        originXPos = cms.double(0.0),
        originRadius = cms.double(0.2)
    )
)

process.RegionPSetWithVerticesBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        useFixedError = cms.bool(True),
        originRadius = cms.double(0.2),
        sigmaZVertex = cms.double(3.0),
        fixedError = cms.double(0.2),
        VertexCollection = cms.InputTag("pixelVertices"),
        ptMin = cms.double(0.9),
        useFoundVertices = cms.bool(True),
        nSigmaZ = cms.double(4.0)
    )
)

process.RegionPsetFomBeamSpotBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        nSigmaZ = cms.double(4.0),
        originRadius = cms.double(0.2),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        ptMin = cms.double(0.9)
    )
)

process.RegionPsetFomBeamSpotBlockFixedZ = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        originRadius = cms.double(0.2),
        ptMin = cms.double(0.9),
        originHalfLength = cms.double(21.2)
    )
)

process.SK_ME1234 = cms.PSet(
    dPhiFineMax = cms.double(0.025),
    verboseInfo = cms.untracked.bool(True),
    chi2Max = cms.double(99999.0),
    dPhiMax = cms.double(0.003),
    wideSeg = cms.double(3.0),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    dRPhiMax = cms.double(8.0)
)

process.SK_ME1A = cms.PSet(
    dPhiFineMax = cms.double(0.025),
    verboseInfo = cms.untracked.bool(True),
    chi2Max = cms.double(99999.0),
    dPhiMax = cms.double(0.025),
    wideSeg = cms.double(3.0),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(8.0)
)

process.ST_ME1234 = cms.PSet(
    maxRatioResidualPrune = cms.double(3),
    yweightPenalty = cms.double(1.5),
    maxRecHitsInCluster = cms.int32(20),
    dPhiFineMax = cms.double(0.025),
    preClusteringUseChaining = cms.bool(True),
    ForceCovariance = cms.bool(False),
    hitDropLimit6Hits = cms.double(0.3333),
    NormChi2Cut2D = cms.double(20.0),
    BPMinImprovement = cms.double(10000.0),
    Covariance = cms.double(0.0),
    tanPhiMax = cms.double(0.5),
    SeedBig = cms.double(0.0015),
    onlyBestSegment = cms.bool(False),
    dRPhiFineMax = cms.double(8.0),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    dXclusBoxMax = cms.double(4.0),
    BrutePruning = cms.bool(True),
    curvePenaltyThreshold = cms.double(0.85),
    CorrectTheErrors = cms.bool(True),
    hitDropLimit4Hits = cms.double(0.6),
    useShowering = cms.bool(False),
    CSCDebug = cms.untracked.bool(False),
    tanThetaMax = cms.double(1.2),
    NormChi2Cut3D = cms.double(10.0),
    minHitsPerSegment = cms.int32(3),
    ForceCovarianceAll = cms.bool(False),
    yweightPenaltyThreshold = cms.double(1.0),
    prePrunLimit = cms.double(3.17),
    hitDropLimit5Hits = cms.double(0.8),
    preClustering = cms.bool(True),
    prePrun = cms.bool(True),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    Pruning = cms.bool(True),
    dYclusBoxMax = cms.double(8.0)
)

process.ST_ME1A = cms.PSet(
    maxRatioResidualPrune = cms.double(3),
    yweightPenalty = cms.double(1.5),
    maxRecHitsInCluster = cms.int32(24),
    dPhiFineMax = cms.double(0.025),
    preClusteringUseChaining = cms.bool(True),
    ForceCovariance = cms.bool(False),
    hitDropLimit6Hits = cms.double(0.3333),
    NormChi2Cut2D = cms.double(20.0),
    BPMinImprovement = cms.double(10000.0),
    Covariance = cms.double(0.0),
    tanPhiMax = cms.double(0.5),
    SeedBig = cms.double(0.0015),
    onlyBestSegment = cms.bool(False),
    dRPhiFineMax = cms.double(8.0),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    dXclusBoxMax = cms.double(4.0),
    BrutePruning = cms.bool(True),
    curvePenaltyThreshold = cms.double(0.85),
    CorrectTheErrors = cms.bool(True),
    hitDropLimit4Hits = cms.double(0.6),
    useShowering = cms.bool(False),
    CSCDebug = cms.untracked.bool(False),
    tanThetaMax = cms.double(1.2),
    NormChi2Cut3D = cms.double(10.0),
    minHitsPerSegment = cms.int32(3),
    ForceCovarianceAll = cms.bool(False),
    yweightPenaltyThreshold = cms.double(1.0),
    prePrunLimit = cms.double(3.17),
    hitDropLimit5Hits = cms.double(0.8),
    preClustering = cms.bool(True),
    prePrun = cms.bool(True),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    Pruning = cms.bool(True),
    dYclusBoxMax = cms.double(8.0)
)

process.SectCollParametersBlock = cms.PSet(
    SectCollParameters = cms.PSet(
        SCCSP5 = cms.int32(0),
        SCCSP2 = cms.int32(0),
        SCCSP3 = cms.int32(0),
        SCECF4 = cms.bool(False),
        SCCSP1 = cms.int32(0),
        SCECF2 = cms.bool(False),
        SCECF3 = cms.bool(False),
        SCCSP4 = cms.int32(0),
        SCECF1 = cms.bool(False),
        Debug = cms.untracked.bool(False)
    )
)

process.SiPixelGainCalibrationServiceParameters = cms.PSet(

)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*')
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*')
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*')
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*')
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfos_*_*_*')
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*')
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfos_*_*_*')
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*')
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*')
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*')
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*')
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*')
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SingleNet = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.SingleNetIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNetIso'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.StandardMatchingParameters = cms.PSet(
    chainCuts = cms.bool(False),
    DataType = cms.string('Leptons'),
    MatchDeltaR_Leptons = cms.double(0.15),
    MatchDeltaR_Jets = cms.double(0.3),
    SaveOutputHistograms = cms.bool(False),
    RefCollection = cms.InputTag("kinematicSelectedTauValDenominator"),
    genCuts = cms.string(''),
    recoCuts = cms.string(''),
    TauPtCut = cms.double(0.0)
)

process.TC_ME1234 = cms.PSet(
    dPhiFineMax = cms.double(0.02),
    verboseInfo = cms.untracked.bool(True),
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    dPhiMax = cms.double(0.003),
    chi2ndfProbMin = cms.double(0.0001),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(6.0),
    dRPhiMax = cms.double(1.2)
)

process.TC_ME1A = cms.PSet(
    dPhiFineMax = cms.double(0.013),
    verboseInfo = cms.untracked.bool(True),
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    dPhiMax = cms.double(0.00198),
    chi2ndfProbMin = cms.double(0.0001),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(0.6)
)

process.TECi = cms.PSet(
    minRing = cms.int32(1),
    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    useRingSlector = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    maxRing = cms.int32(2)
)

process.TSPhiParametersBlock = cms.PSet(
    TSPhiParameters = cms.PSet(
        TSMNOE1 = cms.bool(True),
        TSMNOE2 = cms.bool(False),
        TSSMSK1 = cms.int32(312),
        TSTREN9 = cms.bool(True),
        TSTREN8 = cms.bool(True),
        TSTREN11 = cms.bool(True),
        TSTREN3 = cms.bool(True),
        TSTREN2 = cms.bool(True),
        TSTREN1 = cms.bool(True),
        TSTREN0 = cms.bool(True),
        TSTREN7 = cms.bool(True),
        TSTREN6 = cms.bool(True),
        TSTREN5 = cms.bool(True),
        TSTREN4 = cms.bool(True),
        TSSCCE1 = cms.bool(True),
        TSSCCE2 = cms.bool(False),
        TSMCCE2 = cms.bool(False),
        TSTREN19 = cms.bool(True),
        TSMCCE1 = cms.bool(True),
        TSTREN17 = cms.bool(True),
        TSTREN16 = cms.bool(True),
        TSTREN15 = cms.bool(True),
        TSTREN14 = cms.bool(True),
        TSTREN13 = cms.bool(True),
        TSTREN12 = cms.bool(True),
        TSSMSK2 = cms.int32(312),
        TSTREN10 = cms.bool(True),
        TSMMSK2 = cms.int32(312),
        TSMMSK1 = cms.int32(312),
        TSMHSP = cms.int32(1),
        TSSNOE2 = cms.bool(False),
        TSSNOE1 = cms.bool(True),
        TSSCGS2 = cms.bool(True),
        TSSCCEC = cms.bool(False),
        TSMCCEC = cms.bool(False),
        TSMHTE2 = cms.bool(False),
        Debug = cms.untracked.bool(False),
        TSSHTE2 = cms.bool(False),
        TSMCGS1 = cms.bool(True),
        TSMCGS2 = cms.bool(True),
        TSSHTE1 = cms.bool(True),
        TSTREN22 = cms.bool(True),
        TSSNOEC = cms.bool(False),
        TSTREN20 = cms.bool(True),
        TSTREN21 = cms.bool(True),
        TSMGS1 = cms.int32(1),
        TSMGS2 = cms.int32(1),
        TSSHTEC = cms.bool(False),
        TSMWORD = cms.int32(255),
        TSMHTEC = cms.bool(False),
        TSSCGS1 = cms.bool(True),
        TSTREN23 = cms.bool(True),
        TSSGS2 = cms.int32(1),
        TSMNOEC = cms.bool(False),
        TSSGS1 = cms.int32(1),
        TSTREN18 = cms.bool(True),
        TSMHTE1 = cms.bool(True)
    )
)

process.TSThetaParametersBlock = cms.PSet(
    TSThetaParameters = cms.PSet(
        Debug = cms.untracked.bool(False)
    )
)

process.TUParamsBlock = cms.PSet(
    Debug = cms.untracked.bool(False)
)

process.ThreeProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZero'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZero'),
    decayModeIndices = cms.vint32(11)
)

process.ThreeProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(11)
)

process.ThresholdPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ThresholdPtTrajectoryFilter'),
    nSigmaThresholdPt = cms.double(5.0),
    minHitsThresholdPt = cms.int32(3),
    thresholdPt = cms.double(10.0)
)

process.TimingFillerBlock = cms.PSet(
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    )
)

process.TrackAssociatorParameterBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    )
)

process.TrackAssociatorParameters = cms.PSet(
    muonMaxDistanceSigmaX = cms.double(0.0),
    muonMaxDistanceSigmaY = cms.double(0.0),
    CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
    dRHcal = cms.double(9999.0),
    dREcal = cms.double(9999.0),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    useEcal = cms.bool(True),
    dREcalPreselection = cms.double(0.05),
    HORecHitCollectionLabel = cms.InputTag("horeco"),
    dRMuon = cms.double(9999.0),
    propagateAllDirections = cms.bool(True),
    muonMaxDistanceX = cms.double(5.0),
    muonMaxDistanceY = cms.double(5.0),
    useHO = cms.bool(True),
    trajectoryUncertaintyTolerance = cms.double(-1.0),
    usePreshower = cms.bool(False),
    DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
    EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    dRHcalPreselection = cms.double(0.2),
    useMuon = cms.bool(True),
    useCalo = cms.bool(False),
    accountForTrajectoryChangeCalo = cms.bool(False),
    EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRMuonPreselection = cms.double(0.2),
    truthMatch = cms.bool(False),
    HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
    useHcal = cms.bool(True)
)

process.TrackerKinkFinderParametersBlock = cms.PSet(
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    )
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*')
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep *_electronGsfTracks_*_*')
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*')
)

process.TracoParametersBlock = cms.PSet(
    TracoParameters = cms.PSet(
        SPRGCOMP = cms.int32(2),
        FHTMSK = cms.int32(0),
        DD = cms.int32(18),
        SSLMSK = cms.int32(0),
        LVALIDIFH = cms.int32(0),
        Debug = cms.untracked.int32(0),
        FSLMSK = cms.int32(0),
        SHTPRF = cms.int32(1),
        SHTMSK = cms.int32(0),
        TRGENB3 = cms.int32(1),
        SHISM = cms.int32(0),
        IBTIOFF = cms.int32(0),
        KPRGCOM = cms.int32(255),
        KRAD = cms.int32(0),
        FLTMSK = cms.int32(1),
        LTS = cms.int32(0),
        SLTMSK = cms.int32(1),
        FPRGCOMP = cms.int32(2),
        TRGENB9 = cms.int32(1),
        TRGENB8 = cms.int32(1),
        FHTPRF = cms.int32(1),
        LTF = cms.int32(0),
        TRGENB1 = cms.int32(1),
        TRGENB0 = cms.int32(1),
        FHISM = cms.int32(0),
        TRGENB2 = cms.int32(1),
        TRGENB5 = cms.int32(1),
        TRGENB4 = cms.int32(1),
        TRGENB7 = cms.int32(1),
        TRGENB6 = cms.int32(1),
        TRGENB15 = cms.int32(1),
        TRGENB14 = cms.int32(1),
        TRGENB11 = cms.int32(1),
        TRGENB10 = cms.int32(1),
        TRGENB13 = cms.int32(1),
        TRGENB12 = cms.int32(1),
        REUSEO = cms.int32(1),
        REUSEI = cms.int32(1),
        BTIC = cms.int32(32)
    )
)

process.TrkIsoCuts = cms.PSet(
    IsCombinedIso = cms.untracked.bool(False),
    IsoCut03 = cms.untracked.double(3.0),
    IsRelativeIso = cms.untracked.bool(False),
    ptThreshold = cms.untracked.double(0.0)
)

process.WElectronSkimContent = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_pfMet_*_*', 
        'keep *_kt6PFJetsForRhoCorrection_rho_*', 
        'keep *_kt6PFJets_rho_*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *BeamSpot_offlineBeamSpot_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_conversions_*_*', 
        'keep *GsfTrack*_*_*_*', 
        'keep *_generator_*_*', 
        'keep *_addPileupInfo_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGsfElectron*_gsfElectron*_*_*', 
        'keep recoCaloClusters_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep recoPreshowerCluster*_*_*_*', 
        'drop reco*Clusters_hfEMClusters_*_*', 
        'drop reco*Clusters_pfPhotonTranslator_*_*', 
        'drop *_*Unclean*_*_*', 
        'drop *_*unclean*_*_*', 
        'drop *_*_*Unclean*_*', 
        'drop *_*_*unclean*_*', 
        'keep *_*_*_HLT', 
        'keep recoTracks_generalTracks_*_*', 
        'drop *EcalRecHit*_ecalRecHit_*_*', 
        'drop *EcalrecHit*_*ecalPreshowerRecHit*_*EcalRecHitsES*_*', 
        'drop *EcalRecHit*_reducedEcalRecHitsE*_*_*', 
        'keep *EcalRecHit*_alCaIsolatedElectrons_*_*', 
        'keep *EcalRecHit*_reducedEcalRecHitsES_alCaRecHitsES_*', 
        'keep *_pfMet_*_*', 
        'keep *_kt6*_rho_*', 
        'keep *_offlinePrimaryVerticesWithBS_*_*', 
        'keep *_generator_*_*', 
        'keep *_rawDataCollector_*_*', 
        'keep recoCaloClusters_*_*_*', 
        'keep recoPreshowerClusters_*_*_*', 
        'keep *_reducedEcalRecHits*_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_gtDigis_*_*'),
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalZElectron', 
            'pathALCARECOEcalCalWElectron')
    )
)

process.ZeroBiasClusterizer = cms.PSet(
    ChannelThreshold = cms.double(2.0),
    MaxSequentialBad = cms.uint32(1),
    Algorithm = cms.string('ThreeThresholdAlgorithm'),
    MaxSequentialHoles = cms.uint32(0),
    MaxAdjacentBad = cms.uint32(0),
    QualityLabel = cms.string('unbiased'),
    SeedThreshold = cms.double(3.0),
    RemoveApvShots = cms.bool(True),
    ClusterThreshold = cms.double(5.0)
)

process.bTagBProbabilityAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(8.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagCombinedSVAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        categoryVariable = cms.string('vertexCategory'),
        categories = cms.VPSet(cms.PSet(
            trackPPar = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(250.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackSumJetEtRatio = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(4.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            trackMomentum = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(250.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackEtaRel = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(9.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(1.3)
            ),
            trackSip2dSig = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-50.0)
            ),
            trackSip3dSig = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-50.0)
            ),
            trackPParRatio = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(1.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.86)
            ),
            trackSip3dVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(3.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-3.0)
            ),
            trackDecayLenVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(50.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackJetDist = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-10.0)
            ),
            trackSip2dVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.2),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-0.2)
            ),
            trackPtRel = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(20.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackPtRatio = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.5),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackDeltaR = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.3),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackSip2dSigAboveCharm = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(-50.0)
            ),
            trackSip3dSigAboveCharm = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(-50.0)
            ),
            vertexCategory = cms.PSet(
                logScale = cms.bool(False),
                max = cms.double(2.5),
                nBins = cms.uint32(3),
                min = cms.double(-0.5)
            ),
            trackSumJetDeltaR = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(0.3),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexMass = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexNTracks = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(20.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexJetDeltaR = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(0.5),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexEnergyRatio = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(1.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance3dVal = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.01)
            ),
            flightDistance3dSig = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance2dSig = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(3.0)
            ),
            jetNSecondaryVertices = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance2dVal = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(2.5),
                nBins = cms.uint32(50),
                min = cms.double(0.01)
            )
        ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexMass = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexNTracks = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexEnergyRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance3dVal = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.01)
                ),
                flightDistance3dSig = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance2dSig = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(3.0)
                ),
                jetNSecondaryVertices = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance2dVal = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(2.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.01)
                )
            ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexMass = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexNTracks = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexEnergyRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                )
            ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                )
            ))
    )
)

process.bTagCommonBlock = cms.PSet(
    ptRecJetMin = cms.double(30.0),
    inputfile = cms.string(''),
    partonKinematics = cms.bool(True),
    epsBaseName = cms.string(''),
    produceEps = cms.bool(False),
    etaMax = cms.double(2.4),
    update = cms.bool(False),
    ratioMin = cms.double(-1.0),
    ratioMax = cms.double(0.8),
    etaMin = cms.double(0.0),
    ptPartonMin = cms.double(0.0),
    etaRanges = cms.vdouble(0.0, 1.4, 2.4),
    softLeptonInfo = cms.InputTag("softElectronTagInfos"),
    jetIdParameters = cms.PSet(
        vetoFlavour = cms.vstring(),
        rejectBCSplitting = cms.bool(False),
        physicsDefinition = cms.bool(False),
        coneSizeToAssociate = cms.double(0.3),
        fillLeptons = cms.bool(False),
        fillHeavyHadrons = cms.bool(False),
        fillPartons = cms.bool(True),
        mcSource = cms.string('source')
    ),
    jetMCSrc = cms.InputTag("mcJetFlavour"),
    ptRanges = cms.vdouble(50.0, 80.0, 120.0),
    psBaseName = cms.string(''),
    ptRecJetMax = cms.double(40000.0),
    ptPartonMax = cms.double(99999.0),
    producePs = cms.bool(False),
    allHistograms = cms.bool(False)
)

process.bTagGenericAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(1.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagProbabilityAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(2.6),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSimpleSVAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(0.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(8.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(1.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonByIPAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-10.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(30.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonByPtAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.01),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(8.01),
        startEffPur = cms.double(0.005)
    )
)

process.bTagTrackCountingAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-5.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(15.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagTrackIPAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        NBinsIPE = cms.int32(100),
        NBinsIPS = cms.int32(100),
        LowerIPEBound = cms.double(0.0),
        LowerIPBound = cms.double(-0.1),
        QualityPlots = cms.bool(False),
        MinJetDistance = cms.double(-9999.0),
        startEffPur = cms.double(0.005),
        UpperIPBound = cms.double(0.1),
        MaxJetDistance = cms.double(9999.0),
        nBinEffPur = cms.int32(200),
        UpperIPSBound = cms.double(35.0),
        MinDecayLength = cms.double(-9999.0),
        MaxDecayLength = cms.double(9999.0),
        endEffPur = cms.double(1.005),
        NBinsIP = cms.int32(100),
        LowerIPSBound = cms.double(-35.0),
        UpperIPEBound = cms.double(0.04)
    )
)

process.binning = cms.PSet(
    pileup = cms.PSet(
        max = cms.double(72.0),
        nbins = cms.int32(18),
        min = cms.double(0.0)
    ),
    phi = cms.PSet(
        max = cms.double(180.0),
        nbins = cms.int32(4),
        min = cms.double(-180.0)
    ),
    eta = cms.PSet(
        max = cms.double(3.0),
        nbins = cms.int32(4),
        min = cms.double(-3.0)
    ),
    pt = cms.PSet(
        max = cms.double(100.0),
        nbins = cms.int32(10),
        min = cms.double(0.0)
    )
)

process.cleanedJetDQMParameters = cms.PSet(
    fillpfJIDPassFrac = cms.int32(1),
    ptBin = cms.int32(90),
    resEMFMinTight = cms.double(0.01),
    ThisCEFMax = cms.double(1.0),
    fHPDMaxLoose = cms.double(0.98),
    eMin = cms.double(0.0),
    LooseCEFMax = cms.double(1.0),
    LooseCHFMin = cms.double(0.0),
    resEMFMin = cms.double(0.01),
    pMin = cms.double(0.0),
    etaMin = cms.double(-5.0),
    sigmaEtaMinTight = cms.double(0.01),
    etaMax = cms.double(5.0),
    pMax = cms.double(500.0),
    phiMax = cms.double(3.2),
    phiMin = cms.double(-3.2),
    eMax = cms.double(500.0),
    sigmaPhiMinTight = cms.double(0.01),
    TightCEFMax = cms.double(1.0),
    ptMin = cms.double(10.0),
    balanceThirdJetCut = cms.double(0.2),
    pBin = cms.int32(100),
    LooseNHFMax = cms.double(0.9),
    etaBin = cms.int32(100),
    TightNEFMax = cms.double(1.0),
    resEMFMinLoose = cms.double(0.01),
    makedijetselection = cms.int32(0),
    TightNHFMax = cms.double(1.0),
    n90HitsMinTight = cms.int32(4),
    phiBin = cms.int32(70),
    ThisNEFMax = cms.double(0.9),
    fillJIDPassFrac = cms.int32(0),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    eBin = cms.int32(100),
    asymmetryThirdJetCut = cms.double(30),
    ptMax = cms.double(100.0),
    fHPDMaxTight = cms.double(0.98),
    n90HitsMinLoose = cms.int32(1),
    ptThreshold = cms.double(20.0),
    n90HitsMin = cms.int32(2),
    fHPDMax = cms.double(0.98),
    ThisNHFMax = cms.double(0.9),
    TightCHFMin = cms.double(0.0),
    ThisCHFMin = cms.double(0.0),
    LooseNEFMax = cms.double(0.9)
)

process.cleanedjptDQMParameters = cms.PSet(
    OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    Pt1HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nTracksVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PrintDebugMessages = cms.untracked.bool(False),
    InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    deltaEtaHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    TrackSiStripHitStoNHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(500),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    EtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    HistogramPath = cms.string('JetMET/Jet/JPT'),
    InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    PhiVsEtaHistogramConfig = cms.PSet(
        NBins = cms.uint32(64),
        MaxY = cms.double(2.5),
        Min = cms.double(-3.2),
        Max = cms.double(3.2),
        Enabled = cms.bool(True),
        MinY = cms.double(-2.5),
        NBinsY = cms.uint32(50)
    ),
    OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        rpcRecHits = cms.InputTag("rpcRecHits"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    n90HitsMin = cms.int32(2),
    nAllPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    correctedPtThreshold = cms.double(3.0),
    MassHistogramConfig = cms.PSet(
        Max = cms.double(25),
        NBins = cms.uint32(25),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PzHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    AllPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    deltaPhiHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    CorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    EHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    AllElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    Pt2HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    JPTCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    nTracksVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    resEMFMin = cms.double(0.01),
    AllElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    CorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PyHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ResEMFHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    Pt3HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    N90HitsHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    fRBXHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    CorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PxHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    ZSPCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDMax = cms.double(0.98),
    InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    EtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    )
)

process.cleaningAlgoConfig = cms.PSet(
    e6e2thresh = cms.double(0.04),
    tightenCrack_e6e2_double = cms.double(3),
    tightenCrack_e4e1_single = cms.double(3),
    cThreshold_barrel = cms.double(4),
    e4e1Threshold_barrel = cms.double(0.08),
    tightenCrack_e1_single = cms.double(2),
    e4e1_b_barrel = cms.double(-0.024),
    e4e1_a_barrel = cms.double(0.04),
    cThreshold_double = cms.double(10),
    ignoreOutOfTimeThresh = cms.double(1000000000.0),
    cThreshold_endcap = cms.double(15),
    e4e1_a_endcap = cms.double(0.02),
    e4e1_b_endcap = cms.double(-0.0125),
    e4e1Threshold_endcap = cms.double(0.3),
    tightenCrack_e1_double = cms.double(2)
)

process.cleaningParameters = cms.PSet(
    tightJetIDFiltering = cms.int32(-1),
    techTrigsOR = cms.vuint32(),
    vtxchi2_max = cms.double(9999),
    tightBHFiltering = cms.bool(False),
    doPrimaryVertexCheck = cms.bool(True),
    vertexLabel = cms.InputTag("offlinePrimaryVertices"),
    vtxndof_min = cms.int32(4),
    gtLabel = cms.InputTag("gtDigis"),
    doHLTPhysicsOn = cms.bool(False),
    nvtxtrks_min = cms.int32(0),
    nvtx_min = cms.int32(1),
    vtxz_max = cms.double(24.0),
    trigSelection = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring(''),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_hltsel'),
        errorReplyHlt = cms.bool(False)
    ),
    HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
    techTrigsNOT = cms.vuint32(),
    techTrigsAND = cms.vuint32()
)

process.combinedSVNoVertexVariables = cms.PSet(
    trackPPar = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(250.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSumJetEtRatio = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(4.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    trackDeltaR = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.3),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSip2dSigAboveCharm = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(-50.0)
    ),
    trackEtaRel = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(9.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(1.3)
    ),
    vertexCategory = cms.PSet(
        logScale = cms.bool(False),
        max = cms.double(2.5),
        nBins = cms.uint32(3),
        min = cms.double(-0.5)
    ),
    trackSip2dSig = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-50.0)
    ),
    trackPParRatio = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(1.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.86)
    ),
    trackSip3dVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(3.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-3.0)
    ),
    trackSumJetDeltaR = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(0.3),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    trackJetDist = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-10.0)
    ),
    trackSip2dVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.2),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-0.2)
    ),
    trackPtRel = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(20.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackPtRatio = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.5),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackMomentum = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(250.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackDecayLenVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(50.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSip3dSig = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-50.0)
    ),
    trackSip3dSigAboveCharm = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(-50.0)
    )
)

process.combinedSVPseudoVertexVariables = cms.PSet(
    vertexMass = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexNTracks = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(20.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexJetDeltaR = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(0.5),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexEnergyRatio = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(1.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    )
)

process.combinedSVRecoVertexVariables = cms.PSet(
    flightDistance3dVal = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.01)
    ),
    flightDistance3dSig = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    jetNSecondaryVertices = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    flightDistance2dVal = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(2.5),
        nBins = cms.uint32(50),
        min = cms.double(0.01)
    ),
    flightDistance2dSig = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(3.0)
    )
)

process.combinedSecondaryVertexCommon = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False)
)

process.configurationMetadata = cms.untracked.PSet(
    version = cms.untracked.string('$Revision: 1.381.2.18 $'),
    annotation = cms.untracked.string(' nevts:-1'),
    name = cms.untracked.string('PyReleaseValidation')
)

process.cscRecHitDParameters = cms.PSet(
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME1a = cms.double(0.023),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    XTasymmetry_ME41 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME21 = cms.double(0.023),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    XTasymmetry_ME31 = cms.double(0.023),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    XTasymmetry_ME32 = cms.double(0.023),
    ConstSyst_ME41 = cms.double(0.03),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME12 = cms.double(0.015),
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0)
)

process.cuts = cms.PSet(
    tightCut = cms.double(0.985),
    looseCut = cms.double(0.95),
    mediumCut = cms.double(0.97),
    vlooseCut = cms.double(0.9)
)

process.discriminantConfiguration = cms.PSet(
    BinnedMaskedHcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
    ),
    InvariantOpeningAngle = cms.PSet(
        defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
        plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(1),
            rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
            nCharged = cms.uint32(1),
            mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                rms = cms.string('0.38/max(pt, 1.0)'),
                nCharged = cms.uint32(3),
                mean = cms.string('0.87/max(pt, 1.0)')
            )),
        defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
    ),
    BinnedMaskedEcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                nPUVtx = cms.int32(4)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                nPUVtx = cms.int32(5)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                nPUVtx = cms.int32(6)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                nPUVtx = cms.int32(7)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                nPUVtx = cms.int32(8)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                nPUVtx = cms.int32(9)
            )),
        defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
    ),
    FlightPathSignificance = cms.PSet(
        plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
        discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
        maxValue = cms.double(25),
        minValue = cms.double(-25)
    ),
    BinnedTrackIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
        plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
    )
)

process.dphiScale = cms.PSet(
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0)
)

process.drawOptStuff = cms.PSet(
    drawOptionLegend = cms.string('p'),
    markerSize = cms.double(1.0),
    markerColor = cms.int32(1),
    lineColor = cms.int32(1),
    drawOption = cms.string('ex0'),
    lineWidth = cms.int32(2),
    lineStyle = cms.int32(1),
    markerStyle = cms.int32(20)
)

process.ecalDrivenElectronSeedsParameters = cms.PSet(
    PhiMax2B = cms.double(0.002),
    hOverEPtMin = cms.double(0.0),
    PhiMax2F = cms.double(0.003),
    searchInTIDTEC = cms.bool(True),
    pPhiMax1 = cms.double(0.125),
    HighPtThreshold = cms.double(35.0),
    r2MinF = cms.double(-0.15),
    maxHBarrel = cms.double(0.0),
    DeltaPhi1Low = cms.double(0.23),
    DeltaPhi1High = cms.double(0.08),
    ePhiMin1 = cms.double(-0.125),
    hcalTowers = cms.InputTag("towerMaker"),
    LowPtThreshold = cms.double(5.0),
    maxHOverEBarrel = cms.double(0.15),
    dynamicPhiRoad = cms.bool(True),
    ePhiMax1 = cms.double(0.075),
    measurementTrackerName = cms.string(''),
    SizeWindowENeg = cms.double(0.675),
    nSigmasDeltaZ1 = cms.double(5.0),
    rMaxI = cms.double(0.2),
    maxHEndcaps = cms.double(0.0),
    preFilteredSeeds = cms.bool(False),
    r2MaxF = cms.double(0.15),
    hOverEConeSize = cms.double(0.15),
    pPhiMin1 = cms.double(-0.075),
    initialSeeds = cms.InputTag("newCombinedSeeds"),
    deltaZ1WithVertex = cms.double(25.0),
    SCEtCut = cms.double(4.0),
    z2MaxB = cms.double(0.09),
    fromTrackerSeeds = cms.bool(True),
    hcalRecHits = cms.InputTag("hbhereco"),
    z2MinB = cms.double(-0.09),
    rMinI = cms.double(-0.2),
    maxHOverEEndcaps = cms.double(0.15),
    hOverEHBMinE = cms.double(0.7),
    useRecoVertex = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
    applyHOverECut = cms.bool(True),
    DeltaPhi2F = cms.double(0.012),
    PhiMin2F = cms.double(-0.003),
    hOverEHFMinE = cms.double(0.8),
    DeltaPhi2B = cms.double(0.008),
    PhiMin2B = cms.double(-0.002)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalGlobalUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*')
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*')
)

process.egHLTOffBaseEleTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffBasePhoTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDQMBinData = cms.PSet(
    energy = cms.PSet(
        max = cms.double(300.0),
        nr = cms.int32(60),
        min = cms.double(0.0)
    ),
    e1x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    et = cms.PSet(
        max = cms.double(155.0),
        nr = cms.int32(80),
        min = cms.double(-5.0)
    ),
    etaVsPhi = cms.PSet(
        yMax = cms.double(3.14),
        nrY = cms.int32(8),
        nrX = cms.int32(15),
        xMax = cms.double(3.0),
        xMin = cms.double(-3.0),
        yMin = cms.double(-3.14)
    ),
    nVertex = cms.PSet(
        max = cms.double(21.0),
        nr = cms.int32(22),
        min = cms.double(-1.0)
    ),
    hOverE = cms.PSet(
        max = cms.double(0.1),
        nr = cms.int32(30),
        min = cms.double(0.0)
    ),
    massHigh = cms.PSet(
        max = cms.double(5000),
        nr = cms.int32(20),
        min = cms.double(0.0)
    ),
    etHigh = cms.PSet(
        max = cms.double(2025),
        nr = cms.int32(30),
        min = cms.double(25)
    ),
    sigEtaEta = cms.PSet(
        max = cms.double(0.05),
        nr = cms.int32(30),
        min = cms.double(-0.01)
    ),
    isolPtTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    charge = cms.PSet(
        max = cms.double(1.5),
        nr = cms.int32(2),
        min = cms.double(-1.5)
    ),
    deltaE = cms.PSet(
        max = cms.double(50.0),
        nr = cms.int32(50),
        min = cms.double(-50.0)
    ),
    maxr9 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    invEInvP = cms.PSet(
        max = cms.double(0.2),
        nr = cms.int32(10),
        min = cms.double(-0.2)
    ),
    phi = cms.PSet(
        max = cms.double(3.14),
        nr = cms.int32(16),
        min = cms.double(-3.14)
    ),
    eOverP = cms.PSet(
        max = cms.double(5),
        nr = cms.int32(12),
        min = cms.double(-1.0)
    ),
    isolNrTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    HLTeta = cms.PSet(
        max = cms.double(3.0),
        nr = cms.int32(30),
        min = cms.double(-3.0)
    ),
    dPhiIn = cms.PSet(
        max = cms.double(0.15),
        nr = cms.int32(10),
        min = cms.double(-0.15)
    ),
    err = cms.PSet(
        max = cms.double(100.5),
        nr = cms.int32(101),
        min = cms.double(-0.5)
    ),
    minr9 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    isolHad = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    dEtaIn = cms.PSet(
        max = cms.double(0.02),
        nr = cms.int32(10),
        min = cms.double(-0.02)
    ),
    isolEm = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    eta = cms.PSet(
        max = cms.double(3.0),
        nr = cms.int32(30),
        min = cms.double(-3.0)
    ),
    mass = cms.PSet(
        max = cms.double(120),
        nr = cms.int32(26),
        min = cms.double(-10.0)
    ),
    e2x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    HLTenergy = cms.PSet(
        max = cms.double(300.0),
        nr = cms.int32(60),
        min = cms.double(0.0)
    ),
    HLTphi = cms.PSet(
        max = cms.double(3.14),
        nr = cms.int32(16),
        min = cms.double(-3.14)
    )
)

process.egHLTOffDoubleEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoubleEleEt5Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoublePhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15VLEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhotonEt33_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:maxr9:hadem'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(33.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltDoublePhoton33EgammaLHEDoubleFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:maxr9:hadem'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(33.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffEle90_NoSpikeFilter_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hadem'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(90.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle90NoSpikeFilterPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hadem'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(90.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.01),
    maxCTFTrkInnerRadius = cms.double(99999),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0.09),
    maxHLTIsolEmOverEt = cms.double(0.07),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    maxR9 = cms.double(0.98),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.004),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.04),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.06),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0.1),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(7.5),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.01),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.03),
    maxCTFTrkInnerRadius = cms.double(9999.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0.04),
    maxHLTIsolEmOverEt = cms.double(0.05),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    maxR9 = cms.double(999.0),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.007),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.025),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.03),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0.025),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(15),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.03),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleEt10LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10LWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.125),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.125),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.125),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.075),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.075),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.075),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt17_CaloIdL_CaloIsoVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(17),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.2),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle17CaloIdLCaloIsoVLPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(17),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt20SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.125),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.125),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(27.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.125),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle27CaloIdTCaloIsoTTrkIdTTrkIsoTTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.075),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad:hltIsolTrksEle:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.075),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(27.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.075),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt45_CaloIdVT_TrkIdT_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.07),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(45.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle45CaloIdVTTrkIdTDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.05),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(45.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_CaloIdL_CaloIsoVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.2),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8CaloIdLCaloIsoVLPixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:hltIsolEm:hltIsolHad'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_CaloIdL_TrkIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.01),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.15),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.014),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8CaloIdLTrkIdVLDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:dEtaIn:dPhiIn'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.01),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.035),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt8_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltEle8PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(8.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.01),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.09),
        maxHLTIsolEmOverEt = cms.double(0.07),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.004),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.04),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.06),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.1),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.01),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.04),
        maxHLTIsolEmOverEt = cms.double(0.05),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.007),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.025),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.03),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0.025),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffFiltersToMon = cms.PSet(
    eleTightLooseTrigNames = cms.vstring(),
    phoTightLooseTrigNames = cms.vstring(),
    diEleTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames = cms.vstring(),
    eleHLTFilterNames2Leg = cms.vstring(),
    eleHLTFilterNames = cms.vstring('hltEle65CaloIdVTTrkIdTDphiFilter'),
    diPhoTightLooseTrigNames = cms.vstring(),
    phoHLTFilterNames2Leg = cms.vstring()
)

process.egHLTOffPhoBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.011),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.005),
    isolHadConstTerm = cms.double(3.0),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
    maxR9 = cms.double(0.98),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999.0),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5.0),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(3.0),
    isolPtTrksGradTerm = cms.double(0.002),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.011),
    isolEmGradTerm = cms.double(0.012)
)

process.egHLTOffPhoCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.031),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.0),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.005),
    isolHadConstTerm = cms.double(3.0),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
    maxR9 = cms.double(999.0),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999.0),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5.0),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(3.0),
    isolPtTrksGradTerm = cms.double(0.002),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.031),
    isolEmGradTerm = cms.double(0.012)
)

process.egHLTOffPhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt10LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15HTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15LEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt30Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:minr9:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt125_NoSpikeFilter_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(125.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.011),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton125HEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(125.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.031),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt30_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton30CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt30_CaloIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltEG30CaloIdVLHEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt50_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(50.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton50CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(50.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt75_CaloIdVL_IsoL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltPhoton75CaloIdVLIsoLTrackIsoFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9:isolEm:isolHad:isolPtTrks'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.5),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhotonEt75_CaloIdVL_v1Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.011),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(0.98),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.15),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.024),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltEG75CaloIdVLHEFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.031),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.0),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.005),
        isolHadConstTerm = cms.double(3.0),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:sigmaIEtaIEta:hadem:maxr9'),
        maxR9 = cms.double(999.0),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.1),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999.0),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(75.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5.0),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(3.0),
        isolPtTrksGradTerm = cms.double(0.002),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.04),
        isolEmGradTerm = cms.double(0.012),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.fieldScaling = cms.PSet(
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991)
)

process.ghostTrackCommon = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5)
)

process.ghostTrackVertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    )
)

process.globalMuonParams = cms.PSet(
    d0Cut = cms.untracked.double(2.0),
    recoCuts = cms.untracked.string('isGlobalMuon && abs(eta) < 2.4'),
    z0Cut = cms.untracked.double(25.0),
    hltCuts = cms.untracked.string('abs(eta) < 2.4')
)

process.hpsTancRequireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
    )
)

process.isolationSumsCalculator = cms.PSet(
    HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    TrackConeOuterRadiusB_Endcap = cms.double(0.3),
    HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
    isolationtrackEtaSliceA_Barrel = cms.double(0.015),
    EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
    HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
    beamSpotProducer = cms.InputTag("offlineBeamSpot"),
    isolationtrackEtaSliceB_Endcap = cms.double(0.015),
    trackProducer = cms.InputTag("generalTracks"),
    isolationtrackEtaSliceA_Endcap = cms.double(0.015),
    HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
    HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
    isolationtrackThresholdB_Barrel = cms.double(0.0),
    EcalRecHitThreshEtB_Endcap = cms.double(0.11),
    isolationtrackThresholdA_Endcap = cms.double(0.0),
    EcalRecHitThreshEB_Barrel = cms.double(0.095),
    isolationtrackThresholdB_Endcap = cms.double(0.0),
    HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
    longImpactParameterA_Barrel = cms.double(0.2),
    EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
    transImpactParameterA_Barrel = cms.double(0.1),
    useNumCrystals = cms.bool(True),
    longImpactParameterB_Barrel = cms.double(0.2),
    longImpactParameterA_Endcap = cms.double(0.2),
    EcalRecHitThreshEtB_Barrel = cms.double(0.0),
    HcalTowerThreshEA_Endcap = cms.double(0.0),
    EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
    HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
    EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
    TrackConeInnerRadiusA_Endcap = cms.double(0.04),
    HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
    EcalRecHitThreshEtA_Barrel = cms.double(0.0),
    EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
    EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
    transImpactParameterA_Endcap = cms.double(0.1),
    ComponentName = cms.string('isolationSumsCalculator'),
    HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
    modulePhiBoundary = cms.double(0.0087),
    TrackConeOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
    longImpactParameterB_Endcap = cms.double(0.2),
    HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
    transImpactParameterB_Endcap = cms.double(0.1),
    EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
    TrackConeInnerRadiusB_Barrel = cms.double(0.04),
    HcalRecHitCollection = cms.InputTag("towerMaker"),
    vetoClustered = cms.bool(False),
    HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
    HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
    TrackConeInnerRadiusB_Endcap = cms.double(0.04),
    HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
    HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
    moduleEtaBoundary = cms.vdouble(0.0, 0.02, 0.43, 0.46, 0.78, 
        0.81, 1.13, 1.15, 1.45, 1.58),
    EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitThreshEA_Barrel = cms.double(0.095),
    HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitThreshEB_Endcap = cms.double(0.0),
    HcalTowerThreshEB_Endcap = cms.double(0.0),
    TrackConeOuterRadiusA_Endcap = cms.double(0.4),
    HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
    HcalTowerThreshEA_Barrel = cms.double(0.0),
    EcalRecHitThreshEtA_Endcap = cms.double(0.11),
    EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeOuterRadiusB_Barrel = cms.double(0.3),
    transImpactParameterB_Barrel = cms.double(0.1),
    isolationtrackThresholdA_Barrel = cms.double(0.0),
    HcalTowerThreshEB_Barrel = cms.double(0.0),
    EcalRecHitThreshEA_Endcap = cms.double(0.0),
    EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeInnerRadiusA_Barrel = cms.double(0.04),
    HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
    HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
    isolationtrackEtaSliceB_Barrel = cms.double(0.015),
    EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
    HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
    HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
    HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
    HcalDepth2TowerThreshEB_Barrel = cms.double(0.0)
)

process.j2tParametersCALO = cms.PSet(
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator")
)

process.j2tParametersVX = cms.PSet(
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False),
    coneSize = cms.double(0.5),
    pvSrc = cms.InputTag("offlinePrimaryVertices")
)

process.jetDQMParameters = cms.PSet(
    fillpfJIDPassFrac = cms.int32(0),
    ptBin = cms.int32(90),
    resEMFMinTight = cms.double(0.01),
    phiBin = cms.int32(70),
    fHPDMaxLoose = cms.double(0.98),
    eMin = cms.double(0.0),
    LooseCEFMax = cms.double(1.0),
    LooseCHFMin = cms.double(0.0),
    resEMFMin = cms.double(0.0),
    pMin = cms.double(0.0),
    etaMin = cms.double(-5.0),
    sigmaEtaMinTight = cms.double(0.01),
    etaMax = cms.double(5.0),
    pMax = cms.double(500.0),
    phiMax = cms.double(3.2),
    phiMin = cms.double(-3.2),
    eMax = cms.double(500.0),
    sigmaPhiMinTight = cms.double(0.01),
    TightCEFMax = cms.double(1.0),
    TightCHFMin = cms.double(0.0),
    ptMin = cms.double(10.0),
    balanceThirdJetCut = cms.double(0.2),
    pBin = cms.int32(100),
    LooseNHFMax = cms.double(0.9),
    etaBin = cms.int32(100),
    eBin = cms.int32(100),
    resEMFMinLoose = cms.double(0.01),
    makedijetselection = cms.int32(0),
    TightNHFMax = cms.double(1.0),
    n90HitsMinTight = cms.int32(4),
    ThisCEFMax = cms.double(999.0),
    fillJIDPassFrac = cms.int32(1),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    TightNEFMax = cms.double(1.0),
    asymmetryThirdJetCut = cms.double(30),
    ptMax = cms.double(100.0),
    fHPDMaxTight = cms.double(0.98),
    n90HitsMinLoose = cms.int32(1),
    ptThreshold = cms.double(20.0),
    n90HitsMin = cms.int32(-1),
    fHPDMax = cms.double(1.0),
    ThisNHFMax = cms.double(999.0),
    ThisNEFMax = cms.double(999.0),
    ThisCHFMin = cms.double(-999.0),
    LooseNEFMax = cms.double(0.9)
)

process.jptDQMParameters = cms.PSet(
    OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    Pt1HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nTracksVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    PrintDebugMessages = cms.untracked.bool(False),
    InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    deltaEtaHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    TrackSiStripHitStoNHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(500),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    EtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    HistogramPath = cms.string('JetMET/Jet/uncJPT'),
    PyHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    PhiVsEtaHistogramConfig = cms.PSet(
        NBins = cms.uint32(64),
        MaxY = cms.double(2.5),
        Min = cms.double(-3.2),
        Max = cms.double(3.2),
        Enabled = cms.bool(True),
        MinY = cms.double(-2.5),
        NBinsY = cms.uint32(50)
    ),
    OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        rpcRecHits = cms.InputTag("rpcRecHits"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    n90HitsMin = cms.int32(0),
    nAllPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    correctedPtThreshold = cms.double(3.0),
    MassHistogramConfig = cms.PSet(
        Max = cms.double(25),
        NBins = cms.uint32(25),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PzHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    AllPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fRBXHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    AllPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    deltaPhiHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    CorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    EHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    Pt2HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    JPTCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    resEMFMin = cms.double(0.0),
    AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    CorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    AllMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    PHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    ResEMFHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    Pt3HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    N90HitsHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PxHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    fHPDHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    ZSPCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDMax = cms.double(1.0),
    CorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    EtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(10),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    )
)

process.layerInfo = cms.PSet(
    TOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    TEC = cms.PSet(
        useRingSlector = cms.bool(False),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(6),
        maxRing = cms.int32(7)
    )
)

process.leadTrackFinding = cms.PSet(
    cut = cms.double(0.5),
    Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
)

process.legStuff = cms.PSet(
    option = cms.string('brNDC'),
    sizeX = cms.double(0.39),
    sizeY = cms.double(0.17),
    borderSize = cms.int32(0),
    header = cms.string(''),
    fillColor = cms.int32(0),
    posX = cms.double(0.5),
    posY = cms.double(0.72)
)

process.looseMuonParams = cms.PSet(
    d0Cut = cms.untracked.double(50),
    recoCuts = cms.untracked.string('isPFMuon && (isTrackerMuon || isGlobalMuon) && (pfIsolationR04().sumChargedHadronPt + max(pfIsolationR04().sumNeutralHadronEt + pfIsolationR04().sumPhotonEt - pfIsolationR04().sumPUPt/2,0.0))/pt < 0.20'),
    z0Cut = cms.untracked.double(100),
    hltCuts = cms.untracked.string('abs(eta) < 2.4')
)

process.looseSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.looseSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01)
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(300)
)

process.mediumSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.0047),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.54),
    BarrelMVACuts = cms.vdouble(0.6, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.mediumSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.003),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.37, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 20.0)
)

process.metDQMParameters = cms.PSet(
    allSelection = cms.bool(False),
    verbose = cms.int32(0),
    HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
    JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
    Source = cms.string('CaloMET'),
    minBiasTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_threshold1_v'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_minbias'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    lowPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_PFJet80_v*', 
            'HLT_PAJet40_v*', 
            'HLT_PAForJet40Eta3_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowptjet'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    LowPtJetThreshold = cms.double(15.0),
    printOut = cms.int32(0),
    eleTrigger = cms.PSet(
        dbLabel = cms.string('JetMETDQMTrigger'),
        hltDBKey = cms.string('jetmet_ele'),
        hltPaths = cms.vstring('HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v', 
            'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4', 
            'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v5', 
            'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v6'),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False)
    ),
    FolderName = cms.untracked.string('JetMET/MET/'),
    CleaningParameters = cms.PSet(
        tightJetIDFiltering = cms.int32(-1),
        techTrigsOR = cms.vuint32(),
        vtxchi2_max = cms.double(9999),
        tightBHFiltering = cms.bool(False),
        doPrimaryVertexCheck = cms.bool(True),
        vtxz_max = cms.double(24.0),
        vtxndof_min = cms.int32(4),
        gtLabel = cms.InputTag("gtDigis"),
        doHLTPhysicsOn = cms.bool(False),
        nvtxtrks_min = cms.int32(0),
        nvtx_min = cms.int32(1),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        trigSelection = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring(''),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_hltsel'),
            errorReplyHlt = cms.bool(False)
        ),
        HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
        techTrigsNOT = cms.vuint32(),
        techTrigsAND = cms.vuint32()
    ),
    highMETTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_MET400_v*', 
            'HLT_PAJet40ETM30_v*', 
            'HLT_PAJet60ETM30_v*'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highmet'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    HLTPathsJetMB = cms.vstring(),
    muonTrigger = cms.PSet(
        dbLabel = cms.string('JetMETDQMTrigger'),
        hltDBKey = cms.string('jetmet_muon'),
        hltPaths = cms.vstring('HLT_IsoMu20_v', 
            'HLT_IsoMu20_v8', 
            'HLT_IsoMu20_v9', 
            'HLT_IsoMu20_v10'),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        errorReplyHlt = cms.bool(False)
    ),
    PfJetCollectionLabel = cms.InputTag(""),
    DCSFilter = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
    ),
    cleanupSelection = cms.bool(True),
    PFCandidates = cms.InputTag(""),
    CaloTowersLabel = cms.InputTag("towerMaker"),
    etThreshold = cms.double(2.0),
    InputElectronLabel = cms.InputTag(""),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    HighPtJetThreshold = cms.double(60.0),
    InputTrackLabel = cms.InputTag(""),
    BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
    HBHENoiseFilterResultLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
    highPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(True),
        hltPaths = cms.vstring('HLT_PFJet400_v', 
            'HLT_PAJet120_v', 
            'HLT_PAForJet100Eta3_v'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highptjet'),
        dbLabel = cms.string('JetMETDQMTrigger'),
        errorReplyHlt = cms.bool(False)
    ),
    METCollectionLabel = cms.InputTag("met"),
    allHist = cms.bool(False),
    InputBeamSpotLabel = cms.InputTag(""),
    InputMuonLabel = cms.InputTag(""),
    HighMETThreshold = cms.double(110.0)
)

process.mipVariable = cms.PSet(
    XRangeFit = cms.double(180.0),
    ResidualWidth = cms.double(0.23),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    YRangeFit = cms.double(7.0),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    ComponentName = cms.string('mipVariable'),
    HaloDiscThreshold = cms.double(70.0)
)

process.noPrediscriminants = cms.PSet(
    BooleanOperator = cms.string('and')
)

process.options = cms.untracked.PSet(

)

process.pfElecMva = cms.PSet(
    MVACut = cms.double(-1.0)
)

process.plotPset = cms.PSet(
    PFTauHighEfficiencyLeadingPionIDMatchingEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_Matched/shrinkingConePFTauProducerMatched_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_Matched/PFJetMatchingEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDLeadingTrackFindingEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByLeadingTrackFinding/shrinkingConePFTauDiscriminationByLeadingTrackFinding_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByLeadingTrackFinding/LeadingTrackFindingEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDLeadingPionPtCutEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByLeadingPionPtCut/shrinkingConePFTauDiscriminationByLeadingPionPtCut_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByLeadingPionPtCut/LeadingPionPtCutEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDTrackIsolationUsingLeadingPionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion/TrackIsolationUsingLeadingPionEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDECALIsolationUsingLeadingPionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion/ECALIsolationUsingLeadingPionEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDElectronRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationAgainstElectron/shrinkingConePFTauDiscriminationAgainstElectron_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationAgainstElectron/AgainstElectronEff#PAR#')
    ),
    PFTauHighEfficiencyLeadingPionIDMuonRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationAgainstMuon/shrinkingConePFTauDiscriminationAgainstMuon_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/shrinkingConePFTauProducerLeadingPion_shrinkingConePFTauDiscriminationAgainstMuon/AgainstMuonEff#PAR#')
    ),
    HPSIDMatchingEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_Matched/hpsPFTauProducerMatched_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_Matched/PFJetMatchingEff#PAR#')
    ),
    HPSIDDecayModeFindingEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByDecayModeFinding/hpsPFTauDiscriminationByDecayModeFinding_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByDecayModeFinding/DecayModeFindingEff#PAR#')
    ),
    HPSIDVLooseChargedIsolationEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByVLooseChargedIsolation/hpsPFTauDiscriminationByVLooseChargedIsolation_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByVLooseChargedIsolation/VLooseChargedIsolationEff#PAR#')
    ),
    HPSIDLooseChargedIsolationEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseChargedIsolation/hpsPFTauDiscriminationByLooseChargedIsolation_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseChargedIsolation/LooseChargedIsolationEff#PAR#')
    ),
    HPSIDTightChargedIsolationEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightChargedIsolation/hpsPFTauDiscriminationByTightChargedIsolation_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightChargedIsolation/TightChargedIsolationEff#PAR#')
    ),
    HPSIDLooseIsolationEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseIsolation/hpsPFTauDiscriminationByLooseIsolation_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseIsolation/LooseIsolationEff#PAR#')
    ),
    HPSIDVLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr/VLooseCombinedIsolationDBSumPtCorrEff#PAR#')
    ),
    HPSIDLooseCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr/LooseCombinedIsolationDBSumPtCorrEff#PAR#')
    ),
    HPSIDMediumCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr/MediumCombinedIsolationDBSumPtCorrEff#PAR#')
    ),
    HPSIDTightCombinedIsolationDBSumPtCorrEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr/TightCombinedIsolationDBSumPtCorrEff#PAR#')
    ),
    HPSIDLooseElectronRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseElectronRejection/hpsPFTauDiscriminationByLooseElectronRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseElectronRejection/LooseElectronRejectionEff#PAR#')
    ),
    HPSIDMediumElectronRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumElectronRejection/hpsPFTauDiscriminationByMediumElectronRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumElectronRejection/MediumElectronRejectionEff#PAR#')
    ),
    HPSIDTightElectronRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightElectronRejection/hpsPFTauDiscriminationByTightElectronRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightElectronRejection/TightElectronRejectionEff#PAR#')
    ),
    HPSIDLooseMuonRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseMuonRejection/hpsPFTauDiscriminationByLooseMuonRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByLooseMuonRejection/LooseMuonRejectionEff#PAR#')
    ),
    HPSIDMediumMuonRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(True),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumMuonRejection/hpsPFTauDiscriminationByMediumMuonRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMediumMuonRejection/MediumMuonRejectionEff#PAR#')
    ),
    HPSIDTightMuonRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightMuonRejection/hpsPFTauDiscriminationByTightMuonRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByTightMuonRejection/TightMuonRejectionEff#PAR#')
    ),
    HPSIDMVAElectronRejectionEfficiencies = cms.PSet(
        stepByStep = cms.bool(False),
        denominator = cms.string('RecoTauV/hpsPFTauProducer_ReferenceCollection/nRef_Taus_vs_#PAR#TauVisible'),
        parameter = cms.vstring('pt', 
            'eta', 
            'phi', 
            'pileup'),
        numerator = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMVAElectronRejection/hpsPFTauDiscriminationByMVAElectronRejection_vs_#PAR#TauVisible'),
        efficiency = cms.string('RecoTauV/hpsPFTauProducer_hpsPFTauDiscriminationByMVAElectronRejection/MVAElectronRejectionEff#PAR#')
    )
)

process.ptSeedParameterization = cms.PSet(
    SMB_21 = cms.vdouble(0.918425, -0.141199, 0.0, 0.254515, -0.111848, 
        0.0),
    SMB_20 = cms.vdouble(0.861314, -0.16233, 0.0, 0.248879, -0.113879, 
        0.0),
    SMB_22 = cms.vdouble(1.308565, -0.701634, 0.0, -0.302861, 0.675785, 
        0.0),
    OL_2213 = cms.vdouble(0.563218, -0.493991, 0.0, 0.943776, -0.591751, 
        0.0),
    SME_11 = cms.vdouble(2.39479, -0.888663, 0.0, -4.604546, 3.623464, 
        0.0),
    SME_13 = cms.vdouble(0.398851, 0.028176, 0.0, 0.567015, 2.623232, 
        0.0),
    SMB_31 = cms.vdouble(0.398661, -0.024853, 0.0, 0.863324, -0.413048, 
        0.0),
    SME_32 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
        0.0),
    SME_31 = cms.vdouble(-0.588188, 0.316961, 0.0, -95.261732, 45.444051, 
        0.0),
    OL_1213 = cms.vdouble(0.960544, -0.75644, 0.0, 0.1636, 0.114178, 
        0.0),
    DT_13 = cms.vdouble(0.298842, 0.076531, -0.14293, 0.219923, -0.145026, 
        0.155638),
    DT_12 = cms.vdouble(0.176182, 0.058535, -0.090549, 0.202363, -0.203126, 
        0.222219),
    DT_14 = cms.vdouble(0.388423, 0.068698, -0.145925, 0.159515, 0.124299, 
        -0.133269),
    OL_1232 = cms.vdouble(0.162626, 0.000843, 0.0, 0.396271, 0.002791, 
        0.0),
    CSC_23 = cms.vdouble(-0.095236, 0.122061, -0.029852, -11.396689, 15.933598, 
        -4.267065),
    CSC_24 = cms.vdouble(-0.049769, 0.063087, -0.011029, -13.765978, 16.296143, 
        -4.241835),
    CSC_03 = cms.vdouble(0.498992, -0.086235, -0.025772, 2.761006, -2.667607, 
        0.72802),
    CSC_01 = cms.vdouble(0.155906, -0.000406, 0.0, 0.194022, -0.010181, 
        0.0),
    SMB_32 = cms.vdouble(0.421649, -0.111654, 0.0, -0.044613, 1.134858, 
        0.0),
    SMB_30 = cms.vdouble(0.399628, 0.014922, 0.0, 0.665622, 0.358439, 
        0.0),
    OL_2222 = cms.vdouble(0.087587, 0.005729, 0.0, 0.535169, -0.087675, 
        0.0),
    SMB_10 = cms.vdouble(1.160532, 0.148991, 0.0, 0.182785, -0.093776, 
        0.0),
    SMB_11 = cms.vdouble(1.289468, -0.139653, 0.0, 0.137191, 0.01217, 
        0.0),
    SMB_12 = cms.vdouble(1.923091, -0.913204, 0.0, 0.161556, 0.020215, 
        0.0),
    DT_23 = cms.vdouble(0.120647, 0.034743, -0.070855, 0.302427, -0.21417, 
        0.261012),
    DT_24 = cms.vdouble(0.189527, 0.037328, -0.088523, 0.251936, 0.032411, 
        0.010984),
    SME_21 = cms.vdouble(0.64895, -0.148762, 0.0, -5.07676, 6.284227, 
        0.0),
    SME_22 = cms.vdouble(-0.624708, 0.641043, 0.0, 32.581295, -19.604264, 
        0.0),
    CSC_34 = cms.vdouble(0.144321, -0.142283, 0.035636, 190.260708, -180.888643, 
        43.430395),
    CSC_02 = cms.vdouble(0.600235, -0.205683, 0.001113, 0.655625, -0.682129, 
        0.253916),
    SME_42 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
        0.0),
    SME_41 = cms.vdouble(-0.187116, 0.076415, 0.0, -58.552583, 27.933864, 
        0.0),
    SME_12 = cms.vdouble(-0.277294, 0.7616, 0.0, -0.243326, 1.446792, 
        0.0),
    DT_34 = cms.vdouble(0.049146, -0.003494, -0.010099, 0.672095, 0.36459, 
        -0.304346),
    CSC_14 = cms.vdouble(0.952517, -0.532733, 0.084601, 1.615881, -1.630744, 
        0.514139),
    OL_1222 = cms.vdouble(0.215915, 0.002556, 0.0, 0.313596, -0.021465, 
        0.0),
    CSC_13 = cms.vdouble(1.22495, -1.792358, 0.711378, 5.271848, -6.280625, 
        2.0142),
    CSC_12 = cms.vdouble(-0.363549, 0.569552, -0.173186, 7.777069, -10.203618, 
        3.478874)
)

process.pvSelector = cms.PSet(
    maxZ = cms.double(15.0),
    minNdof = cms.double(4.0),
    maxRho = cms.double(2.0),
    pvSrc = cms.InputTag("offlinePrimaryVertices")
)

process.requireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
    )
)

process.requireLeadPion = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadPion = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrack = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrackCalo = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.shrinkingConeLeadTrackFinding = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
    )
)

process.standardCompareTestAndReference = cms.PSet(
    processes = cms.PSet(
        test = cms.PSet(
            dqmDirectory = cms.string('test'),
            type = cms.string('smMC'),
            legendEntry = cms.string('no test label')
        ),
        reference = cms.PSet(
            dqmDirectory = cms.string('reference'),
            type = cms.string('smMC'),
            legendEntry = cms.string('no ref label')
        )
    )
)

process.standardDecayModeParams = cms.PSet(
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxNbrOfIterations = cms.int32(10),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionPiZeroes = cms.double(0.15),
    maxPhotonsToMerge = cms.uint32(2),
    filterTwoProngs = cms.bool(True),
    maxPiZeroMass = cms.double(0.2),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1)
)

process.standardDrawingStuff = cms.PSet(
    legends = cms.PSet(
        efficiency = cms.PSet(
            option = cms.string('brNDC'),
            sizeX = cms.double(0.39),
            sizeY = cms.double(0.17),
            borderSize = cms.int32(0),
            header = cms.string(''),
            fillColor = cms.int32(0),
            posX = cms.double(0.5),
            posY = cms.double(0.72)
        ),
        efficiency_overlay = cms.PSet(
            option = cms.string('brNDC'),
            sizeX = cms.double(0.39),
            sizeY = cms.double(0.23),
            borderSize = cms.int32(0),
            header = cms.string(''),
            fillColor = cms.int32(0),
            posX = cms.double(0.5),
            posY = cms.double(0.66)
        )
    ),
    labels = cms.PSet(
        eta = cms.PSet(
            textSize = cms.double(0.04),
            option = cms.string('brNDC'),
            text = cms.vstring('-2.5 < #eta < +2.5'),
            sizeX = cms.double(0.12),
            sizeY = cms.double(0.04),
            borderSize = cms.int32(0),
            fillColor = cms.int32(0),
            posX = cms.double(0.19),
            posY = cms.double(0.83),
            textColor = cms.int32(1),
            textAlign = cms.int32(22)
        ),
        pt = cms.PSet(
            textSize = cms.double(0.04),
            option = cms.string('brNDC'),
            text = cms.vstring('P_{T} > 5 GeV'),
            sizeX = cms.double(0.12),
            sizeY = cms.double(0.04),
            borderSize = cms.int32(0),
            fillColor = cms.int32(0),
            posX = cms.double(0.19),
            posY = cms.double(0.77),
            textColor = cms.int32(1),
            textAlign = cms.int32(22)
        )
    ),
    indOutputFileName = cms.string('#PLOT#.png'),
    drawOptionSets = cms.PSet(
        efficiency = cms.PSet(
            test = cms.PSet(
                drawOptionLegend = cms.string('p'),
                markerSize = cms.double(1.0),
                markerColor = cms.int32(4),
                lineColor = cms.int32(1),
                drawOption = cms.string('ep'),
                lineWidth = cms.int32(1),
                lineStyle = cms.int32(1),
                markerStyle = cms.int32(20)
            ),
            reference = cms.PSet(
                drawOptionLegend = cms.string('l'),
                fillColor = cms.int32(41),
                lineColor = cms.int32(1),
                drawOption = cms.string('eBand'),
                lineWidth = cms.int32(1),
                lineStyle = cms.int32(1)
            )
        )
    ),
    xAxes = cms.PSet(
        pt = cms.PSet(
            xAxisTitleSize = cms.double(0.05),
            xAxisTitle = cms.string('P_{T} / GeV'),
            xAxisTitleOffset = cms.double(0.9)
        ),
        eta = cms.PSet(
            xAxisTitleSize = cms.double(0.05),
            xAxisTitle = cms.string('#eta'),
            xAxisTitleOffset = cms.double(0.9)
        ),
        phi = cms.PSet(
            xAxisTitleSize = cms.double(0.05),
            xAxisTitle = cms.string('#phi'),
            xAxisTitleOffset = cms.double(0.9)
        ),
        pileup = cms.PSet(
            xAxisTitleSize = cms.double(0.05),
            xAxisTitle = cms.string('# of Reco Vertices'),
            xAxisTitleOffset = cms.double(0.9)
        )
    ),
    yAxes = cms.PSet(
        efficiency = cms.PSet(
            yAxisTitleOffset = cms.double(1.1),
            maxY_log = cms.double(1.8),
            maxY_linear = cms.double(1.6),
            yScale = cms.string('linear'),
            minY_linear = cms.double(0.0),
            yAxisTitle = cms.string('#varepsilon'),
            minY_log = cms.double(0.001),
            yAxisTitleSize = cms.double(0.05)
        ),
        fakeRate = cms.PSet(
            yAxisTitleOffset = cms.double(1.1),
            maxY_log = cms.double(1.8),
            maxY_linear = cms.double(1.6),
            yScale = cms.string('log'),
            minY_linear = cms.double(0.0),
            yAxisTitle = cms.string('Fake rate'),
            minY_log = cms.double(0.001),
            yAxisTitleSize = cms.double(0.05)
        )
    ),
    canvasSizeX = cms.int32(640),
    canvasSizeY = cms.int32(640),
    drawOptionEntries = cms.PSet(
        eff_overlay01 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(1),
            lineColor = cms.int32(1),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay02 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(2),
            lineColor = cms.int32(2),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay03 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(3),
            lineColor = cms.int32(3),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay04 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(4),
            lineColor = cms.int32(4),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay05 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(6),
            lineColor = cms.int32(6),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay06 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(5),
            lineColor = cms.int32(5),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay07 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(7),
            lineColor = cms.int32(7),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay08 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(28),
            lineColor = cms.int32(28),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(20)
        ),
        eff_overlay09 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(2),
            lineColor = cms.int32(2),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(29)
        ),
        eff_overlay010 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(4),
            lineColor = cms.int32(4),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(29)
        ),
        eff_overlay011 = cms.PSet(
            drawOptionLegend = cms.string('p'),
            markerSize = cms.double(1.0),
            markerColor = cms.int32(6),
            lineColor = cms.int32(6),
            drawOption = cms.string('ex0'),
            lineWidth = cms.int32(2),
            lineStyle = cms.int32(1),
            markerStyle = cms.int32(29)
        )
    )
)

process.tautagInfoModifer = cms.PSet(
    pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
    name = cms.string('TTIworkaround'),
    plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
)

process.tcTauAlgoParameters = cms.PSet(
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)

process.theJetIDParams = cms.PSet(
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True)
)

process.tightMuonParams = cms.PSet(
    d0Cut = cms.untracked.double(0.2),
    recoCuts = cms.untracked.string('isGlobalMuon && isPFMuon && isTrackerMuon && abs(eta) < 2.4 && innerTrack.hitPattern.numberOfValidPixelHits > 0 && innerTrack.hitPattern.trackerLayersWithMeasurement > 5 && (pfIsolationR04().sumChargedHadronPt + max(pfIsolationR04().sumNeutralHadronEt + pfIsolationR04().sumPhotonEt - pfIsolationR04().sumPUPt/2,0.0))/pt < 0.12 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && globalTrack.normalizedChi2 < 10 && numberOfMatches > 1'),
    z0Cut = cms.untracked.double(0.5),
    hltCuts = cms.untracked.string('abs(eta) < 2.4')
)

process.tightSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.065),
    BarrelMVACuts = cms.vdouble(0.58, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.tightSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.01),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.6, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 15.0)
)

process.trackPseudoSelectionBlock = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.trackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.trackWithVertexSelectorParams = cms.PSet(
    normalizedChi2 = cms.double(999999.0),
    d0Max = cms.double(999.0),
    numberOfValidHits = cms.uint32(0),
    vtxFallback = cms.bool(True),
    copyExtras = cms.untracked.bool(False),
    etaMax = cms.double(5.0),
    nVertices = cms.uint32(0),
    copyTrajectories = cms.untracked.bool(False),
    zetaVtx = cms.double(1.0),
    numberOfLostHits = cms.uint32(999),
    etaMin = cms.double(0.0),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    ptErrorCut = cms.double(0.2),
    ptMin = cms.double(0.3),
    numberOfValidPixelHits = cms.uint32(0),
    rhoVtx = cms.double(0.2),
    dzMax = cms.double(999.0),
    src = cms.InputTag("generalTracks"),
    ptMax = cms.double(500.0),
    quality = cms.string('highPurity'),
    useVtx = cms.bool(True)
)

process.trackerMuonParams = cms.PSet(
    d0Cut = cms.untracked.double(2.0),
    recoCuts = cms.untracked.string('isTrackerMuon && abs(eta) < 2.4'),
    z0Cut = cms.untracked.double(25.0),
    hltCuts = cms.untracked.string('abs(eta) < 2.4')
)

process.vertexCutsBlock = cms.PSet(
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    )
)

process.vertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    )
)

process.vertexSelectionBlock = cms.PSet(
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)

process.vertexTrackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.xAxisStuff = cms.PSet(
    xAxisTitleSize = cms.double(0.05),
    xAxisTitle = cms.string('P_{T} / GeV'),
    xAxisTitleOffset = cms.double(0.9)
)

process.yAxisStuff = cms.PSet(
    yAxisTitleOffset = cms.double(1.1),
    maxY_log = cms.double(1.8),
    maxY_linear = cms.double(1.6),
    yScale = cms.string('linear'),
    minY_linear = cms.double(0.0),
    yAxisTitle = cms.string('#varepsilon'),
    minY_log = cms.double(0.001),
    yAxisTitleSize = cms.double(0.05)
)

process.MultiNetIso = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZeroIso'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZeroIso'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(11)
    ))

process.RateParams = cms.VPSet(cms.PSet(
    AlgoName = cms.string('L1_BeamHalo'),
    ParErrors = cms.vdouble(917, 8.9, 0.0536, 0.000189),
    TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
    Parameters = cms.vdouble(-221700.0, 4674, -24.57, 0.0403)
), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet36'),
        ParErrors = cms.vdouble(196, 1.9, 0.0115, 4.04e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-30630.0, 573.5, -2.557, 0.003734)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu3_Jet28_Central'),
        ParErrors = cms.vdouble(0.767, 0.0074, 4.37e-05, 1.55e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(28.02, 0.8295, 0.005182, -3.804e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG12_Eta1p39'),
        ParErrors = cms.vdouble(1.67, 0.0161, 9.51e-05, 3.37e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-48.09, 8.644, -0.007349, 1.327e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet80_Central'),
        ParErrors = cms.vdouble(0.809, 0.00781, 4.61e-05, 1.64e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(2.729, 1.798, -0.0004621, 2.024e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu0_HighQ'),
        ParErrors = cms.vdouble(0.547, 0.00528, 3.12e-05, 1.11e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(5.465, 0.842, -0.0003247, 7.12e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETT220'),
        ParErrors = cms.vdouble(0.166, 0.0016, 9.45e-06, 3.35e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.1326, 0.0824, -3.825e-05, 3.86e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETM100'),
        ParErrors = cms.vdouble(0.115, 0.00111, 6.54e-06, 2.32e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.5002, 0.0287, -2.59e-05, 1.145e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG5_HTT100'),
        ParErrors = cms.vdouble(0.352, 0.0034, 2.01e-05, 7.12e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.2832, 0.4398, -0.0001367, 8.933e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG3'),
        ParErrors = cms.vdouble(724, 7.03, 0.0428, 0.00015),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-180400.0, 3289, -16.4, 0.02692)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Bsc2Plus_BptxPlus'),
        ParErrors = cms.vdouble(0.827, 0.00798, 4.72e-05, 1.67e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-332.6, 6.053, -0.02989, 5.071e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG5'),
        ParErrors = cms.vdouble(77.5, 0.752, 0.00457, 1.6e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-20080.0, 371, -1.88, 0.003111)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu0_HTT75'),
        ParErrors = cms.vdouble(0.154, 0.00149, 8.81e-06, 3.12e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.5495, 0.08488, -1.23e-05, 1.535e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG8'),
        ParErrors = cms.vdouble(0.741, 0.00715, 4.23e-05, 1.5e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2.472, 2.01, -0.0003312, 1.398e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_MuOpen_EG12'),
        ParErrors = cms.vdouble(0.391, 0.00377, 2.23e-05, 7.9e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-6.04, 0.5044, -4.981e-05, 1.392e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu7_EG5'),
        ParErrors = cms.vdouble(0.462, 0.00446, 2.64e-05, 9.34e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(19.57, 0.3116, 0.003338, -4.707e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleTauJet28'),
        ParErrors = cms.vdouble(1.44, 0.0139, 8.19e-05, 2.9e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(10.61, 4.514, 0.002078, 3.074e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu3_DoubleEG5'),
        ParErrors = cms.vdouble(0.304, 0.00294, 1.74e-05, 6.15e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-4.805, 0.3497, -2.462e-05, 9.928e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG10_Jet24_Central_deltaPhi1'),
        ParErrors = cms.vdouble(1.39, 0.0134, 7.94e-05, 2.81e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-37.21, 5.761, -0.003462, 1.259e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_TripleEG5'),
        ParErrors = cms.vdouble(0.613, 0.00592, 3.49e-05, 1.24e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-14.55, 1.521, -0.0001348, 2.72e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu3_EG5'),
        ParErrors = cms.vdouble(0.202, 0.00195, 1.15e-05, 4.08e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(13.59, -0.1493, 0.001781, -2.755e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_BeamGas_Hf'),
        ParErrors = cms.vdouble(202, 1.96, 0.0118, 4.15e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-31540.0, 521.7, -2.06, 0.002688)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_QuadJet20_Central'),
        ParErrors = cms.vdouble(0.474, 0.00458, 2.7e-05, 9.59e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-5.859, 0.5604, -0.0004361, 5.489e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet36_FwdVeto'),
        ParErrors = cms.vdouble(0.818, 0.0079, 4.68e-05, 1.66e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(8.003, 1.331, -0.004132, 8.211e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG5_HTT75'),
        ParErrors = cms.vdouble(0.343, 0.00331, 1.95e-05, 6.93e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2.418, 0.5123, -8.796e-05, 9.052e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu10_Jet36_Central'),
        ParErrors = cms.vdouble(0.277, 0.00267, 1.58e-05, 5.6e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.706, 0.2342, -2.527e-05, 4.362e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_BeamGas_Bsc'),
        ParErrors = cms.vdouble(1.33, 0.0129, 8.66e-05, 3.33e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-889.9, 17.29, -0.1058, 0.0002141)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu16'),
        ParErrors = cms.vdouble(1.23, 0.0119, 7e-05, 2.48e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(226.6, -0.3892, 0.021, -4.213e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu10'),
        ParErrors = cms.vdouble(1.67, 0.0161, 9.53e-05, 3.38e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(307.6, 1.192, 0.02778, -5.663e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu12'),
        ParErrors = cms.vdouble(1.45, 0.014, 8.25e-05, 2.93e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(278.3, 0.302, 0.02538, -5.128e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_TripleEG_8_8_5'),
        ParErrors = cms.vdouble(0.393, 0.00379, 2.24e-05, 7.94e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2.64, 0.5241, -5.105e-05, 4.443e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleForJet32_EtaOpp'),
        ParErrors = cms.vdouble(0.0765, 0.000739, 4.36e-06, 1.55e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(1.042, 0.005913, -0.0001012, 8.583e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETM50'),
        ParErrors = cms.vdouble(0.247, 0.00238, 1.41e-05, 4.99e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(1.501, 0.1614, -8.716e-05, 3.255e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG5'),
        ParErrors = cms.vdouble(1420.0, 13.8, 0.0839, 0.000294),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-382200.0, 7192, -36.99, 0.06157)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleTauJet52'),
        ParErrors = cms.vdouble(1.53, 0.0148, 8.72e-05, 3.09e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(4.432, 5.923, -0.00125, 4.003e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMuBeamHalo'),
        ParErrors = cms.vdouble(15.5, 0.149, 0.000882, 3.13e-06),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-5223, 105.5, -0.5779, 0.001169)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu7'),
        ParErrors = cms.vdouble(2.21, 0.0213, 0.000126, 4.46e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(391.7, 4.519, 0.03322, -6.835e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet92_Central'),
        ParErrors = cms.vdouble(0.573, 0.00553, 3.27e-05, 1.16e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(3.282, 0.9599, -0.000304, 1.313e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu3'),
        ParErrors = cms.vdouble(142, 1.39, 0.0087, 3.19e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(11600.0, -206.7, 2.232, -0.005963)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet16'),
        ParErrors = cms.vdouble(2720.0, 26.5, 0.164, 0.000573),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-286400.0, 4590, -13.57, 0.01042)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleTauJet32'),
        ParErrors = cms.vdouble(1.05, 0.0101, 5.96e-05, 2.11e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(16.08, 2.862, 0.001933, -1.043e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleTauJet36'),
        ParErrors = cms.vdouble(0.884, 0.00853, 5.04e-05, 1.79e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-4.067, 2.15, -0.0003057, 1.282e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Bsc2Minus_BptxMinus'),
        ParErrors = cms.vdouble(1.03, 0.0101, 6.41e-05, 2.55e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-563.2, 11, -0.07045, 0.0001489)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG12'),
        ParErrors = cms.vdouble(3.12, 0.0301, 0.000178, 6.31e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-41.86, 14.6, -0.01057, 1.945e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleIsoEG12_Eta2p17'),
        ParErrors = cms.vdouble(2.68, 0.0258, 0.000153, 5.41e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-68.49, 10.51, -0.01074, 1.996e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG12_Eta2p17'),
        ParErrors = cms.vdouble(2.76, 0.0266, 0.000157, 5.57e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-89.66, 12.44, -0.01358, 2.542e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG15'),
        ParErrors = cms.vdouble(2.47, 0.0238, 0.000141, 4.98e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(16.19, 6.582, -0.001815, 4.02e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT50_HTM30'),
        ParErrors = cms.vdouble(0.638, 0.00616, 3.64e-05, 1.29e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.772, 1.116, -0.0003465, 2.65e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_TripleJet28_Central'),
        ParErrors = cms.vdouble(0.866, 0.00836, 4.94e-05, 1.75e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(15.37, 1.152, 0.002656, 1.155e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTM50'),
        ParErrors = cms.vdouble(6.08, 0.0587, 0.000347, 1.23e-06),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-21.27, 21.11, 0.007577, 4.491e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT50_HTM50'),
        ParErrors = cms.vdouble(0.971, 0.00937, 5.54e-05, 1.96e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-6.349, 2.243, -0.0006191, 5.275e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMuOpen'),
        ParErrors = cms.vdouble(650, 6.31, 0.0383, 0.000134),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-174500.0, 3285, -16.89, 0.02808)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleForJet44_EtaOpp'),
        ParErrors = cms.vdouble(0.0222, 0.000215, 1.27e-06, 4.5e-09),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.08928, 0.002069, 3.464e-07, 1.239e-08)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG5_Jet36_deltaPhi1'),
        ParErrors = cms.vdouble(2.49, 0.024, 0.000142, 5.03e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(7.584, 10.55, 0.004835, 1.546e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet128'),
        ParErrors = cms.vdouble(0.283, 0.00273, 1.62e-05, 5.72e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(1.714, 0.2416, -0.0001174, 4.736e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet32_NotBptxOR_NotMuBeamHalo'),
        ParErrors = cms.vdouble(1.01, 0.00972, 5.75e-05, 2.04e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-37.43, 2.527, -0.005776, 1.052e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleJet44_Central'),
        ParErrors = cms.vdouble(1.47, 0.0142, 8.4e-05, 2.98e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(42.7, 3.178, 0.004426, -3.879e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu7_Jet20_Central'),
        ParErrors = cms.vdouble(0.538, 0.0052, 3.07e-05, 1.09e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(27.68, 0.2173, 0.003906, -4.363e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_InterBunch_Hf'),
        ParErrors = cms.vdouble(65300.0, 633, 3.81, 0.0134),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-10340000.0, 231000.0, -1180, 1.893)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETT260_EG5'),
        ParErrors = cms.vdouble(0.11, 0.00106, 6.26e-06, 2.22e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.5519, 0.04146, 6.584e-07, 6.336e-08)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG20'),
        ParErrors = cms.vdouble(1.93, 0.0186, 0.00011, 3.9e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(5.959, 2.663, -0.001003, 2.586e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG5_HTT50'),
        ParErrors = cms.vdouble(0.687, 0.00663, 3.92e-05, 1.39e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-6.566, 1.346, -0.000287, 2.907e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu3_Jet20_Central'),
        ParErrors = cms.vdouble(1.11, 0.0107, 6.35e-05, 2.25e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(29.36, 1.41, 0.007502, -1.804e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet92'),
        ParErrors = cms.vdouble(0.611, 0.0059, 3.49e-05, 1.24e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(1.996, 1.031, -0.0002973, 1.242e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT50'),
        ParErrors = cms.vdouble(1.52, 0.0146, 8.64e-05, 3.06e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-10.89, 3.884, -0.001037, 8.683e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETT300_EG5'),
        ParErrors = cms.vdouble(0.272, 0.00263, 1.55e-05, 5.5e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.6599, 0.03346, 3.263e-05, -3.985e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleTauJet40'),
        ParErrors = cms.vdouble(0.675, 0.00652, 3.85e-05, 1.36e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.449, 1.404, -0.0002159, 5.049e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG12_Jet24_Central_deltaPhi1'),
        ParErrors = cms.vdouble(1.13, 0.0109, 6.45e-05, 2.29e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-27.42, 4.091, -0.002958, 9.164e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_TripleEG_8_5_5'),
        ParErrors = cms.vdouble(0.577, 0.00557, 3.29e-05, 1.17e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-8.578, 1.128, -0.0001071, 1.566e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG_12_5_Eta1p39'),
        ParErrors = cms.vdouble(6.71, 0.0651, 0.000397, 1.39e-06),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1654, 30.88, -0.157, 0.0002593)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleJet36_Central'),
        ParErrors = cms.vdouble(2.21, 0.0213, 0.000126, 4.46e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(33.82, 6.255, 0.004926, 1.289e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleEG30'),
        ParErrors = cms.vdouble(0.551, 0.00532, 3.15e-05, 1.12e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(1.746, 0.7654, -0.0002219, 6.079e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu5_Eta1p5_Q80'),
        ParErrors = cms.vdouble(1.74, 0.0167, 9.89e-05, 3.51e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-394.1, 11.07, -0.03401, 5.359e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu3p5'),
        ParErrors = cms.vdouble(0.74, 0.00714, 4.22e-05, 1.5e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.123, 1.349, -0.000353, 2.354e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu0_HighQ_EtaCuts'),
        ParErrors = cms.vdouble(0.508, 0.0049, 2.89e-05, 1.03e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(7.947, 0.751, -0.0003687, 5.715e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ZeroBias'),
        ParErrors = cms.vdouble(77.9, 0.751, 0.00444, 1.57e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(2176000.0, 107, -0.6558, 0.001318)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu12_EG5'),
        ParErrors = cms.vdouble(0.328, 0.00316, 1.87e-05, 6.62e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(11.32, 0.0644, 0.00173, -2.519e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_InterBunch_Bsc'),
        ParErrors = cms.vdouble(1480.0, 14.3, 0.0845, 0.0003),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1064000.0, 62100.0, -305.5, 0.4944)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet68'),
        ParErrors = cms.vdouble(1.27, 0.0123, 7.25e-05, 2.57e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-23.88, 4.347, -0.003147, 8.809e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_BptxMinus_NotBptxPlus'),
        ParErrors = cms.vdouble(7.81, 0.0754, 0.000445, 1.58e-06),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(65200.0, 42.93, -0.2665, 0.0005436)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_BptxPlus_NotBptxMinus'),
        ParErrors = cms.vdouble(4.52, 0.0437, 0.000258, 9.14e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(66270.0, 22.82, -0.1415, 0.0002882)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu3_EG5'),
        ParErrors = cms.vdouble(0.922, 0.0089, 5.26e-05, 1.86e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(60.99, 0.967, 0.0123, -1.647e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT150'),
        ParErrors = cms.vdouble(0.251, 0.00242, 1.43e-05, 5.07e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.9649, 0.1672, -7.215e-05, 3.948e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleIsoEG10'),
        ParErrors = cms.vdouble(0.341, 0.00329, 1.94e-05, 6.89e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.2815, 0.4109, -6.543e-05, 1.158e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_QuadJet28_Central'),
        ParErrors = cms.vdouble(0.269, 0.0026, 1.54e-05, 5.45e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2.753, 0.2655, -9.579e-05, 1.405e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT75'),
        ParErrors = cms.vdouble(0.69, 0.00666, 3.93e-05, 1.39e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.871, 1.313, -0.0003372, 2.406e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_BscMinBiasOR_BptxPlusANDMinus'),
        ParErrors = cms.vdouble(500, 4.83, 0.0285, 0.000101),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(750000.0, 19710.0, -92.59, 0.1468)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_PreCollisions'),
        ParErrors = cms.vdouble(352, 3.41, 0.0206, 7.24e-05),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-69140.0, 1158, -4.805, 0.006113)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleTauJet68'),
        ParErrors = cms.vdouble(0.712, 0.00687, 4.06e-05, 1.44e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(4.248, 1.65, -0.0004169, 9.507e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleJet52'),
        ParErrors = cms.vdouble(1.07, 0.0104, 6.12e-05, 2.17e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-4.872, 2.418, -0.0004958, 3.303e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleTauJet80'),
        ParErrors = cms.vdouble(0.456, 0.0044, 2.6e-05, 9.22e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(2.613, 0.7176, -0.000204, 4.198e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu5_EG12'),
        ParErrors = cms.vdouble(0.211, 0.00203, 1.2e-05, 4.26e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.9276, 0.1799, -2.543e-05, 2.733e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_MuOpen_EG5'),
        ParErrors = cms.vdouble(1.79, 0.0173, 0.000102, 3.62e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(115.9, 1.924, 0.0295, -3.29e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet20_NotBptxOR'),
        ParErrors = cms.vdouble(2.97, 0.0286, 0.000169, 6e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-24.41, 11.01, -0.00962, 1.614e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleIsoEG12'),
        ParErrors = cms.vdouble(2.99, 0.0289, 0.000171, 6.05e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-23.41, 12.41, -0.007881, 1.412e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG5_HTT125'),
        ParErrors = cms.vdouble(0.28, 0.0027, 1.6e-05, 5.66e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.9394, 0.2254, -9.459e-05, 5.622e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu0_HTT50'),
        ParErrors = cms.vdouble(0.238, 0.0023, 1.36e-05, 4.82e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.826, 0.2027, -2.206e-05, 4.301e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETM70'),
        ParErrors = cms.vdouble(0.151, 0.00146, 8.63e-06, 3.06e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.8685, 0.05848, -4.67e-05, 1.856e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETM20'),
        ParErrors = cms.vdouble(2.74, 0.0265, 0.000156, 5.54e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-69.51, 8.269, -0.001148, 6.683e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG_12_5'),
        ParErrors = cms.vdouble(0.948, 0.00915, 5.4e-05, 1.92e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-4.085, 3.06, -0.0005698, 2.818e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG8_Jet20_Central_deltaPhi1'),
        ParErrors = cms.vdouble(2.08, 0.0201, 0.000119, 4.21e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-23.1, 9.62, 0.0005052, 1.776e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu7_TauJet16'),
        ParErrors = cms.vdouble(0.497, 0.0048, 2.83e-05, 1e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(17.17, 0.371, 0.002836, -2.271e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_TripleEG7'),
        ParErrors = cms.vdouble(0.267, 0.00258, 1.52e-05, 5.4e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.7609, 0.2553, -4.256e-05, 2.581e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG5_HTT75'),
        ParErrors = cms.vdouble(0.536, 0.00517, 3.06e-05, 1.08e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2.497, 0.9994, -0.0002386, 1.871e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet20_NotBptxOR_NotMuBeamHalo'),
        ParErrors = cms.vdouble(2.96, 0.0286, 0.000169, 5.99e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-22.21, 10.95, -0.009189, 1.524e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu25'),
        ParErrors = cms.vdouble(1.01, 0.00976, 5.77e-05, 2.04e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(173.8, -0.7411, 0.01661, -3.326e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG10'),
        ParErrors = cms.vdouble(0.456, 0.0044, 2.6e-05, 9.22e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-0.05877, 0.748, -0.0001303, 1.851e-07)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu20'),
        ParErrors = cms.vdouble(1.08, 0.0104, 6.17e-05, 2.19e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(186.1, -0.4123, 0.0174, -3.495e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu7_Barrel'),
        ParErrors = cms.vdouble(0.995, 0.0096, 5.67e-05, 2.01e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(94.78, 1.884, 0.002084, -4.637e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_HTT100'),
        ParErrors = cms.vdouble(0.421, 0.00407, 2.4e-05, 8.52e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(0.9086, 0.57, -0.0001851, 1.12e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleEG2_FwdVeto'),
        ParErrors = cms.vdouble(31.9, 0.31, 0.00192, 6.74e-06),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-2721, 68.2, -0.3894, 0.0006788)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleIsoEG12_Eta1p39'),
        ParErrors = cms.vdouble(1.52, 0.0146, 8.65e-05, 3.07e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-36.67, 7.33, -0.005623, 9.895e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_Mu3_Jet16_Central'),
        ParErrors = cms.vdouble(1.26, 0.0122, 7.19e-05, 2.55e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(54.42, 1.388, 0.01152, -4.061e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu3'),
        ParErrors = cms.vdouble(0.9, 0.00869, 5.13e-05, 1.82e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(44.72, 0.8847, 0.005398, -8.196e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu0'),
        ParErrors = cms.vdouble(1.22, 0.0118, 6.94e-05, 2.46e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(113.6, 0.3927, 0.01494, -2.432e-05)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_DoubleMu5'),
        ParErrors = cms.vdouble(0.459, 0.00443, 2.61e-05, 9.27e-08),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-1.153, 0.6484, -0.0001937, 1.474e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_EG12_TauJet20_deltaPhi1'),
        ParErrors = cms.vdouble(0.849, 0.0082, 4.84e-05, 1.72e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-35.16, 3.416, -0.003848, 9.685e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_ETM30'),
        ParErrors = cms.vdouble(0.644, 0.00622, 3.67e-05, 1.3e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-30.37, 1.8, -0.003443, 9.613e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleMu7_Eta2p1'),
        ParErrors = cms.vdouble(1.43, 0.0138, 8.18e-05, 2.9e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(115.2, 4.653, 0.003062, -6.747e-06)
    ), 
    cms.PSet(
        AlgoName = cms.string('L1_SingleJet52'),
        ParErrors = cms.vdouble(2.85, 0.0275, 0.000163, 5.77e-07),
        TemplateFunction = cms.string('[0]/x+[1]+[2]*x+[3]*x*x'),
        Parameters = cms.vdouble(-12.22, 11.63, -0.001005, 1.478e-05)
    ))

process.SingleNetBasedTauID = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
))

process.TaNC = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZero'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZero'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZero'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZero'),
        decayModeIndices = cms.vint32(11)
    ))

process.transforms = cms.VPSet(cms.PSet(
    nPiZeros = cms.uint32(0),
    transform = cms.PSet(
        max = cms.double(1.99833333333),
        transform = cms.vdouble( (0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 
            0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 
            0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 
            0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 
            0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 
            0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 
            0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 
            0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 
            0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 
            0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 
            0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 
            0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 
            0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 
            0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 
            0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 
            0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 
            0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 
            0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 
            0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 
            0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 
            0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 
            0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 
            0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 
            0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 
            0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 
            0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 
            0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 
            0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 
            0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 
            0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 
            0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 
            0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 
            0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 
            0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 
            0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 
            0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 
            0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 
            0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 
            0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 
            0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 
            0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 
            0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 
            0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 
            0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335, 
            0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 
            0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 
            0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 
            0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 
            0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 
            0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 
            0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 
            0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 
            0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 
            0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 
            0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 
            0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 
            0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 
            0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 
            0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 
            0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 
            0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 
            0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 
            0.9679163435, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0, 
            1.0, 1.0, 1.0, 1.0, 1.0 ) ),
        min = cms.double(-0.998333333333)
    ),
    nCharged = cms.uint32(3)
), 
    cms.PSet(
        nPiZeros = cms.uint32(1),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = cms.vdouble( (0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 
                0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 
                0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 
                0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 
                0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 
                0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 
                0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 
                0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 
                0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 
                0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 
                0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 
                0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 
                0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 
                0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 
                0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 
                0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 
                0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 
                0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 
                0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 
                0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 
                0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 
                0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 
                0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 
                0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 
                0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 
                0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 
                0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 
                0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 
                0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 
                0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 
                0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 
                0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 
                0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 
                0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 
                0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 
                0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 
                0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 
                0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 
                0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 
                0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 
                0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 
                0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 
                0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 
                0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364, 
                0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 
                0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 
                0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 
                0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 
                0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 
                0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 
                0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 
                0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 
                0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 
                0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 
                0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 
                0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 
                0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 
                0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 
                0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 
                0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 
                0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 
                0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 
                0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0 ) ),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = cms.vdouble( (0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 
                0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 
                0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 
                0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 
                0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 
                0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 
                0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 
                0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 
                0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 
                0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 
                0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 
                0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 
                0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 
                0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 
                0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 
                0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 
                0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 
                0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 
                0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 
                0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 
                0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 
                0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 
                0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 
                0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 
                0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 
                0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 
                0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 
                0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 
                0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 
                0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 
                0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 
                0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 
                0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 
                0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 
                0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 
                0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 
                0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 
                0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 
                0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 
                0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 
                0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 
                0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 
                0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 
                0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107, 
                0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 
                0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 
                0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 
                0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 
                0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 
                0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 
                0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 
                0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 
                0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 
                0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 
                0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 
                0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 
                0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 
                0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 
                0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 
                0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 
                0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 
                0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0 ) ),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(2),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = cms.vdouble( (0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 
                0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 
                0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 
                0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 
                0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 
                0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 
                0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 
                0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 
                0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 
                0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 
                0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 
                0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 
                0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 
                0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 
                0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 
                0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 
                0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 
                0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 
                0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 
                0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 
                0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 
                0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 
                0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 
                0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 
                0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 
                0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 
                0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 
                0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 
                0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 
                0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 
                0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 
                0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 
                0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 
                0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 
                0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 
                0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 
                0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 
                0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 
                0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 
                0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 
                0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 
                0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 
                0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 
                0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 
                0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 
                0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792, 
                0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 
                0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 
                0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 
                0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 
                0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 
                0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 
                0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 
                0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 
                0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 
                0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 
                0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 
                0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 
                0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 
                0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 
                0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 
                0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 
                0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 
                0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 
                0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0, 
                1.0, 1.0, 1.0, 1.0, 1.0 ) ),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ))

process.schedule = cms.Schedule(*[ process.raw2digi_step, process.L1Reco_step, process.reconstruction_step, process.pathALCARECOTkAlZMuMu, process.pathALCARECOMuAlCalIsolatedMu, process.pathALCARECOTkAlJpsiMuMu, process.pathALCARECOEcalCalZElectron, process.pathALCARECOEcalCalWElectron, process.pathALCARECOTkAlUpsilonMuMu, process.pathALCARECOHcalCalIsoTrk, process.pathALCARECOTkAlMuonIsolated, process.pathALCARECOSiStripCalMinBias, process.pathALCARECODtCalib, process.pathALCARECOMuAlOverlaps, process.pathALCARECOTkAlMinBias, process.pathALCARECOHcalCalMinBias, process.dqmoffline_step, process.endjob_step ])
